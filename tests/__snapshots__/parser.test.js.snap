// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse default scripts anonymous-functions.ms 1`] = `
"Chunk[1:1-23:14][
	CallExpression[1:1-1:23][Identifier[1:1-1:4][Foo](Function[1:5-3:13][ =>
		ReturnStatement[2:3-2:11][Literal[2:10-2:11][1]]
	], Literal[1:17-1:23][test])]
	CallExpression[5:1-5:23][Identifier[5:1-5:4][Foo](Literal[5:5-5:11][test], Function[5:13-7:13][ =>
		ReturnStatement[6:3-6:11][Literal[6:10-6:11][1]]
	])]
	AssignmentStatement[9:1-9:27][Identifier[9:1-9:4][Foo] = MapConstructor[9:7-9:27][
		MapKeyString[9:8-11:13][Literal[9:8-9:14][test]: Function[9:16-11:13][ =>
			ReturnStatement[10:5-10:13][Literal[10:12-10:13][1]]
		]]
	]]
	AssignmentStatement[13:1-13:19][Identifier[13:1-13:4][Foo] = ListConstructor[13:7-13:19][
		ListValue[13:8-15:13][Function[13:8-15:13][ =>
			ReturnStatement[14:5-14:13][Literal[14:12-14:13][1]]
		]]
	]]
	AssignmentStatement[17:1-21:13][Identifier[17:1-17:4][foo] = Function[17:7-21:13][ =>
		ReturnStatement[18:5-20:17][Function[18:12-20:17][ =>
			ReturnStatement[19:9-19:21][Literal[19:16-19:21][faa]]
		]]
	]]
	CallExpression[23:1-23:14][Identifier[23:1-23:6][print](CallExpression[23:7-23:14][CallExpression[23:7-23:12][Identifier[23:7-23:10][foo]()]()])]
]"
`;

exports[`parse default scripts anonymous-functions.ms 2`] = `undefined`;

exports[`parse default scripts anonymous-functions.ms 3`] = `8`;

exports[`parse default scripts anonymous-functions.ms 4`] = `5`;

exports[`parse default scripts anonymous-functions.ms unsafe 1`] = `
"Chunk[1:1-23:14][
	CallExpression[1:1-1:23][Identifier[1:1-1:4][Foo](Function[1:5-3:13][ =>
		ReturnStatement[2:3-2:11][Literal[2:10-2:11][1]]
	], Literal[1:17-1:23][test])]
	CallExpression[5:1-5:23][Identifier[5:1-5:4][Foo](Literal[5:5-5:11][test], Function[5:13-7:13][ =>
		ReturnStatement[6:3-6:11][Literal[6:10-6:11][1]]
	])]
	AssignmentStatement[9:1-9:27][Identifier[9:1-9:4][Foo] = MapConstructor[9:7-9:27][
		MapKeyString[9:8-11:13][Literal[9:8-9:14][test]: Function[9:16-11:13][ =>
			ReturnStatement[10:5-10:13][Literal[10:12-10:13][1]]
		]]
	]]
	AssignmentStatement[13:1-13:19][Identifier[13:1-13:4][Foo] = ListConstructor[13:7-13:19][
		ListValue[13:8-15:13][Function[13:8-15:13][ =>
			ReturnStatement[14:5-14:13][Literal[14:12-14:13][1]]
		]]
	]]
	AssignmentStatement[17:1-21:13][Identifier[17:1-17:4][foo] = Function[17:7-21:13][ =>
		ReturnStatement[18:5-20:17][Function[18:12-20:17][ =>
			ReturnStatement[19:9-19:21][Literal[19:16-19:21][faa]]
		]]
	]]
	CallExpression[23:1-23:14][Identifier[23:1-23:6][print](CallExpression[23:7-23:14][CallExpression[23:7-23:12][Identifier[23:7-23:10][foo]()]()])]
]"
`;

exports[`parse default scripts ascii.src 1`] = `
"Chunk[1:1-71:29][
	AssignmentStatement[1:1-1:14][Identifier[1:1-1:9][AsciiGen] = MapConstructor[1:12-1:14][]]
	AssignmentStatement[3:1-3:9][Identifier[3:1-3:4][map] = MapConstructor[3:7-3:9][]]
	AssignmentStatement[5:1-5:39][MemberExpression[5:1-5:6][Identifier[5:1-5:4][map].Identifier[5:5-5:6][a]] = ListConstructor[5:9-5:39][
		ListValue[5:10-5:18][Literal[5:10-5:18][||¯|| ]]
		ListValue[5:20-5:28][Literal[5:20-5:28][||_|| ]]
		ListValue[5:30-5:38][Literal[5:30-5:38][|| || ]]
	]]
	AssignmentStatement[6:1-6:36][MemberExpression[6:1-6:6][Identifier[6:1-6:4][map].Identifier[6:5-6:6][b]] = ListConstructor[6:9-6:36][
		ListValue[6:10-6:17][Literal[6:10-6:17][||¯/ ]]
		ListValue[6:19-6:26][Literal[6:19-6:26][|| \\\\ ]]
		ListValue[6:28-6:35][Literal[6:28-6:35][||_/ ]]
	]]
	AssignmentStatement[7:1-7:33][MemberExpression[7:1-7:6][Identifier[7:1-7:4][map].Identifier[7:5-7:6][c]] = ListConstructor[7:9-7:33][
		ListValue[7:10-7:16][Literal[7:10-7:16][||¯ ]]
		ListValue[7:18-7:24][Literal[7:18-7:24][||  ]]
		ListValue[7:26-7:32][Literal[7:26-7:32][||_ ]]
	]]
	AssignmentStatement[8:1-8:39][MemberExpression[8:1-8:6][Identifier[8:1-8:4][map].Identifier[8:5-8:6][d]] = ListConstructor[8:9-8:39][
		ListValue[8:10-8:18][Literal[8:10-8:18][||¯\\\\\\\\ ]]
		ListValue[8:20-8:28][Literal[8:20-8:28][|| // ]]
		ListValue[8:30-8:38][Literal[8:30-8:38][||//  ]]
	]]
	AssignmentStatement[9:1-9:33][MemberExpression[9:1-9:6][Identifier[9:1-9:4][map].Identifier[9:5-9:6][e]] = ListConstructor[9:9-9:33][
		ListValue[9:10-9:16][Literal[9:10-9:16][||¯ ]]
		ListValue[9:18-9:24][Literal[9:18-9:24][||- ]]
		ListValue[9:26-9:32][Literal[9:26-9:32][||_ ]]
	]]
	AssignmentStatement[10:1-10:33][MemberExpression[10:1-10:6][Identifier[10:1-10:4][map].Identifier[10:5-10:6][f]] = ListConstructor[10:9-10:33][
		ListValue[10:10-10:16][Literal[10:10-10:16][||¯ ]]
		ListValue[10:18-10:24][Literal[10:18-10:24][||_ ]]
		ListValue[10:26-10:32][Literal[10:26-10:32][||  ]]
	]]
	AssignmentStatement[11:1-11:39][MemberExpression[11:1-11:6][Identifier[11:1-11:4][map].Identifier[11:5-11:6][g]] = ListConstructor[11:9-11:39][
		ListValue[11:10-11:18][Literal[11:10-11:18][||¯¯  ]]
		ListValue[11:20-11:28][Literal[11:20-11:28][|| \\\\\\\\ ]]
		ListValue[11:30-11:38][Literal[11:30-11:38][||_|| ]]
	]]
	AssignmentStatement[12:1-12:39][MemberExpression[12:1-12:6][Identifier[12:1-12:4][map].Identifier[12:5-12:6][h]] = ListConstructor[12:9-12:39][
		ListValue[12:10-12:18][Literal[12:10-12:18][|| || ]]
		ListValue[12:20-12:28][Literal[12:20-12:28][||-|| ]]
		ListValue[12:30-12:38][Literal[12:30-12:38][|| || ]]
	]]
	AssignmentStatement[13:1-13:30][MemberExpression[13:1-13:6][Identifier[13:1-13:4][map].Identifier[13:5-13:6][i]] = ListConstructor[13:9-13:30][
		ListValue[13:10-13:15][Literal[13:10-13:15][|| ]]
		ListValue[13:17-13:22][Literal[13:17-13:22][|| ]]
		ListValue[13:24-13:29][Literal[13:24-13:29][|| ]]
	]]
	AssignmentStatement[14:1-14:39][MemberExpression[14:1-14:6][Identifier[14:1-14:4][map].Identifier[14:5-14:6][j]] = ListConstructor[14:9-14:39][
		ListValue[14:10-14:18][Literal[14:10-14:18][ ¯||¯ ]]
		ListValue[14:20-14:28][Literal[14:20-14:28][  ||  ]]
		ListValue[14:30-14:38][Literal[14:30-14:38][|_||  ]]
	]]
	AssignmentStatement[15:1-15:39][MemberExpression[15:1-15:6][Identifier[15:1-15:4][map].Identifier[15:5-15:6][k]] = ListConstructor[15:9-15:39][
		ListValue[15:10-15:18][Literal[15:10-15:18][||  / ]]
		ListValue[15:20-15:28][Literal[15:20-15:28][|| /  ]]
		ListValue[15:30-15:38][Literal[15:30-15:38][||¯\\\\\\\\ ]]
	]]
	AssignmentStatement[16:1-16:33][MemberExpression[16:1-16:6][Identifier[16:1-16:4][map].Identifier[16:5-16:6][l]] = ListConstructor[16:9-16:33][
		ListValue[16:10-16:16][Literal[16:10-16:16][||  ]]
		ListValue[16:18-16:24][Literal[16:18-16:24][||  ]]
		ListValue[16:26-16:32][Literal[16:26-16:32][||_ ]]
	]]
	AssignmentStatement[17:1-17:45][MemberExpression[17:1-17:6][Identifier[17:1-17:4][map].Identifier[17:5-17:6][m]] = ListConstructor[17:9-17:45][
		ListValue[17:10-17:20][Literal[17:10-17:20][||\\\\\\\\/|| ]]
		ListValue[17:22-17:32][Literal[17:22-17:32][||   || ]]
		ListValue[17:34-17:44][Literal[17:34-17:44][||   || ]]
	]]
	AssignmentStatement[18:1-18:45][MemberExpression[18:1-18:6][Identifier[18:1-18:4][map].Identifier[18:5-18:6][n]] = ListConstructor[18:9-18:45][
		ListValue[18:10-18:20][Literal[18:10-18:20][||\\\\\\\\ || ]]
		ListValue[18:22-18:32][Literal[18:22-18:32][|| \\\\\\\\|| ]]
		ListValue[18:34-18:44][Literal[18:34-18:44][||  \\\\|| ]]
	]]
	AssignmentStatement[19:1-19:39][MemberExpression[19:1-19:6][Identifier[19:1-19:4][map].Identifier[19:5-19:6][o]] = ListConstructor[19:9-19:39][
		ListValue[19:10-19:18][Literal[19:10-19:18][||¯|| ]]
		ListValue[19:20-19:28][Literal[19:20-19:28][|| || ]]
		ListValue[19:30-19:38][Literal[19:30-19:38][||_|| ]]
	]]
	AssignmentStatement[20:1-20:39][MemberExpression[20:1-20:6][Identifier[20:1-20:4][map].Identifier[20:5-20:6][p]] = ListConstructor[20:9-20:39][
		ListValue[20:10-20:18][Literal[20:10-20:18][||¯|| ]]
		ListValue[20:20-20:28][Literal[20:20-20:28][||_|| ]]
		ListValue[20:30-20:38][Literal[20:30-20:38][||    ]]
	]]
	AssignmentStatement[21:1-21:42][MemberExpression[21:1-21:6][Identifier[21:1-21:4][map].Identifier[21:5-21:6][q]] = ListConstructor[21:9-21:42][
		ListValue[21:10-21:19][Literal[21:10-21:19][||¯||  ]]
		ListValue[21:21-21:30][Literal[21:21-21:30][|| ||  ]]
		ListValue[21:32-21:41][Literal[21:32-21:41][||_||¬ ]]
	]]
	AssignmentStatement[22:1-22:39][MemberExpression[22:1-22:6][Identifier[22:1-22:4][map].Identifier[22:5-22:6][r]] = ListConstructor[22:9-22:39][
		ListValue[22:10-22:18][Literal[22:10-22:18][||¯|| ]]
		ListValue[22:20-22:28][Literal[22:20-22:28][||¯\\\\\\\\ ]]
		ListValue[22:30-22:38][Literal[22:30-22:38][|| || ]]
	]]
	AssignmentStatement[23:1-23:36][MemberExpression[23:1-23:6][Identifier[23:1-23:4][map].Identifier[23:5-23:6][s]] = ListConstructor[23:9-23:36][
		ListValue[23:10-23:17][Literal[23:10-23:17][||¯¯ ]]
		ListValue[23:19-23:26][Literal[23:19-23:26][ \\\\\\\\  ]]
		ListValue[23:28-23:35][Literal[23:28-23:35][__|| ]]
	]]
	AssignmentStatement[24:1-24:36][MemberExpression[24:1-24:6][Identifier[24:1-24:4][map].Identifier[24:5-24:6][t]] = ListConstructor[24:9-24:36][
		ListValue[24:10-24:17][Literal[24:10-24:17][¯||¯ ]]
		ListValue[24:19-24:26][Literal[24:19-24:26][ ||  ]]
		ListValue[24:28-24:35][Literal[24:28-24:35][ ||  ]]
	]]
	AssignmentStatement[25:1-25:39][MemberExpression[25:1-25:6][Identifier[25:1-25:4][map].Identifier[25:5-25:6][u]] = ListConstructor[25:9-25:39][
		ListValue[25:10-25:18][Literal[25:10-25:18][|| || ]]
		ListValue[25:20-25:28][Literal[25:20-25:28][|| || ]]
		ListValue[25:30-25:38][Literal[25:30-25:38][||_|| ]]
	]]
	AssignmentStatement[26:1-26:39][MemberExpression[26:1-26:6][Identifier[26:1-26:4][map].Identifier[26:5-26:6][v]] = ListConstructor[26:9-26:39][
		ListValue[26:10-26:18][Literal[26:10-26:18][\\\\\\\\ || ]]
		ListValue[26:20-26:28][Literal[26:20-26:28][ \\\\\\\\|| ]]
		ListValue[26:30-26:38][Literal[26:30-26:38][  \\\\\\\\| ]]
	]]
	AssignmentStatement[27:1-27:48][MemberExpression[27:1-27:6][Identifier[27:1-27:4][map].Identifier[27:5-27:6][w]] = ListConstructor[27:9-27:48][
		ListValue[27:10-27:21][Literal[27:10-27:21][\\\\\\\\ |\\\\\\\\ | ]]
		ListValue[27:23-27:34][Literal[27:23-27:34][ \\\\\\\\| \\\\\\\\| ]]
		ListValue[27:36-27:47][Literal[27:36-27:47][  \\\\\\\\  \\\\\\\\ ]]
	]]
	AssignmentStatement[28:1-28:39][MemberExpression[28:1-28:6][Identifier[28:1-28:4][map].Identifier[28:5-28:6][x]] = ListConstructor[28:9-28:39][
		ListValue[28:10-28:18][Literal[28:10-28:18][\\\\\\\\  / ]]
		ListValue[28:20-28:28][Literal[28:20-28:28][ \\\\\\\\/  ]]
		ListValue[28:30-28:38][Literal[28:30-28:38][ //\\\\  ]]
	]]
	AssignmentStatement[29:1-29:42][MemberExpression[29:1-29:6][Identifier[29:1-29:4][map].Identifier[29:5-29:6][y]] = ListConstructor[29:9-29:42][
		ListValue[29:10-29:19][Literal[29:10-29:19][\\\\\\\\  // ]]
		ListValue[29:21-29:30][Literal[29:21-29:30][ \\\\\\\\//  ]]
		ListValue[29:32-29:41][Literal[29:32-29:41][  ||   ]]
	]]
	AssignmentStatement[30:1-30:33][MemberExpression[30:1-30:6][Identifier[30:1-30:4][map].Identifier[30:5-30:6][z]] = ListConstructor[30:9-30:33][
		ListValue[30:10-30:16][Literal[30:10-30:16][¯// ]]
		ListValue[30:18-30:24][Literal[30:18-30:24][//  ]]
		ListValue[30:26-30:32][Literal[30:26-30:32][||_ ]]
	]]
	AssignmentStatement[31:1-31:42][IndexExpression[31:1-31:9][Identifier[31:1-31:4][map][Literal[31:5-31:8][0]]] = ListConstructor[31:12-31:42][
		ListValue[31:13-31:21][Literal[31:13-31:21][||¯|| ]]
		ListValue[31:23-31:31][Literal[31:23-31:31][||x|| ]]
		ListValue[31:33-31:41][Literal[31:33-31:41][||_|| ]]
	]]
	AssignmentStatement[32:1-32:36][IndexExpression[32:1-32:9][Identifier[32:1-32:4][map][Literal[32:5-32:8][1]]] = ListConstructor[32:12-32:36][
		ListValue[32:13-32:19][Literal[32:13-32:19]['|| ]]
		ListValue[32:21-32:27][Literal[32:21-32:27][ || ]]
		ListValue[32:29-32:35][Literal[32:29-32:35][ || ]]
	]]
	AssignmentStatement[33:1-33:39][IndexExpression[33:1-33:9][Identifier[33:1-33:4][map][Literal[33:5-33:8][2]]] = ListConstructor[33:12-33:39][
		ListValue[33:13-33:20][Literal[33:13-33:20][¯¯|| ]]
		ListValue[33:22-33:29][Literal[33:22-33:29][||¯  ]]
		ListValue[33:31-33:38][Literal[33:31-33:38][||_  ]]
	]]
	AssignmentStatement[34:1-34:36][IndexExpression[34:1-34:9][Identifier[34:1-34:4][map][Literal[34:5-34:8][3]]] = ListConstructor[34:12-34:36][
		ListValue[34:13-34:19][Literal[34:13-34:19][¯|| ]]
		ListValue[34:21-34:27][Literal[34:21-34:27][-|| ]]
		ListValue[34:29-34:35][Literal[34:29-34:35][_|| ]]
	]]
	AssignmentStatement[35:1-35:39][IndexExpression[35:1-35:9][Identifier[35:1-35:4][map][Literal[35:5-35:8][4]]] = ListConstructor[35:12-35:39][
		ListValue[35:13-35:20][Literal[35:13-35:20][ /|| ]]
		ListValue[35:22-35:29][Literal[35:22-35:29][/_|| ]]
		ListValue[35:31-35:38][Literal[35:31-35:38][  || ]]
	]]
	AssignmentStatement[36:1-36:39][IndexExpression[36:1-36:9][Identifier[36:1-36:4][map][Literal[36:5-36:8][5]]] = ListConstructor[36:12-36:39][
		ListValue[36:13-36:20][Literal[36:13-36:20][||¯¯ ]]
		ListValue[36:22-36:29][Literal[36:22-36:29][ ¯|| ]]
		ListValue[36:31-36:38][Literal[36:31-36:38][ _|| ]]
	]]
	AssignmentStatement[37:1-37:42][IndexExpression[37:1-37:9][Identifier[37:1-37:4][map][Literal[37:5-37:8][6]]] = ListConstructor[37:12-37:42][
		ListValue[37:13-37:21][Literal[37:13-37:21][||¯¯  ]]
		ListValue[37:23-37:31][Literal[37:23-37:31][||¯|| ]]
		ListValue[37:33-37:41][Literal[37:33-37:41][||_|| ]]
	]]
	AssignmentStatement[38:1-38:39][IndexExpression[38:1-38:9][Identifier[38:1-38:4][map][Literal[38:5-38:8][7]]] = ListConstructor[38:12-38:39][
		ListValue[38:13-38:20][Literal[38:13-38:20][¯¯// ]]
		ListValue[38:22-38:29][Literal[38:22-38:29][ //  ]]
		ListValue[38:31-38:38][Literal[38:31-38:38][//   ]]
	]]
	AssignmentStatement[39:1-39:42][IndexExpression[39:1-39:9][Identifier[39:1-39:4][map][Literal[39:5-39:8][8]]] = ListConstructor[39:12-39:42][
		ListValue[39:13-39:21][Literal[39:13-39:21][||¯|| ]]
		ListValue[39:23-39:31][Literal[39:23-39:31][||-|| ]]
		ListValue[39:33-39:41][Literal[39:33-39:41][||_|| ]]
	]]
	AssignmentStatement[40:1-40:42][IndexExpression[40:1-40:9][Identifier[40:1-40:4][map][Literal[40:5-40:8][9]]] = ListConstructor[40:12-40:42][
		ListValue[40:13-40:21][Literal[40:13-40:21][||¯|| ]]
		ListValue[40:23-40:31][Literal[40:23-40:31][  ¯|| ]]
		ListValue[40:33-40:41][Literal[40:33-40:41][  //  ]]
	]]
	AssignmentStatement[41:1-41:30][IndexExpression[41:1-41:9][Identifier[41:1-41:4][map][Literal[41:5-41:8][ ]]] = ListConstructor[41:12-41:30][
		ListValue[41:13-41:17][Literal[41:13-41:17][  ]]
		ListValue[41:19-41:23][Literal[41:19-41:23][  ]]
		ListValue[41:25-41:29][Literal[41:25-41:29][  ]]
	]]
	AssignmentStatement[43:1-43:19][MemberExpression[43:1-43:13][Identifier[43:1-43:9][AsciiGen].Identifier[43:10-43:13][MAP]] = Identifier[43:16-43:19][map]]
	AssignmentStatement[45:1-69:13][MemberExpression[45:1-45:13][Identifier[45:1-45:9][AsciiGen].Identifier[45:10-45:13][gen]] = Function[45:16-69:13][Identifier[45:25-45:28][str], Identifier[45:30-45:36][colors] =>
		AssignmentStatement[46:5-46:21][Identifier[46:5-46:6][r] = ListConstructor[46:9-46:21][
			ListValue[46:10-46:12][ListConstructor[46:10-46:12][]]
			ListValue[46:14-46:16][ListConstructor[46:14-46:16][]]
			ListValue[46:18-46:20][ListConstructor[46:18-46:20][]]
		]]
		AssignmentStatement[47:5-47:21][Identifier[47:5-47:10][signs] = MemberExpression[47:13-47:21][Identifier[47:13-47:17][self].Identifier[47:18-47:21][MAP]]]
		For[49:5-56:12][Identifier[49:9-49:13][char] in Identifier[49:17-49:20][str]
			AssignmentStatement[50:9-50:26][Identifier[50:9-50:13][char] = MemberExpression[50:16-50:26][Identifier[50:16-50:20][char].Identifier[50:21-50:26][lower]]]
			IfStatement[51:9-55:15][
				IfClause[51:9-55:15][CallExpression[51:13-51:33][MemberExpression[51:13-51:27][Identifier[51:13-51:18][signs].Identifier[51:19-51:27][hasIndex]](Identifier[51:28-51:32][char])]
					CallExpression[52:13-52:38][MemberExpression[52:13-52:22][IndexExpression[52:13-52:17][Identifier[52:13-52:14][r][Literal[52:15-52:16][0]]].Identifier[52:18-52:22][push]](IndexExpression[52:23-52:37][IndexExpression[52:23-52:34][Identifier[52:23-52:28][signs][Identifier[52:29-52:33][char]]][Literal[52:35-52:36][0]]])]
					CallExpression[53:13-53:38][MemberExpression[53:13-53:22][IndexExpression[53:13-53:17][Identifier[53:13-53:14][r][Literal[53:15-53:16][1]]].Identifier[53:18-53:22][push]](IndexExpression[53:23-53:37][IndexExpression[53:23-53:34][Identifier[53:23-53:28][signs][Identifier[53:29-53:33][char]]][Literal[53:35-53:36][1]]])]
					CallExpression[54:13-54:38][MemberExpression[54:13-54:22][IndexExpression[54:13-54:17][Identifier[54:13-54:14][r][Literal[54:15-54:16][2]]].Identifier[54:18-54:22][push]](IndexExpression[54:23-54:37][IndexExpression[54:23-54:34][Identifier[54:23-54:28][signs][Identifier[54:29-54:33][char]]][Literal[54:35-54:36][2]]])]
				]
			]
		]
		IfStatement[58:5-66:11][
			IfClause[58:5-62:12][BinaryExpression[58:9-58:35][CallExpression[58:9-58:23][Identifier[58:9-58:15][typeof](Identifier[58:16-58:22][colors])] == Literal[58:27-58:35][string]]
				AssignmentStatement[59:9-59:65][IndexExpression[59:9-59:13][Identifier[59:9-59:10][r][Literal[59:11-59:12][0]]] = BinaryExpression[59:16-59:65][BinaryExpression[59:16-59:50][ListConstructor[59:16-59:44][
					ListValue[59:17-59:42][BinaryExpression[59:17-59:42][BinaryExpression[59:17-59:36][Literal[59:17-59:27][<color=#] + Identifier[59:30-59:36][colors]] + Literal[59:39-59:42][>]]]
				] + IndexExpression[59:46-59:50][Identifier[59:46-59:47][r][Literal[59:48-59:49][0]]]] + ListConstructor[59:53-59:65][
					ListValue[59:54-59:64][Literal[59:54-59:64][</color>]]
				]]]
				AssignmentStatement[60:9-60:65][IndexExpression[60:9-60:13][Identifier[60:9-60:10][r][Literal[60:11-60:12][1]]] = BinaryExpression[60:16-60:65][BinaryExpression[60:16-60:50][ListConstructor[60:16-60:44][
					ListValue[60:17-60:42][BinaryExpression[60:17-60:42][BinaryExpression[60:17-60:36][Literal[60:17-60:27][<color=#] + Identifier[60:30-60:36][colors]] + Literal[60:39-60:42][>]]]
				] + IndexExpression[60:46-60:50][Identifier[60:46-60:47][r][Literal[60:48-60:49][1]]]] + ListConstructor[60:53-60:65][
					ListValue[60:54-60:64][Literal[60:54-60:64][</color>]]
				]]]
				AssignmentStatement[61:9-61:65][IndexExpression[61:9-61:13][Identifier[61:9-61:10][r][Literal[61:11-61:12][2]]] = BinaryExpression[61:16-61:65][BinaryExpression[61:16-61:50][ListConstructor[61:16-61:44][
					ListValue[61:17-61:42][BinaryExpression[61:17-61:42][BinaryExpression[61:17-61:36][Literal[61:17-61:27][<color=#] + Identifier[61:30-61:36][colors]] + Literal[61:39-61:42][>]]]
				] + IndexExpression[61:46-61:50][Identifier[61:46-61:47][r][Literal[61:48-61:49][2]]]] + ListConstructor[61:53-61:65][
					ListValue[61:54-61:64][Literal[61:54-61:64][</color>]]
				]]]
			]
			ElseifClause[62:13-66:11][BinaryExpression[62:14-62:38][CallExpression[62:14-62:28][Identifier[62:14-62:20][typeof](Identifier[62:21-62:27][colors])] == Literal[62:32-62:38][list]]
				AssignmentStatement[63:9-63:68][IndexExpression[63:9-63:13][Identifier[63:9-63:10][r][Literal[63:11-63:12][0]]] = BinaryExpression[63:16-63:68][BinaryExpression[63:16-63:53][ListConstructor[63:16-63:47][
					ListValue[63:17-63:45][BinaryExpression[63:17-63:45][BinaryExpression[63:17-63:39][Literal[63:17-63:27][<color=#] + IndexExpression[63:30-63:39][Identifier[63:30-63:36][colors][Literal[63:37-63:38][0]]]] + Literal[63:42-63:45][>]]]
				] + IndexExpression[63:49-63:53][Identifier[63:49-63:50][r][Literal[63:51-63:52][0]]]] + ListConstructor[63:56-63:68][
					ListValue[63:57-63:67][Literal[63:57-63:67][</color>]]
				]]]
				AssignmentStatement[64:9-64:68][IndexExpression[64:9-64:13][Identifier[64:9-64:10][r][Literal[64:11-64:12][1]]] = BinaryExpression[64:16-64:68][BinaryExpression[64:16-64:53][ListConstructor[64:16-64:47][
					ListValue[64:17-64:45][BinaryExpression[64:17-64:45][BinaryExpression[64:17-64:39][Literal[64:17-64:27][<color=#] + IndexExpression[64:30-64:39][Identifier[64:30-64:36][colors][Literal[64:37-64:38][1]]]] + Literal[64:42-64:45][>]]]
				] + IndexExpression[64:49-64:53][Identifier[64:49-64:50][r][Literal[64:51-64:52][1]]]] + ListConstructor[64:56-64:68][
					ListValue[64:57-64:67][Literal[64:57-64:67][</color>]]
				]]]
				AssignmentStatement[65:9-65:68][IndexExpression[65:9-65:13][Identifier[65:9-65:10][r][Literal[65:11-65:12][2]]] = BinaryExpression[65:16-65:68][BinaryExpression[65:16-65:53][ListConstructor[65:16-65:47][
					ListValue[65:17-65:45][BinaryExpression[65:17-65:45][BinaryExpression[65:17-65:39][Literal[65:17-65:27][<color=#] + IndexExpression[65:30-65:39][Identifier[65:30-65:36][colors][Literal[65:37-65:38][2]]]] + Literal[65:42-65:45][>]]]
				] + IndexExpression[65:49-65:53][Identifier[65:49-65:50][r][Literal[65:51-65:52][2]]]] + ListConstructor[65:56-65:68][
					ListValue[65:57-65:67][Literal[65:57-65:67][</color>]]
				]]]
			]
		]
		ReturnStatement[68:5-68:68][CallExpression[68:12-68:68][MemberExpression[68:12-68:62][ListConstructor[68:12-68:57][
			ListValue[68:13-68:26][CallExpression[68:13-68:26][MemberExpression[68:13-68:22][IndexExpression[68:13-68:17][Identifier[68:13-68:14][r][Literal[68:15-68:16][0]]].Identifier[68:18-68:22][join]](Literal[68:23-68:25][])]]
			ListValue[68:28-68:41][CallExpression[68:28-68:41][MemberExpression[68:28-68:37][IndexExpression[68:28-68:32][Identifier[68:28-68:29][r][Literal[68:30-68:31][1]]].Identifier[68:33-68:37][join]](Literal[68:38-68:40][])]]
			ListValue[68:43-68:56][CallExpression[68:43-68:56][MemberExpression[68:43-68:52][IndexExpression[68:43-68:47][Identifier[68:43-68:44][r][Literal[68:45-68:46][2]]].Identifier[68:48-68:52][join]](Literal[68:53-68:55][])]]
		].Identifier[68:58-68:62][join]](Literal[68:63-68:67][\\\\n])]]
	]]
	CallExpression[71:1-71:29][Identifier[71:1-71:6][print](CallExpression[71:7-71:28][MemberExpression[71:7-71:19][Identifier[71:7-71:15][AsciiGen].Identifier[71:16-71:19][gen]](Literal[71:20-71:27][Hallo])])]
]"
`;

exports[`parse default scripts ascii.src 2`] = `undefined`;

exports[`parse default scripts ascii.src 3`] = `171`;

exports[`parse default scripts ascii.src 4`] = `152`;

exports[`parse default scripts ascii.src unsafe 1`] = `
"Chunk[1:1-71:29][
	AssignmentStatement[1:1-1:14][Identifier[1:1-1:9][AsciiGen] = MapConstructor[1:12-1:14][]]
	AssignmentStatement[3:1-3:9][Identifier[3:1-3:4][map] = MapConstructor[3:7-3:9][]]
	AssignmentStatement[5:1-5:39][MemberExpression[5:1-5:6][Identifier[5:1-5:4][map].Identifier[5:5-5:6][a]] = ListConstructor[5:9-5:39][
		ListValue[5:10-5:18][Literal[5:10-5:18][||¯|| ]]
		ListValue[5:20-5:28][Literal[5:20-5:28][||_|| ]]
		ListValue[5:30-5:38][Literal[5:30-5:38][|| || ]]
	]]
	AssignmentStatement[6:1-6:36][MemberExpression[6:1-6:6][Identifier[6:1-6:4][map].Identifier[6:5-6:6][b]] = ListConstructor[6:9-6:36][
		ListValue[6:10-6:17][Literal[6:10-6:17][||¯/ ]]
		ListValue[6:19-6:26][Literal[6:19-6:26][|| \\\\ ]]
		ListValue[6:28-6:35][Literal[6:28-6:35][||_/ ]]
	]]
	AssignmentStatement[7:1-7:33][MemberExpression[7:1-7:6][Identifier[7:1-7:4][map].Identifier[7:5-7:6][c]] = ListConstructor[7:9-7:33][
		ListValue[7:10-7:16][Literal[7:10-7:16][||¯ ]]
		ListValue[7:18-7:24][Literal[7:18-7:24][||  ]]
		ListValue[7:26-7:32][Literal[7:26-7:32][||_ ]]
	]]
	AssignmentStatement[8:1-8:39][MemberExpression[8:1-8:6][Identifier[8:1-8:4][map].Identifier[8:5-8:6][d]] = ListConstructor[8:9-8:39][
		ListValue[8:10-8:18][Literal[8:10-8:18][||¯\\\\\\\\ ]]
		ListValue[8:20-8:28][Literal[8:20-8:28][|| // ]]
		ListValue[8:30-8:38][Literal[8:30-8:38][||//  ]]
	]]
	AssignmentStatement[9:1-9:33][MemberExpression[9:1-9:6][Identifier[9:1-9:4][map].Identifier[9:5-9:6][e]] = ListConstructor[9:9-9:33][
		ListValue[9:10-9:16][Literal[9:10-9:16][||¯ ]]
		ListValue[9:18-9:24][Literal[9:18-9:24][||- ]]
		ListValue[9:26-9:32][Literal[9:26-9:32][||_ ]]
	]]
	AssignmentStatement[10:1-10:33][MemberExpression[10:1-10:6][Identifier[10:1-10:4][map].Identifier[10:5-10:6][f]] = ListConstructor[10:9-10:33][
		ListValue[10:10-10:16][Literal[10:10-10:16][||¯ ]]
		ListValue[10:18-10:24][Literal[10:18-10:24][||_ ]]
		ListValue[10:26-10:32][Literal[10:26-10:32][||  ]]
	]]
	AssignmentStatement[11:1-11:39][MemberExpression[11:1-11:6][Identifier[11:1-11:4][map].Identifier[11:5-11:6][g]] = ListConstructor[11:9-11:39][
		ListValue[11:10-11:18][Literal[11:10-11:18][||¯¯  ]]
		ListValue[11:20-11:28][Literal[11:20-11:28][|| \\\\\\\\ ]]
		ListValue[11:30-11:38][Literal[11:30-11:38][||_|| ]]
	]]
	AssignmentStatement[12:1-12:39][MemberExpression[12:1-12:6][Identifier[12:1-12:4][map].Identifier[12:5-12:6][h]] = ListConstructor[12:9-12:39][
		ListValue[12:10-12:18][Literal[12:10-12:18][|| || ]]
		ListValue[12:20-12:28][Literal[12:20-12:28][||-|| ]]
		ListValue[12:30-12:38][Literal[12:30-12:38][|| || ]]
	]]
	AssignmentStatement[13:1-13:30][MemberExpression[13:1-13:6][Identifier[13:1-13:4][map].Identifier[13:5-13:6][i]] = ListConstructor[13:9-13:30][
		ListValue[13:10-13:15][Literal[13:10-13:15][|| ]]
		ListValue[13:17-13:22][Literal[13:17-13:22][|| ]]
		ListValue[13:24-13:29][Literal[13:24-13:29][|| ]]
	]]
	AssignmentStatement[14:1-14:39][MemberExpression[14:1-14:6][Identifier[14:1-14:4][map].Identifier[14:5-14:6][j]] = ListConstructor[14:9-14:39][
		ListValue[14:10-14:18][Literal[14:10-14:18][ ¯||¯ ]]
		ListValue[14:20-14:28][Literal[14:20-14:28][  ||  ]]
		ListValue[14:30-14:38][Literal[14:30-14:38][|_||  ]]
	]]
	AssignmentStatement[15:1-15:39][MemberExpression[15:1-15:6][Identifier[15:1-15:4][map].Identifier[15:5-15:6][k]] = ListConstructor[15:9-15:39][
		ListValue[15:10-15:18][Literal[15:10-15:18][||  / ]]
		ListValue[15:20-15:28][Literal[15:20-15:28][|| /  ]]
		ListValue[15:30-15:38][Literal[15:30-15:38][||¯\\\\\\\\ ]]
	]]
	AssignmentStatement[16:1-16:33][MemberExpression[16:1-16:6][Identifier[16:1-16:4][map].Identifier[16:5-16:6][l]] = ListConstructor[16:9-16:33][
		ListValue[16:10-16:16][Literal[16:10-16:16][||  ]]
		ListValue[16:18-16:24][Literal[16:18-16:24][||  ]]
		ListValue[16:26-16:32][Literal[16:26-16:32][||_ ]]
	]]
	AssignmentStatement[17:1-17:45][MemberExpression[17:1-17:6][Identifier[17:1-17:4][map].Identifier[17:5-17:6][m]] = ListConstructor[17:9-17:45][
		ListValue[17:10-17:20][Literal[17:10-17:20][||\\\\\\\\/|| ]]
		ListValue[17:22-17:32][Literal[17:22-17:32][||   || ]]
		ListValue[17:34-17:44][Literal[17:34-17:44][||   || ]]
	]]
	AssignmentStatement[18:1-18:45][MemberExpression[18:1-18:6][Identifier[18:1-18:4][map].Identifier[18:5-18:6][n]] = ListConstructor[18:9-18:45][
		ListValue[18:10-18:20][Literal[18:10-18:20][||\\\\\\\\ || ]]
		ListValue[18:22-18:32][Literal[18:22-18:32][|| \\\\\\\\|| ]]
		ListValue[18:34-18:44][Literal[18:34-18:44][||  \\\\|| ]]
	]]
	AssignmentStatement[19:1-19:39][MemberExpression[19:1-19:6][Identifier[19:1-19:4][map].Identifier[19:5-19:6][o]] = ListConstructor[19:9-19:39][
		ListValue[19:10-19:18][Literal[19:10-19:18][||¯|| ]]
		ListValue[19:20-19:28][Literal[19:20-19:28][|| || ]]
		ListValue[19:30-19:38][Literal[19:30-19:38][||_|| ]]
	]]
	AssignmentStatement[20:1-20:39][MemberExpression[20:1-20:6][Identifier[20:1-20:4][map].Identifier[20:5-20:6][p]] = ListConstructor[20:9-20:39][
		ListValue[20:10-20:18][Literal[20:10-20:18][||¯|| ]]
		ListValue[20:20-20:28][Literal[20:20-20:28][||_|| ]]
		ListValue[20:30-20:38][Literal[20:30-20:38][||    ]]
	]]
	AssignmentStatement[21:1-21:42][MemberExpression[21:1-21:6][Identifier[21:1-21:4][map].Identifier[21:5-21:6][q]] = ListConstructor[21:9-21:42][
		ListValue[21:10-21:19][Literal[21:10-21:19][||¯||  ]]
		ListValue[21:21-21:30][Literal[21:21-21:30][|| ||  ]]
		ListValue[21:32-21:41][Literal[21:32-21:41][||_||¬ ]]
	]]
	AssignmentStatement[22:1-22:39][MemberExpression[22:1-22:6][Identifier[22:1-22:4][map].Identifier[22:5-22:6][r]] = ListConstructor[22:9-22:39][
		ListValue[22:10-22:18][Literal[22:10-22:18][||¯|| ]]
		ListValue[22:20-22:28][Literal[22:20-22:28][||¯\\\\\\\\ ]]
		ListValue[22:30-22:38][Literal[22:30-22:38][|| || ]]
	]]
	AssignmentStatement[23:1-23:36][MemberExpression[23:1-23:6][Identifier[23:1-23:4][map].Identifier[23:5-23:6][s]] = ListConstructor[23:9-23:36][
		ListValue[23:10-23:17][Literal[23:10-23:17][||¯¯ ]]
		ListValue[23:19-23:26][Literal[23:19-23:26][ \\\\\\\\  ]]
		ListValue[23:28-23:35][Literal[23:28-23:35][__|| ]]
	]]
	AssignmentStatement[24:1-24:36][MemberExpression[24:1-24:6][Identifier[24:1-24:4][map].Identifier[24:5-24:6][t]] = ListConstructor[24:9-24:36][
		ListValue[24:10-24:17][Literal[24:10-24:17][¯||¯ ]]
		ListValue[24:19-24:26][Literal[24:19-24:26][ ||  ]]
		ListValue[24:28-24:35][Literal[24:28-24:35][ ||  ]]
	]]
	AssignmentStatement[25:1-25:39][MemberExpression[25:1-25:6][Identifier[25:1-25:4][map].Identifier[25:5-25:6][u]] = ListConstructor[25:9-25:39][
		ListValue[25:10-25:18][Literal[25:10-25:18][|| || ]]
		ListValue[25:20-25:28][Literal[25:20-25:28][|| || ]]
		ListValue[25:30-25:38][Literal[25:30-25:38][||_|| ]]
	]]
	AssignmentStatement[26:1-26:39][MemberExpression[26:1-26:6][Identifier[26:1-26:4][map].Identifier[26:5-26:6][v]] = ListConstructor[26:9-26:39][
		ListValue[26:10-26:18][Literal[26:10-26:18][\\\\\\\\ || ]]
		ListValue[26:20-26:28][Literal[26:20-26:28][ \\\\\\\\|| ]]
		ListValue[26:30-26:38][Literal[26:30-26:38][  \\\\\\\\| ]]
	]]
	AssignmentStatement[27:1-27:48][MemberExpression[27:1-27:6][Identifier[27:1-27:4][map].Identifier[27:5-27:6][w]] = ListConstructor[27:9-27:48][
		ListValue[27:10-27:21][Literal[27:10-27:21][\\\\\\\\ |\\\\\\\\ | ]]
		ListValue[27:23-27:34][Literal[27:23-27:34][ \\\\\\\\| \\\\\\\\| ]]
		ListValue[27:36-27:47][Literal[27:36-27:47][  \\\\\\\\  \\\\\\\\ ]]
	]]
	AssignmentStatement[28:1-28:39][MemberExpression[28:1-28:6][Identifier[28:1-28:4][map].Identifier[28:5-28:6][x]] = ListConstructor[28:9-28:39][
		ListValue[28:10-28:18][Literal[28:10-28:18][\\\\\\\\  / ]]
		ListValue[28:20-28:28][Literal[28:20-28:28][ \\\\\\\\/  ]]
		ListValue[28:30-28:38][Literal[28:30-28:38][ //\\\\  ]]
	]]
	AssignmentStatement[29:1-29:42][MemberExpression[29:1-29:6][Identifier[29:1-29:4][map].Identifier[29:5-29:6][y]] = ListConstructor[29:9-29:42][
		ListValue[29:10-29:19][Literal[29:10-29:19][\\\\\\\\  // ]]
		ListValue[29:21-29:30][Literal[29:21-29:30][ \\\\\\\\//  ]]
		ListValue[29:32-29:41][Literal[29:32-29:41][  ||   ]]
	]]
	AssignmentStatement[30:1-30:33][MemberExpression[30:1-30:6][Identifier[30:1-30:4][map].Identifier[30:5-30:6][z]] = ListConstructor[30:9-30:33][
		ListValue[30:10-30:16][Literal[30:10-30:16][¯// ]]
		ListValue[30:18-30:24][Literal[30:18-30:24][//  ]]
		ListValue[30:26-30:32][Literal[30:26-30:32][||_ ]]
	]]
	AssignmentStatement[31:1-31:42][IndexExpression[31:1-31:9][Identifier[31:1-31:4][map][Literal[31:5-31:8][0]]] = ListConstructor[31:12-31:42][
		ListValue[31:13-31:21][Literal[31:13-31:21][||¯|| ]]
		ListValue[31:23-31:31][Literal[31:23-31:31][||x|| ]]
		ListValue[31:33-31:41][Literal[31:33-31:41][||_|| ]]
	]]
	AssignmentStatement[32:1-32:36][IndexExpression[32:1-32:9][Identifier[32:1-32:4][map][Literal[32:5-32:8][1]]] = ListConstructor[32:12-32:36][
		ListValue[32:13-32:19][Literal[32:13-32:19]['|| ]]
		ListValue[32:21-32:27][Literal[32:21-32:27][ || ]]
		ListValue[32:29-32:35][Literal[32:29-32:35][ || ]]
	]]
	AssignmentStatement[33:1-33:39][IndexExpression[33:1-33:9][Identifier[33:1-33:4][map][Literal[33:5-33:8][2]]] = ListConstructor[33:12-33:39][
		ListValue[33:13-33:20][Literal[33:13-33:20][¯¯|| ]]
		ListValue[33:22-33:29][Literal[33:22-33:29][||¯  ]]
		ListValue[33:31-33:38][Literal[33:31-33:38][||_  ]]
	]]
	AssignmentStatement[34:1-34:36][IndexExpression[34:1-34:9][Identifier[34:1-34:4][map][Literal[34:5-34:8][3]]] = ListConstructor[34:12-34:36][
		ListValue[34:13-34:19][Literal[34:13-34:19][¯|| ]]
		ListValue[34:21-34:27][Literal[34:21-34:27][-|| ]]
		ListValue[34:29-34:35][Literal[34:29-34:35][_|| ]]
	]]
	AssignmentStatement[35:1-35:39][IndexExpression[35:1-35:9][Identifier[35:1-35:4][map][Literal[35:5-35:8][4]]] = ListConstructor[35:12-35:39][
		ListValue[35:13-35:20][Literal[35:13-35:20][ /|| ]]
		ListValue[35:22-35:29][Literal[35:22-35:29][/_|| ]]
		ListValue[35:31-35:38][Literal[35:31-35:38][  || ]]
	]]
	AssignmentStatement[36:1-36:39][IndexExpression[36:1-36:9][Identifier[36:1-36:4][map][Literal[36:5-36:8][5]]] = ListConstructor[36:12-36:39][
		ListValue[36:13-36:20][Literal[36:13-36:20][||¯¯ ]]
		ListValue[36:22-36:29][Literal[36:22-36:29][ ¯|| ]]
		ListValue[36:31-36:38][Literal[36:31-36:38][ _|| ]]
	]]
	AssignmentStatement[37:1-37:42][IndexExpression[37:1-37:9][Identifier[37:1-37:4][map][Literal[37:5-37:8][6]]] = ListConstructor[37:12-37:42][
		ListValue[37:13-37:21][Literal[37:13-37:21][||¯¯  ]]
		ListValue[37:23-37:31][Literal[37:23-37:31][||¯|| ]]
		ListValue[37:33-37:41][Literal[37:33-37:41][||_|| ]]
	]]
	AssignmentStatement[38:1-38:39][IndexExpression[38:1-38:9][Identifier[38:1-38:4][map][Literal[38:5-38:8][7]]] = ListConstructor[38:12-38:39][
		ListValue[38:13-38:20][Literal[38:13-38:20][¯¯// ]]
		ListValue[38:22-38:29][Literal[38:22-38:29][ //  ]]
		ListValue[38:31-38:38][Literal[38:31-38:38][//   ]]
	]]
	AssignmentStatement[39:1-39:42][IndexExpression[39:1-39:9][Identifier[39:1-39:4][map][Literal[39:5-39:8][8]]] = ListConstructor[39:12-39:42][
		ListValue[39:13-39:21][Literal[39:13-39:21][||¯|| ]]
		ListValue[39:23-39:31][Literal[39:23-39:31][||-|| ]]
		ListValue[39:33-39:41][Literal[39:33-39:41][||_|| ]]
	]]
	AssignmentStatement[40:1-40:42][IndexExpression[40:1-40:9][Identifier[40:1-40:4][map][Literal[40:5-40:8][9]]] = ListConstructor[40:12-40:42][
		ListValue[40:13-40:21][Literal[40:13-40:21][||¯|| ]]
		ListValue[40:23-40:31][Literal[40:23-40:31][  ¯|| ]]
		ListValue[40:33-40:41][Literal[40:33-40:41][  //  ]]
	]]
	AssignmentStatement[41:1-41:30][IndexExpression[41:1-41:9][Identifier[41:1-41:4][map][Literal[41:5-41:8][ ]]] = ListConstructor[41:12-41:30][
		ListValue[41:13-41:17][Literal[41:13-41:17][  ]]
		ListValue[41:19-41:23][Literal[41:19-41:23][  ]]
		ListValue[41:25-41:29][Literal[41:25-41:29][  ]]
	]]
	AssignmentStatement[43:1-43:19][MemberExpression[43:1-43:13][Identifier[43:1-43:9][AsciiGen].Identifier[43:10-43:13][MAP]] = Identifier[43:16-43:19][map]]
	AssignmentStatement[45:1-69:13][MemberExpression[45:1-45:13][Identifier[45:1-45:9][AsciiGen].Identifier[45:10-45:13][gen]] = Function[45:16-69:13][Identifier[45:25-45:28][str], Identifier[45:30-45:36][colors] =>
		AssignmentStatement[46:5-46:21][Identifier[46:5-46:6][r] = ListConstructor[46:9-46:21][
			ListValue[46:10-46:12][ListConstructor[46:10-46:12][]]
			ListValue[46:14-46:16][ListConstructor[46:14-46:16][]]
			ListValue[46:18-46:20][ListConstructor[46:18-46:20][]]
		]]
		AssignmentStatement[47:5-47:21][Identifier[47:5-47:10][signs] = MemberExpression[47:13-47:21][Identifier[47:13-47:17][self].Identifier[47:18-47:21][MAP]]]
		For[49:5-56:12][Identifier[49:9-49:13][char] in Identifier[49:17-49:20][str]
			AssignmentStatement[50:9-50:26][Identifier[50:9-50:13][char] = MemberExpression[50:16-50:26][Identifier[50:16-50:20][char].Identifier[50:21-50:26][lower]]]
			IfStatement[51:9-55:15][
				IfClause[51:9-55:15][CallExpression[51:13-51:33][MemberExpression[51:13-51:27][Identifier[51:13-51:18][signs].Identifier[51:19-51:27][hasIndex]](Identifier[51:28-51:32][char])]
					CallExpression[52:13-52:38][MemberExpression[52:13-52:22][IndexExpression[52:13-52:17][Identifier[52:13-52:14][r][Literal[52:15-52:16][0]]].Identifier[52:18-52:22][push]](IndexExpression[52:23-52:37][IndexExpression[52:23-52:34][Identifier[52:23-52:28][signs][Identifier[52:29-52:33][char]]][Literal[52:35-52:36][0]]])]
					CallExpression[53:13-53:38][MemberExpression[53:13-53:22][IndexExpression[53:13-53:17][Identifier[53:13-53:14][r][Literal[53:15-53:16][1]]].Identifier[53:18-53:22][push]](IndexExpression[53:23-53:37][IndexExpression[53:23-53:34][Identifier[53:23-53:28][signs][Identifier[53:29-53:33][char]]][Literal[53:35-53:36][1]]])]
					CallExpression[54:13-54:38][MemberExpression[54:13-54:22][IndexExpression[54:13-54:17][Identifier[54:13-54:14][r][Literal[54:15-54:16][2]]].Identifier[54:18-54:22][push]](IndexExpression[54:23-54:37][IndexExpression[54:23-54:34][Identifier[54:23-54:28][signs][Identifier[54:29-54:33][char]]][Literal[54:35-54:36][2]]])]
				]
			]
		]
		IfStatement[58:5-66:11][
			IfClause[58:5-62:12][BinaryExpression[58:9-58:35][CallExpression[58:9-58:23][Identifier[58:9-58:15][typeof](Identifier[58:16-58:22][colors])] == Literal[58:27-58:35][string]]
				AssignmentStatement[59:9-59:65][IndexExpression[59:9-59:13][Identifier[59:9-59:10][r][Literal[59:11-59:12][0]]] = BinaryExpression[59:16-59:65][BinaryExpression[59:16-59:50][ListConstructor[59:16-59:44][
					ListValue[59:17-59:42][BinaryExpression[59:17-59:42][BinaryExpression[59:17-59:36][Literal[59:17-59:27][<color=#] + Identifier[59:30-59:36][colors]] + Literal[59:39-59:42][>]]]
				] + IndexExpression[59:46-59:50][Identifier[59:46-59:47][r][Literal[59:48-59:49][0]]]] + ListConstructor[59:53-59:65][
					ListValue[59:54-59:64][Literal[59:54-59:64][</color>]]
				]]]
				AssignmentStatement[60:9-60:65][IndexExpression[60:9-60:13][Identifier[60:9-60:10][r][Literal[60:11-60:12][1]]] = BinaryExpression[60:16-60:65][BinaryExpression[60:16-60:50][ListConstructor[60:16-60:44][
					ListValue[60:17-60:42][BinaryExpression[60:17-60:42][BinaryExpression[60:17-60:36][Literal[60:17-60:27][<color=#] + Identifier[60:30-60:36][colors]] + Literal[60:39-60:42][>]]]
				] + IndexExpression[60:46-60:50][Identifier[60:46-60:47][r][Literal[60:48-60:49][1]]]] + ListConstructor[60:53-60:65][
					ListValue[60:54-60:64][Literal[60:54-60:64][</color>]]
				]]]
				AssignmentStatement[61:9-61:65][IndexExpression[61:9-61:13][Identifier[61:9-61:10][r][Literal[61:11-61:12][2]]] = BinaryExpression[61:16-61:65][BinaryExpression[61:16-61:50][ListConstructor[61:16-61:44][
					ListValue[61:17-61:42][BinaryExpression[61:17-61:42][BinaryExpression[61:17-61:36][Literal[61:17-61:27][<color=#] + Identifier[61:30-61:36][colors]] + Literal[61:39-61:42][>]]]
				] + IndexExpression[61:46-61:50][Identifier[61:46-61:47][r][Literal[61:48-61:49][2]]]] + ListConstructor[61:53-61:65][
					ListValue[61:54-61:64][Literal[61:54-61:64][</color>]]
				]]]
			]
			ElseifClause[62:13-66:11][BinaryExpression[62:14-62:38][CallExpression[62:14-62:28][Identifier[62:14-62:20][typeof](Identifier[62:21-62:27][colors])] == Literal[62:32-62:38][list]]
				AssignmentStatement[63:9-63:68][IndexExpression[63:9-63:13][Identifier[63:9-63:10][r][Literal[63:11-63:12][0]]] = BinaryExpression[63:16-63:68][BinaryExpression[63:16-63:53][ListConstructor[63:16-63:47][
					ListValue[63:17-63:45][BinaryExpression[63:17-63:45][BinaryExpression[63:17-63:39][Literal[63:17-63:27][<color=#] + IndexExpression[63:30-63:39][Identifier[63:30-63:36][colors][Literal[63:37-63:38][0]]]] + Literal[63:42-63:45][>]]]
				] + IndexExpression[63:49-63:53][Identifier[63:49-63:50][r][Literal[63:51-63:52][0]]]] + ListConstructor[63:56-63:68][
					ListValue[63:57-63:67][Literal[63:57-63:67][</color>]]
				]]]
				AssignmentStatement[64:9-64:68][IndexExpression[64:9-64:13][Identifier[64:9-64:10][r][Literal[64:11-64:12][1]]] = BinaryExpression[64:16-64:68][BinaryExpression[64:16-64:53][ListConstructor[64:16-64:47][
					ListValue[64:17-64:45][BinaryExpression[64:17-64:45][BinaryExpression[64:17-64:39][Literal[64:17-64:27][<color=#] + IndexExpression[64:30-64:39][Identifier[64:30-64:36][colors][Literal[64:37-64:38][1]]]] + Literal[64:42-64:45][>]]]
				] + IndexExpression[64:49-64:53][Identifier[64:49-64:50][r][Literal[64:51-64:52][1]]]] + ListConstructor[64:56-64:68][
					ListValue[64:57-64:67][Literal[64:57-64:67][</color>]]
				]]]
				AssignmentStatement[65:9-65:68][IndexExpression[65:9-65:13][Identifier[65:9-65:10][r][Literal[65:11-65:12][2]]] = BinaryExpression[65:16-65:68][BinaryExpression[65:16-65:53][ListConstructor[65:16-65:47][
					ListValue[65:17-65:45][BinaryExpression[65:17-65:45][BinaryExpression[65:17-65:39][Literal[65:17-65:27][<color=#] + IndexExpression[65:30-65:39][Identifier[65:30-65:36][colors][Literal[65:37-65:38][2]]]] + Literal[65:42-65:45][>]]]
				] + IndexExpression[65:49-65:53][Identifier[65:49-65:50][r][Literal[65:51-65:52][2]]]] + ListConstructor[65:56-65:68][
					ListValue[65:57-65:67][Literal[65:57-65:67][</color>]]
				]]]
			]
		]
		ReturnStatement[68:5-68:68][CallExpression[68:12-68:68][MemberExpression[68:12-68:62][ListConstructor[68:12-68:57][
			ListValue[68:13-68:26][CallExpression[68:13-68:26][MemberExpression[68:13-68:22][IndexExpression[68:13-68:17][Identifier[68:13-68:14][r][Literal[68:15-68:16][0]]].Identifier[68:18-68:22][join]](Literal[68:23-68:25][])]]
			ListValue[68:28-68:41][CallExpression[68:28-68:41][MemberExpression[68:28-68:37][IndexExpression[68:28-68:32][Identifier[68:28-68:29][r][Literal[68:30-68:31][1]]].Identifier[68:33-68:37][join]](Literal[68:38-68:40][])]]
			ListValue[68:43-68:56][CallExpression[68:43-68:56][MemberExpression[68:43-68:52][IndexExpression[68:43-68:47][Identifier[68:43-68:44][r][Literal[68:45-68:46][2]]].Identifier[68:48-68:52][join]](Literal[68:53-68:55][])]]
		].Identifier[68:58-68:62][join]](Literal[68:63-68:67][\\\\n])]]
	]]
	CallExpression[71:1-71:29][Identifier[71:1-71:6][print](CallExpression[71:7-71:28][MemberExpression[71:7-71:19][Identifier[71:7-71:15][AsciiGen].Identifier[71:16-71:19][gen]](Literal[71:20-71:27][Hallo])])]
]"
`;

exports[`parse default scripts assign-shorthands.ms 1`] = `
"Chunk[1:1-6:11][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:6][value] = BinaryExpression[1:10-1:12][Identifier[1:1-1:6][value] + Literal[1:10-1:12][12]]]
	AssignmentStatement[2:1-2:11][Identifier[2:1-2:6][value] = BinaryExpression[2:10-2:11][Identifier[2:1-2:6][value] - Literal[2:10-2:11][2]]]
	AssignmentStatement[3:1-3:11][Identifier[3:1-3:6][value] = BinaryExpression[3:10-3:11][Identifier[3:1-3:6][value] * Literal[3:10-3:11][3]]]
	AssignmentStatement[4:1-4:11][Identifier[4:1-4:6][value] = BinaryExpression[4:10-4:11][Identifier[4:1-4:6][value] / Literal[4:10-4:11][5]]]
	AssignmentStatement[5:1-5:11][Identifier[5:1-5:6][value] = BinaryExpression[5:10-5:11][Identifier[5:1-5:6][value] % Literal[5:10-5:11][4]]]
	AssignmentStatement[6:1-6:11][Identifier[6:1-6:6][value] = BinaryExpression[6:10-6:11][Identifier[6:1-6:6][value] ^ Literal[6:10-6:11][3]]]
]"
`;

exports[`parse default scripts assign-shorthands.ms 2`] = `undefined`;

exports[`parse default scripts assign-shorthands.ms 3`] = `6`;

exports[`parse default scripts assign-shorthands.ms 4`] = `6`;

exports[`parse default scripts assign-shorthands.ms unsafe 1`] = `
"Chunk[1:1-6:11][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:6][value] = BinaryExpression[1:10-1:12][Identifier[1:1-1:6][value] + Literal[1:10-1:12][12]]]
	AssignmentStatement[2:1-2:11][Identifier[2:1-2:6][value] = BinaryExpression[2:10-2:11][Identifier[2:1-2:6][value] - Literal[2:10-2:11][2]]]
	AssignmentStatement[3:1-3:11][Identifier[3:1-3:6][value] = BinaryExpression[3:10-3:11][Identifier[3:1-3:6][value] * Literal[3:10-3:11][3]]]
	AssignmentStatement[4:1-4:11][Identifier[4:1-4:6][value] = BinaryExpression[4:10-4:11][Identifier[4:1-4:6][value] / Literal[4:10-4:11][5]]]
	AssignmentStatement[5:1-5:11][Identifier[5:1-5:6][value] = BinaryExpression[5:10-5:11][Identifier[5:1-5:6][value] % Literal[5:10-5:11][4]]]
	AssignmentStatement[6:1-6:11][Identifier[6:1-6:6][value] = BinaryExpression[6:10-6:11][Identifier[6:1-6:6][value] ^ Literal[6:10-6:11][3]]]
]"
`;

exports[`parse default scripts binary-expressions.src 1`] = `
"Chunk[1:1-12:7][
	AssignmentStatement[1:1-1:7][Identifier[1:1-1:2][a] = BinaryExpression[1:6-1:7][Identifier[1:1-1:2][a] / Identifier[1:6-1:7][b]]]
	AssignmentStatement[2:1-2:7][Identifier[2:1-2:2][a] = BinaryExpression[2:6-2:7][Identifier[2:1-2:2][a] * Identifier[2:6-2:7][b]]]
	AssignmentStatement[3:1-3:7][Identifier[3:1-3:2][a] = BinaryExpression[3:6-3:7][Identifier[3:1-3:2][a] - Identifier[3:6-3:7][b]]]
	AssignmentStatement[4:1-4:7][Identifier[4:1-4:2][a] = BinaryExpression[4:6-4:7][Identifier[4:1-4:2][a] + Identifier[4:6-4:7][b]]]
	BinaryExpression[5:1-5:7][Identifier[5:1-5:2][a] << Identifier[5:6-5:7][b]]
	BinaryExpression[6:1-6:7][Identifier[6:1-6:2][a] >> Identifier[6:6-6:7][b]]
	AssignmentStatement[7:1-7:24][Identifier[7:1-7:2][w] = BinaryExpression[7:5-7:24][BinaryExpression[7:5-7:19][Identifier[7:5-7:6][a] >>> BinaryExpression[7:12-7:18][Identifier[7:12-7:13][b] << Identifier[7:17-7:18][c]]] >> Identifier[7:23-7:24][a]]]
	BinaryExpression[8:1-8:6][Identifier[8:1-8:2][a] | Identifier[8:5-8:6][b]]
	BinaryExpression[9:1-9:6][Identifier[9:1-9:2][a] & Identifier[9:5-9:6][b]]
	BinaryExpression[10:1-10:6][Identifier[10:1-10:2][a] ^ Identifier[10:5-10:6][b]]
	LogicalExpression[11:1-11:8][Identifier[11:1-11:2][a] and Identifier[11:7-11:8][b]]
	LogicalExpression[12:1-12:7][Identifier[12:1-12:2][a] or Identifier[12:6-12:7][b]]
]"
`;

exports[`parse default scripts binary-expressions.src 2`] = `undefined`;

exports[`parse default scripts binary-expressions.src 3`] = `0`;

exports[`parse default scripts binary-expressions.src 4`] = `5`;

exports[`parse default scripts binary-expressions.src unsafe 1`] = `
"Chunk[1:1-12:7][
	AssignmentStatement[1:1-1:7][Identifier[1:1-1:2][a] = BinaryExpression[1:6-1:7][Identifier[1:1-1:2][a] / Identifier[1:6-1:7][b]]]
	AssignmentStatement[2:1-2:7][Identifier[2:1-2:2][a] = BinaryExpression[2:6-2:7][Identifier[2:1-2:2][a] * Identifier[2:6-2:7][b]]]
	AssignmentStatement[3:1-3:7][Identifier[3:1-3:2][a] = BinaryExpression[3:6-3:7][Identifier[3:1-3:2][a] - Identifier[3:6-3:7][b]]]
	AssignmentStatement[4:1-4:7][Identifier[4:1-4:2][a] = BinaryExpression[4:6-4:7][Identifier[4:1-4:2][a] + Identifier[4:6-4:7][b]]]
	BinaryExpression[5:1-5:7][Identifier[5:1-5:2][a] << Identifier[5:6-5:7][b]]
	BinaryExpression[6:1-6:7][Identifier[6:1-6:2][a] >> Identifier[6:6-6:7][b]]
	AssignmentStatement[7:1-7:24][Identifier[7:1-7:2][w] = BinaryExpression[7:5-7:24][BinaryExpression[7:5-7:19][Identifier[7:5-7:6][a] >>> BinaryExpression[7:12-7:18][Identifier[7:12-7:13][b] << Identifier[7:17-7:18][c]]] >> Identifier[7:23-7:24][a]]]
	BinaryExpression[8:1-8:6][Identifier[8:1-8:2][a] | Identifier[8:5-8:6][b]]
	BinaryExpression[9:1-9:6][Identifier[9:1-9:2][a] & Identifier[9:5-9:6][b]]
	BinaryExpression[10:1-10:6][Identifier[10:1-10:2][a] ^ Identifier[10:5-10:6][b]]
	LogicalExpression[11:1-11:8][Identifier[11:1-11:2][a] and Identifier[11:7-11:8][b]]
	LogicalExpression[12:1-12:7][Identifier[12:1-12:2][a] or Identifier[12:6-12:7][b]]
]"
`;

exports[`parse default scripts call-with-spaces.ms 1`] = `
"Chunk[1:1-7:16][
	CallExpression[1:1-1:38][Identifier[1:1-1:6][print](Identifier[1:7-1:17][myVariable], Literal[1:19-1:24][abc], BinaryExpression[1:26-1:31][Literal[1:26-1:27][1] + Literal[1:30-1:31][2]], ListConstructor[1:33-1:38][
		ListValue[1:34-1:37][Identifier[1:34-1:37][was]]
	])]
	CallExpression[2:1-2:16][Identifier[2:1-2:6][print](Literal[2:7-2:16][another])]
	CallExpression[3:1-3:13][Identifier[3:1-3:6][print](Literal[3:7-3:12][see])]
	CallExpression[4:1-4:13][Identifier[4:1-4:6][print](Literal[4:7-4:13][last])]
	CallExpression[5:1-5:14][Identifier[5:1-5:6][print](Literal[5:8-5:11][123], Literal[5:13-5:14][1])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](CallExpression[6:7-6:47][Identifier[6:7-6:11][test](Literal[6:13-6:46][Press any button to continue...])])]
	CallExpression[7:1-7:16][Identifier[7:1-7:6][print](ListConstructor[7:7-7:16][
		ListValue[7:8-7:9][Literal[7:8-7:9][1]]
		ListValue[7:10-7:11][Literal[7:10-7:11][2]]
		ListValue[7:12-7:13][Literal[7:12-7:13][3]]
		ListValue[7:14-7:15][Literal[7:14-7:15][4]]
	])]
]"
`;

exports[`parse default scripts call-with-spaces.ms 2`] = `undefined`;

exports[`parse default scripts call-with-spaces.ms 3`] = `13`;

exports[`parse default scripts call-with-spaces.ms 4`] = `0`;

exports[`parse default scripts call-with-spaces.ms unsafe 1`] = `
"Chunk[1:1-7:16][
	CallExpression[1:1-1:38][Identifier[1:1-1:6][print](Identifier[1:7-1:17][myVariable], Literal[1:19-1:24][abc], BinaryExpression[1:26-1:31][Literal[1:26-1:27][1] + Literal[1:30-1:31][2]], ListConstructor[1:33-1:38][
		ListValue[1:34-1:37][Identifier[1:34-1:37][was]]
	])]
	CallExpression[2:1-2:16][Identifier[2:1-2:6][print](Literal[2:7-2:16][another])]
	CallExpression[3:1-3:13][Identifier[3:1-3:6][print](Literal[3:7-3:12][see])]
	CallExpression[4:1-4:13][Identifier[4:1-4:6][print](Literal[4:7-4:13][last])]
	CallExpression[5:1-5:14][Identifier[5:1-5:6][print](Literal[5:8-5:11][123], Literal[5:13-5:14][1])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](CallExpression[6:7-6:47][Identifier[6:7-6:11][test](Literal[6:13-6:46][Press any button to continue...])])]
	CallExpression[7:1-7:16][Identifier[7:1-7:6][print](ListConstructor[7:7-7:16][
		ListValue[7:8-7:9][Literal[7:8-7:9][1]]
		ListValue[7:10-7:11][Literal[7:10-7:11][2]]
		ListValue[7:12-7:13][Literal[7:12-7:13][3]]
		ListValue[7:14-7:15][Literal[7:14-7:15][4]]
	])]
]"
`;

exports[`parse default scripts callexpr-with-nl.ms 1`] = `
"Chunk[1:1-7:2][
	CallExpression[1:1-7:2][Identifier[1:1-1:2][x](Literal[2:5-2:6][1], Literal[3:5-3:6][2], Literal[4:5-4:6][3], Literal[5:5-5:6][4], Literal[6:5-6:6][5])]
]"
`;

exports[`parse default scripts callexpr-with-nl.ms 2`] = `undefined`;

exports[`parse default scripts callexpr-with-nl.ms 3`] = `5`;

exports[`parse default scripts callexpr-with-nl.ms 4`] = `0`;

exports[`parse default scripts callexpr-with-nl.ms unsafe 1`] = `
"Chunk[1:1-7:2][
	CallExpression[1:1-7:2][Identifier[1:1-1:2][x](Literal[2:5-2:6][1], Literal[3:5-3:6][2], Literal[4:5-4:6][3], Literal[5:5-5:6][4], Literal[6:5-6:6][5])]
]"
`;

exports[`parse default scripts comments.ms 1`] = `
"Chunk[1:1-3:20][
	Comment[1:1-1:10][comment]
	Identifier[2:1-2:11][myVariable]
	Comment[2:12-2:22][comment2]
	AssignmentStatement[3:1-3:9][Identifier[3:1-3:5][test] = Literal[3:8-3:9][2]]
	Comment[3:10-3:20][comment3]
]"
`;

exports[`parse default scripts comments.ms 2`] = `undefined`;

exports[`parse default scripts comments.ms 3`] = `1`;

exports[`parse default scripts comments.ms 4`] = `1`;

exports[`parse default scripts comments.ms unsafe 1`] = `
"Chunk[1:1-3:20][
	Comment[1:1-1:10][comment]
	Identifier[2:1-2:11][myVariable]
	Comment[2:12-2:22][comment2]
	AssignmentStatement[3:1-3:9][Identifier[3:1-3:5][test] = Literal[3:8-3:9][2]]
	Comment[3:10-3:20][comment3]
]"
`;

exports[`parse default scripts default-args.ms 1`] = `
"Chunk[1:1-12:13][
	AssignmentStatement[1:1-4:13][Identifier[1:1-1:5][test] = Function[1:8-4:13][AssignmentStatement[1:17-1:25][Identifier[1:17-1:21][arg1] = Literal[1:24-1:25][0]], AssignmentStatement[1:27-1:40][Identifier[1:27-1:31][arg2] = Literal[1:34-1:40][test]] =>
		CallExpression[2:5-2:16][Identifier[2:5-2:10][print](Identifier[2:11-2:15][arg1])]
		CallExpression[3:5-3:16][Identifier[3:5-3:10][print](Identifier[3:11-3:15][arg2])]
	]]
	CallExpression[6:1-6:7][Identifier[6:1-6:5][test]()]
	CallExpression[7:1-7:19][Identifier[7:1-7:5][test](Literal[7:6-7:11][foo], Literal[7:13-7:18][false])]
	AssignmentStatement[9:1-12:13][Identifier[9:1-9:4][bar] = Function[9:7-12:13][AssignmentStatement[9:16-9:25][Identifier[9:16-9:20][arg1] = BinaryNegatedExpression[9:23-9:25][- Literal[9:24-9:25][1]]], AssignmentStatement[9:27-9:38][Identifier[9:27-9:31][arg2] = Literal[9:34-9:38][null]] =>
		CallExpression[10:5-10:16][Identifier[10:5-10:10][print](Identifier[10:11-10:15][arg1])]
		CallExpression[11:5-11:16][Identifier[11:5-11:10][print](Identifier[11:11-11:15][arg2])]
	]]
]"
`;

exports[`parse default scripts default-args.ms 2`] = `undefined`;

exports[`parse default scripts default-args.ms 3`] = `6`;

exports[`parse default scripts default-args.ms 4`] = `2`;

exports[`parse default scripts default-args.ms unsafe 1`] = `
"Chunk[1:1-12:13][
	AssignmentStatement[1:1-4:13][Identifier[1:1-1:5][test] = Function[1:8-4:13][AssignmentStatement[1:17-1:25][Identifier[1:17-1:21][arg1] = Literal[1:24-1:25][0]], AssignmentStatement[1:27-1:40][Identifier[1:27-1:31][arg2] = Literal[1:34-1:40][test]] =>
		CallExpression[2:5-2:16][Identifier[2:5-2:10][print](Identifier[2:11-2:15][arg1])]
		CallExpression[3:5-3:16][Identifier[3:5-3:10][print](Identifier[3:11-3:15][arg2])]
	]]
	CallExpression[6:1-6:7][Identifier[6:1-6:5][test]()]
	CallExpression[7:1-7:19][Identifier[7:1-7:5][test](Literal[7:6-7:11][foo], Literal[7:13-7:18][false])]
	AssignmentStatement[9:1-12:13][Identifier[9:1-9:4][bar] = Function[9:7-12:13][AssignmentStatement[9:16-9:25][Identifier[9:16-9:20][arg1] = BinaryNegatedExpression[9:23-9:25][- Literal[9:24-9:25][1]]], AssignmentStatement[9:27-9:38][Identifier[9:27-9:31][arg2] = Literal[9:34-9:38][null]] =>
		CallExpression[10:5-10:16][Identifier[10:5-10:10][print](Identifier[10:11-10:15][arg1])]
		CallExpression[11:5-11:16][Identifier[11:5-11:10][print](Identifier[11:11-11:15][arg2])]
	]]
]"
`;

exports[`parse default scripts eol.ms 1`] = `
"Chunk[1:1-13:9][
	IfStatement[1:1-5:7][
		IfClause[1:1-3:5][Literal[1:5-1:9][true]
			CallExpression[2:5-2:18][Identifier[2:5-2:10][print](Literal[2:11-2:17][true])]
		]
		ElseClause[3:5-5:7][
			CallExpression[4:5-4:19][Identifier[4:5-4:10][print](Literal[4:11-4:18][false])]
		}]
	]
	WhileStatement[7:1-9:10][Literal[7:8-7:13][false]
		CallExpression[8:5-8:17][Identifier[8:5-8:10][print](Literal[8:11-8:16][foo])]
	]
	For[11:1-13:8][Identifier[11:5-11:8][foo] in ListConstructor[11:12-11:14][]
		CallExpression[12:5-12:17][Identifier[12:5-12:10][print](Literal[12:11-12:16][foo])]
	]
]"
`;

exports[`parse default scripts eol.ms 2`] = `undefined`;

exports[`parse default scripts eol.ms 3`] = `6`;

exports[`parse default scripts eol.ms 4`] = `2`;

exports[`parse default scripts eol.ms unsafe 1`] = `
"Chunk[1:1-13:9][
	IfStatement[1:1-5:7][
		IfClause[1:1-3:5][Literal[1:5-1:9][true]
			CallExpression[2:5-2:18][Identifier[2:5-2:10][print](Literal[2:11-2:17][true])]
		]
		ElseClause[3:5-5:7][
			CallExpression[4:5-4:19][Identifier[4:5-4:10][print](Literal[4:11-4:18][false])]
		}]
	]
	WhileStatement[7:1-9:10][Literal[7:8-7:13][false]
		CallExpression[8:5-8:17][Identifier[8:5-8:10][print](Literal[8:11-8:16][foo])]
	]
	For[11:1-13:8][Identifier[11:5-11:8][foo] in ListConstructor[11:12-11:14][]
		CallExpression[12:5-12:17][Identifier[12:5-12:10][print](Literal[12:11-12:16][foo])]
	]
]"
`;

exports[`parse default scripts file-expression.src 1`] = `
"Chunk[1:1-2:17][
	CallExpression[1:1-1:16][Identifier[1:1-1:6][print](FeatureFileExpression[1:7-1:16][])]
	AssignmentStatement[2:1-2:17][Identifier[2:1-2:5][test] = FeatureFileExpression[2:8-2:17][]]
]"
`;

exports[`parse default scripts file-expression.src 2`] = `undefined`;

exports[`parse default scripts file-expression.src 3`] = `0`;

exports[`parse default scripts file-expression.src 4`] = `1`;

exports[`parse default scripts file-expression.src unsafe 1`] = `
"Chunk[1:1-2:17][
	CallExpression[1:1-1:16][Identifier[1:1-1:6][print](FeatureFileExpression[1:7-1:16][])]
	AssignmentStatement[2:1-2:17][Identifier[2:1-2:5][test] = FeatureFileExpression[2:8-2:17][]]
]"
`;

exports[`parse default scripts float.ms 1`] = `
"Chunk[1:1-19:25][
	AssignmentStatement[1:1-1:14][Identifier[1:1-1:10][integer_1] = Literal[1:13-1:14][1]]
	AssignmentStatement[2:1-2:15][Identifier[2:1-2:10][integer_2] = Literal[2:13-2:15][21]]
	AssignmentStatement[3:1-3:16][Identifier[3:1-3:10][integer_3] = Literal[3:13-3:16][321]]
	AssignmentStatement[4:1-4:17][Identifier[4:1-4:10][integer_4] = Literal[4:13-4:17][4321]]
	AssignmentStatement[5:1-5:18][Identifier[5:1-5:10][integer_5] = Literal[5:13-5:18][54321]]
	AssignmentStatement[6:1-6:19][Identifier[6:1-6:10][integer_6] = Literal[6:13-6:19][654321]]
	AssignmentStatement[7:1-7:20][Identifier[7:1-7:10][integer_7] = Literal[7:13-7:20][7654321]]
	AssignmentStatement[8:1-8:21][Identifier[8:1-8:10][integer_8] = Literal[8:13-8:21][87654321]]
	AssignmentStatement[9:1-9:22][Identifier[9:1-9:10][integer_9] = Literal[9:13-9:22][987654321]]
	AssignmentStatement[10:1-10:14][Identifier[10:1-10:10][integer_0] = Literal[10:13-10:14][0]]
	AssignmentStatement[12:1-12:14][Identifier[12:1-12:8][float_1] = Literal[12:11-12:14][1.1]]
	AssignmentStatement[13:1-13:17][Identifier[13:1-13:8][float_2] = Literal[13:11-13:17][10.125]]
	AssignmentStatement[14:1-14:15][Identifier[14:1-14:8][float_3] = Literal[14:11-14:15][0.125]]
	AssignmentStatement[15:1-15:13][Identifier[15:1-15:8][float_4] = Literal[15:11-15:13][0.1]]
	AssignmentStatement[17:1-17:23][Identifier[17:1-17:17][negative_integer] = BinaryNegatedExpression[17:20-17:23][- Literal[17:21-17:23][22]]]
	AssignmentStatement[18:1-18:22][Identifier[18:1-18:15][negative_float] = BinaryNegatedExpression[18:18-18:22][- Literal[18:19-18:22][2.5]]]
	AssignmentStatement[19:1-19:25][Identifier[19:1-19:17][negative_float_2] = BinaryNegatedExpression[19:20-19:25][- Literal[19:21-19:25][0.525]]]
]"
`;

exports[`parse default scripts float.ms 2`] = `undefined`;

exports[`parse default scripts float.ms 3`] = `17`;

exports[`parse default scripts float.ms 4`] = `17`;

exports[`parse default scripts float.ms unsafe 1`] = `
"Chunk[1:1-19:25][
	AssignmentStatement[1:1-1:14][Identifier[1:1-1:10][integer_1] = Literal[1:13-1:14][1]]
	AssignmentStatement[2:1-2:15][Identifier[2:1-2:10][integer_2] = Literal[2:13-2:15][21]]
	AssignmentStatement[3:1-3:16][Identifier[3:1-3:10][integer_3] = Literal[3:13-3:16][321]]
	AssignmentStatement[4:1-4:17][Identifier[4:1-4:10][integer_4] = Literal[4:13-4:17][4321]]
	AssignmentStatement[5:1-5:18][Identifier[5:1-5:10][integer_5] = Literal[5:13-5:18][54321]]
	AssignmentStatement[6:1-6:19][Identifier[6:1-6:10][integer_6] = Literal[6:13-6:19][654321]]
	AssignmentStatement[7:1-7:20][Identifier[7:1-7:10][integer_7] = Literal[7:13-7:20][7654321]]
	AssignmentStatement[8:1-8:21][Identifier[8:1-8:10][integer_8] = Literal[8:13-8:21][87654321]]
	AssignmentStatement[9:1-9:22][Identifier[9:1-9:10][integer_9] = Literal[9:13-9:22][987654321]]
	AssignmentStatement[10:1-10:14][Identifier[10:1-10:10][integer_0] = Literal[10:13-10:14][0]]
	AssignmentStatement[12:1-12:14][Identifier[12:1-12:8][float_1] = Literal[12:11-12:14][1.1]]
	AssignmentStatement[13:1-13:17][Identifier[13:1-13:8][float_2] = Literal[13:11-13:17][10.125]]
	AssignmentStatement[14:1-14:15][Identifier[14:1-14:8][float_3] = Literal[14:11-14:15][0.125]]
	AssignmentStatement[15:1-15:13][Identifier[15:1-15:8][float_4] = Literal[15:11-15:13][0.1]]
	AssignmentStatement[17:1-17:23][Identifier[17:1-17:17][negative_integer] = BinaryNegatedExpression[17:20-17:23][- Literal[17:21-17:23][22]]]
	AssignmentStatement[18:1-18:22][Identifier[18:1-18:15][negative_float] = BinaryNegatedExpression[18:18-18:22][- Literal[18:19-18:22][2.5]]]
	AssignmentStatement[19:1-19:25][Identifier[19:1-19:17][negative_float_2] = BinaryNegatedExpression[19:20-19:25][- Literal[19:21-19:25][0.525]]]
]"
`;

exports[`parse default scripts function.ms 1`] = `
"Chunk[1:1-8:13][
	AssignmentStatement[1:1-2:13][Identifier[1:1-1:2][a] = FunctionDeclaration[1:5-2:13][]]
	AssignmentStatement[4:1-5:13][Identifier[4:1-4:2][b] = FunctionDeclaration[4:5-5:13][Identifier[4:14-4:15][a], AssignmentStatement[4:17-4:27][Identifier[4:17-4:18][b] = Literal[4:21-4:27][test]], Identifier[4:29-4:30][c]]]
	AssignmentStatement[7:1-8:13][Identifier[7:1-7:2][c] = FunctionDeclaration[7:5-8:13][]]
]"
`;

exports[`parse default scripts function.ms 2`] = `undefined`;

exports[`parse default scripts function.ms 3`] = `1`;

exports[`parse default scripts function.ms 4`] = `3`;

exports[`parse default scripts function.ms unsafe 1`] = `
"Chunk[1:1-8:13][
	AssignmentStatement[1:1-2:13][Identifier[1:1-1:2][a] = FunctionDeclaration[1:5-2:13][]]
	AssignmentStatement[4:1-5:13][Identifier[4:1-4:2][b] = FunctionDeclaration[4:5-5:13][Identifier[4:14-4:15][a], AssignmentStatement[4:17-4:27][Identifier[4:17-4:18][b] = Literal[4:21-4:27][test]], Identifier[4:29-4:30][c]]]
	AssignmentStatement[7:1-8:13][Identifier[7:1-7:2][c] = FunctionDeclaration[7:5-8:13][]]
]"
`;

exports[`parse default scripts greybel-utils.src 1`] = `
"Chunk[1:1-8:22][
	FeatureImportExpression[1:1-1:28][name = Identifier[1:9-1:12][foo], path = test/bar]
	FeatureIncludeExpression[2:1-2:20][path = test/bar]
	AssignmentStatement[3:1-3:23][Identifier[3:1-3:5][test] = FeatureEnvarExpression[3:8-3:23][path = TEST_ENV]]
	FeatureDebuggerExpression[4:1-4:9][]
	AssignmentStatement[5:1-5:14][Identifier[5:1-5:5][from] = Literal[5:8-5:14][test]]
	FeatureImportExpression[7:1-7:29][name = Identifier[7:10-7:13][foo], path = test/bar]
	FeatureIncludeExpression[8:1-8:21][path = test/bar]
]"
`;

exports[`parse default scripts greybel-utils.src 2`] = `undefined`;

exports[`parse default scripts greybel-utils.src 3`] = `1`;

exports[`parse default scripts greybel-utils.src 4`] = `4`;

exports[`parse default scripts greybel-utils.src unsafe 1`] = `
"Chunk[1:1-8:22][
	FeatureImportExpression[1:1-1:28][name = Identifier[1:9-1:12][foo], path = test/bar]
	FeatureIncludeExpression[2:1-2:20][path = test/bar]
	AssignmentStatement[3:1-3:23][Identifier[3:1-3:5][test] = FeatureEnvarExpression[3:8-3:23][path = TEST_ENV]]
	FeatureDebuggerExpression[4:1-4:9][]
	AssignmentStatement[5:1-5:14][Identifier[5:1-5:5][from] = Literal[5:8-5:14][test]]
	FeatureImportExpression[7:1-7:29][name = Identifier[7:10-7:13][foo], path = test/bar]
	FeatureIncludeExpression[8:1-8:21][path = test/bar]
]"
`;

exports[`parse default scripts invalid code 1`] = `Array []`;

exports[`parse default scripts invalid code 2`] = `
Array [
  [Error: got Identifier[4:5 - 4:10: value = 'print'] where any of ",", ")" is required],
  [Error: got Punctuator[4:12 - 4:13: value = ')'] where number, string, or identifier is required],
  [Error: got Identifier[8:19 - 8:21: value = 'wa'] where any of ",", ";", "<eof>" is required],
  [Error: got Punctuator[11:9 - 11:10: value = '+'] where number, string, or identifier is required],
  [Error: got Keyword[13:9 - 13:12: value = 'not'] where number, string, or identifier is required],
  [Error: unexpected keyword Keyword[17:5 - 17:13: value = 'function'] at start of line],
  [Error: unexpected keyword Keyword[18:5 - 18:13: value = 'end func'] at start of line],
  [Error: got Identifier[28:16 - 28:21: value = 'print'] where "then" is required],
]
`;

exports[`parse default scripts line-expression.src 1`] = `
"Chunk[1:1-2:13][
	CallExpression[1:1-1:12][Identifier[1:1-1:6][print](FeatureLineExpression[1:7-1:12][])]
	AssignmentStatement[2:1-2:13][Identifier[2:1-2:5][test] = FeatureLineExpression[2:8-2:13][]]
]"
`;

exports[`parse default scripts line-expression.src 2`] = `undefined`;

exports[`parse default scripts line-expression.src 3`] = `0`;

exports[`parse default scripts line-expression.src 4`] = `1`;

exports[`parse default scripts line-expression.src unsafe 1`] = `
"Chunk[1:1-2:13][
	CallExpression[1:1-1:12][Identifier[1:1-1:6][print](FeatureLineExpression[1:7-1:12][])]
	AssignmentStatement[2:1-2:13][Identifier[2:1-2:5][test] = FeatureLineExpression[2:8-2:13][]]
]"
`;

exports[`parse default scripts list.ms 1`] = `
"Chunk[1:1-9:2][
	AssignmentStatement[1:1-1:15][Identifier[1:1-1:5][test] = ListConstructor[1:8-1:15][
		ListValue[1:9-1:14][Literal[1:9-1:14][foo]]
	]]
	AssignmentStatement[2:1-5:2][Identifier[2:1-2:6][test2] = ListConstructor[2:9-5:2][
		ListValue[3:5-3:8][Literal[3:5-3:8][123]]
		ListValue[4:5-4:8][Literal[4:5-4:8][345]]
	]]
	AssignmentStatement[6:1-9:2][Identifier[6:1-6:6][test3] = ListConstructor[6:9-9:2][
		ListValue[7:5-7:10][Literal[7:5-7:10][foo]]
		ListValue[8:5-8:10][Literal[8:5-8:10][moo]]
	]]
]"
`;

exports[`parse default scripts list.ms 2`] = `undefined`;

exports[`parse default scripts list.ms 3`] = `5`;

exports[`parse default scripts list.ms 4`] = `8`;

exports[`parse default scripts list.ms unsafe 1`] = `
"Chunk[1:1-9:2][
	AssignmentStatement[1:1-1:15][Identifier[1:1-1:5][test] = ListConstructor[1:8-1:15][
		ListValue[1:9-1:14][Literal[1:9-1:14][foo]]
	]]
	AssignmentStatement[2:1-5:2][Identifier[2:1-2:6][test2] = ListConstructor[2:9-5:2][
		ListValue[3:5-3:8][Literal[3:5-3:8][123]]
		ListValue[4:5-4:8][Literal[4:5-4:8][345]]
	]]
	AssignmentStatement[6:1-9:2][Identifier[6:1-6:6][test3] = ListConstructor[6:9-9:2][
		ListValue[7:5-7:10][Literal[7:5-7:10][foo]]
		ListValue[8:5-8:10][Literal[8:5-8:10][moo]]
	]]
]"
`;

exports[`parse default scripts map.ms 1`] = `
"Chunk[1:1-19:2][
	AssignmentStatement[1:1-3:2][Identifier[1:1-1:5][test] = MapConstructor[1:8-3:2][
		MapKeyString[2:5-2:30][MapConstructor[2:5-2:24][
			MapKeyString[2:6-2:17][Literal[2:6-2:14][myTest]: Literal[2:16-2:17][0]]
			MapKeyString[2:19-2:23][Literal[2:19-2:20][1]: Literal[2:22-2:23][2]]
		]: Literal[2:26-2:30][true]]
	]]
	AssignmentStatement[4:1-6:2][Identifier[4:1-4:6][test2] = MapConstructor[4:9-6:2][
		MapKeyString[5:5-5:19][ListConstructor[5:5-5:13][
			ListValue[5:6-5:8][Literal[5:6-5:8][12]]
			ListValue[5:10-5:12][Literal[5:10-5:12][14]]
		]: Literal[5:15-5:19][true]]
	]]
	AssignmentStatement[7:1-9:2][Identifier[7:1-7:6][test3] = MapConstructor[7:9-9:2][
		MapKeyString[8:5-8:14][Identifier[8:5-8:9][test]: Literal[8:11-8:14][234]]
	]]
	AssignmentStatement[10:1-12:2][Identifier[10:1-10:6][test4] = MapConstructor[10:9-12:2][
		MapKeyString[11:5-11:16][Literal[11:5-11:9][true]: Literal[11:11-11:16][foo]]
	]]
	AssignmentStatement[13:1-15:2][Identifier[13:1-13:6][test5] = MapConstructor[13:9-15:2][
		MapKeyString[14:5-14:15][Literal[14:5-14:8][123]: Literal[14:10-14:15][bar]]
	]]
	AssignmentStatement[16:1-19:2][Identifier[16:1-16:6][test5] = MapConstructor[16:9-19:2][
		MapKeyString[17:5-17:15][Literal[17:5-17:8][125]: Literal[17:10-17:15][bar]]
		MapKeyString[18:5-18:14][Literal[18:5-18:7][34]: Literal[18:9-18:14][foo]]
	]]
]"
`;

exports[`parse default scripts map.ms 2`] = `undefined`;

exports[`parse default scripts map.ms 3`] = `17`;

exports[`parse default scripts map.ms 4`] = `17`;

exports[`parse default scripts map.ms unsafe 1`] = `
"Chunk[1:1-19:2][
	AssignmentStatement[1:1-3:2][Identifier[1:1-1:5][test] = MapConstructor[1:8-3:2][
		MapKeyString[2:5-2:30][MapConstructor[2:5-2:24][
			MapKeyString[2:6-2:17][Literal[2:6-2:14][myTest]: Literal[2:16-2:17][0]]
			MapKeyString[2:19-2:23][Literal[2:19-2:20][1]: Literal[2:22-2:23][2]]
		]: Literal[2:26-2:30][true]]
	]]
	AssignmentStatement[4:1-6:2][Identifier[4:1-4:6][test2] = MapConstructor[4:9-6:2][
		MapKeyString[5:5-5:19][ListConstructor[5:5-5:13][
			ListValue[5:6-5:8][Literal[5:6-5:8][12]]
			ListValue[5:10-5:12][Literal[5:10-5:12][14]]
		]: Literal[5:15-5:19][true]]
	]]
	AssignmentStatement[7:1-9:2][Identifier[7:1-7:6][test3] = MapConstructor[7:9-9:2][
		MapKeyString[8:5-8:14][Identifier[8:5-8:9][test]: Literal[8:11-8:14][234]]
	]]
	AssignmentStatement[10:1-12:2][Identifier[10:1-10:6][test4] = MapConstructor[10:9-12:2][
		MapKeyString[11:5-11:16][Literal[11:5-11:9][true]: Literal[11:11-11:16][foo]]
	]]
	AssignmentStatement[13:1-15:2][Identifier[13:1-13:6][test5] = MapConstructor[13:9-15:2][
		MapKeyString[14:5-14:15][Literal[14:5-14:8][123]: Literal[14:10-14:15][bar]]
	]]
	AssignmentStatement[16:1-19:2][Identifier[16:1-16:6][test5] = MapConstructor[16:9-19:2][
		MapKeyString[17:5-17:15][Literal[17:5-17:8][125]: Literal[17:10-17:15][bar]]
		MapKeyString[18:5-18:14][Literal[18:5-18:7][34]: Literal[18:9-18:14][foo]]
	]]
]"
`;

exports[`parse default scripts map.src 1`] = `
"Chunk[1:1-15:2][
	AssignmentStatement[1:1-3:2][Identifier[1:1-1:5][test] = MapConstructor[1:8-3:2][
		MapKeyString[2:5-2:30][MapConstructor[2:5-2:24][
			MapKeyString[2:6-2:17][Literal[2:6-2:14][myTest]: Literal[2:16-2:17][0]]
			MapKeyString[2:19-2:23][Literal[2:19-2:20][1]: Literal[2:22-2:23][2]]
		]: Literal[2:26-2:30][true]]
	]]
	AssignmentStatement[4:1-6:2][Identifier[4:1-4:6][test2] = MapConstructor[4:9-6:2][
		MapKeyString[5:5-5:19][ListConstructor[5:5-5:13][
			ListValue[5:6-5:8][Literal[5:6-5:8][12]]
			ListValue[5:10-5:12][Literal[5:10-5:12][14]]
		]: Literal[5:15-5:19][true]]
	]]
	AssignmentStatement[7:1-9:2][Identifier[7:1-7:6][test3] = MapConstructor[7:9-9:2][
		MapKeyString[8:5-8:14][Identifier[8:5-8:9][test]: Literal[8:11-8:14][234]]
	]]
	AssignmentStatement[10:1-12:2][Identifier[10:1-10:6][test4] = MapConstructor[10:9-12:2][
		MapKeyString[11:5-11:16][Literal[11:5-11:9][true]: Literal[11:11-11:16][foo]]
	]]
	AssignmentStatement[13:1-15:2][Identifier[13:1-13:6][test5] = MapConstructor[13:9-15:2][
		MapKeyString[14:5-14:15][Literal[14:5-14:8][123]: Literal[14:10-14:15][bar]]
	]]
]"
`;

exports[`parse default scripts map.src 2`] = `undefined`;

exports[`parse default scripts map.src 3`] = `13`;

exports[`parse default scripts map.src 4`] = `14`;

exports[`parse default scripts map.src unsafe 1`] = `
"Chunk[1:1-15:2][
	AssignmentStatement[1:1-3:2][Identifier[1:1-1:5][test] = MapConstructor[1:8-3:2][
		MapKeyString[2:5-2:30][MapConstructor[2:5-2:24][
			MapKeyString[2:6-2:17][Literal[2:6-2:14][myTest]: Literal[2:16-2:17][0]]
			MapKeyString[2:19-2:23][Literal[2:19-2:20][1]: Literal[2:22-2:23][2]]
		]: Literal[2:26-2:30][true]]
	]]
	AssignmentStatement[4:1-6:2][Identifier[4:1-4:6][test2] = MapConstructor[4:9-6:2][
		MapKeyString[5:5-5:19][ListConstructor[5:5-5:13][
			ListValue[5:6-5:8][Literal[5:6-5:8][12]]
			ListValue[5:10-5:12][Literal[5:10-5:12][14]]
		]: Literal[5:15-5:19][true]]
	]]
	AssignmentStatement[7:1-9:2][Identifier[7:1-7:6][test3] = MapConstructor[7:9-9:2][
		MapKeyString[8:5-8:14][Identifier[8:5-8:9][test]: Literal[8:11-8:14][234]]
	]]
	AssignmentStatement[10:1-12:2][Identifier[10:1-10:6][test4] = MapConstructor[10:9-12:2][
		MapKeyString[11:5-11:16][Literal[11:5-11:9][true]: Literal[11:11-11:16][foo]]
	]]
	AssignmentStatement[13:1-15:2][Identifier[13:1-13:6][test5] = MapConstructor[13:9-15:2][
		MapKeyString[14:5-14:15][Literal[14:5-14:8][123]: Literal[14:10-14:15][bar]]
	]]
]"
`;

exports[`parse default scripts member-with-nl.ms 1`] = `
"Chunk[1:1-4:5][
	MemberExpression[1:1-4:5][MemberExpression[1:1-3:5][MemberExpression[1:1-2:5][Identifier[1:1-1:2][x].Identifier[2:1-2:5][test]].Identifier[3:1-3:5][test]].Identifier[4:1-4:5][test]]
]"
`;

exports[`parse default scripts member-with-nl.ms 2`] = `undefined`;

exports[`parse default scripts member-with-nl.ms 3`] = `0`;

exports[`parse default scripts member-with-nl.ms 4`] = `0`;

exports[`parse default scripts member-with-nl.ms unsafe 1`] = `
"Chunk[1:1-4:5][
	MemberExpression[1:1-4:5][MemberExpression[1:1-3:5][MemberExpression[1:1-2:5][Identifier[1:1-1:2][x].Identifier[2:1-2:5][test]].Identifier[3:1-3:5][test]].Identifier[4:1-4:5][test]]
]"
`;

exports[`parse default scripts multiline.ms 1`] = `
"Chunk[1:1-29:12][
	CallExpression[1:1-6:3][Identifier[1:1-1:6][print](Literal[1:7-6:2][
	
	was
	print(\\"was\\")
	foo[\\"xxxx\\"].test
	])]
	CallExpression[8:1-15:3][Identifier[8:1-8:6][print](BinaryExpression[8:7-15:2][BinaryExpression[8:7-11:2][Literal[8:7-9:17][
	print(\\"was\\") ] + Literal[9:20-11:2][
	foo[\\"xxxx\\"].test
	]] + Literal[11:5-15:2][
	
	
	was
	]])]
	CallExpression[17:1-22:3][Identifier[17:1-17:6][print](Literal[17:7-22:2][
	
	    if (typeof(@item.value) == \\"function\\") then
	
	    end if
	])]
	CallExpression[24:1-29:12][Identifier[24:1-24:6][print](BinaryExpression[24:7-29:5][BinaryExpression[24:7-28:12][BinaryExpression[24:7-28:5][BinaryExpression[24:7-27:12][BinaryExpression[24:7-27:5][BinaryExpression[24:7-26:12][BinaryExpression[24:7-26:5][BinaryExpression[24:7-25:12][Literal[24:7-25:5][
	   ] + Identifier[25:8-25:12][test]] + Literal[25:15-26:5][
	   ]] + Identifier[26:8-26:12][test]] + Literal[26:15-27:5][
	   ]] + Identifier[27:8-27:12][test]] + Literal[27:15-28:5][
	   ]] + Identifier[28:8-28:12][test]] + Literal[28:15-29:5][
	   ]], Literal[29:7-29:11][true])]
]"
`;

exports[`parse default scripts multiline.ms 2`] = `undefined`;

exports[`parse default scripts multiline.ms 3`] = `11`;

exports[`parse default scripts multiline.ms 4`] = `0`;

exports[`parse default scripts multiline.ms unsafe 1`] = `
"Chunk[1:1-29:12][
	CallExpression[1:1-6:3][Identifier[1:1-1:6][print](Literal[1:7-6:2][
	
	was
	print(\\"was\\")
	foo[\\"xxxx\\"].test
	])]
	CallExpression[8:1-15:3][Identifier[8:1-8:6][print](BinaryExpression[8:7-15:2][BinaryExpression[8:7-11:2][Literal[8:7-9:17][
	print(\\"was\\") ] + Literal[9:20-11:2][
	foo[\\"xxxx\\"].test
	]] + Literal[11:5-15:2][
	
	
	was
	]])]
	CallExpression[17:1-22:3][Identifier[17:1-17:6][print](Literal[17:7-22:2][
	
	    if (typeof(@item.value) == \\"function\\") then
	
	    end if
	])]
	CallExpression[24:1-29:12][Identifier[24:1-24:6][print](BinaryExpression[24:7-29:5][BinaryExpression[24:7-28:12][BinaryExpression[24:7-28:5][BinaryExpression[24:7-27:12][BinaryExpression[24:7-27:5][BinaryExpression[24:7-26:12][BinaryExpression[24:7-26:5][BinaryExpression[24:7-25:12][Literal[24:7-25:5][
	   ] + Identifier[25:8-25:12][test]] + Literal[25:15-26:5][
	   ]] + Identifier[26:8-26:12][test]] + Literal[26:15-27:5][
	   ]] + Identifier[27:8-27:12][test]] + Literal[27:15-28:5][
	   ]] + Identifier[28:8-28:12][test]] + Literal[28:15-29:5][
	   ]], Literal[29:7-29:11][true])]
]"
`;

exports[`parse default scripts multiline-binary-expression.ms 1`] = `
"Chunk[1:1-8:7][
	IfStatement[1:1-8:7][
		IfClause[1:1-8:7][BinaryExpression[1:5-6:21][CallExpression[1:5-6:13][MemberExpression[1:5-6:10][ListConstructor[1:5-6:2][
			ListValue[2:3-2:4][Literal[2:3-2:4][1]]
			ListValue[3:3-3:4][Literal[3:3-3:4][2]]
			ListValue[4:3-4:4][Literal[4:3-4:4][3]]
			ListValue[5:3-5:4][Literal[5:3-5:4][4]]
		].Identifier[6:3-6:10][indexOf]](Literal[6:11-6:12][2])] != Literal[6:17-6:21][null]]]
	]
]"
`;

exports[`parse default scripts multiline-binary-expression.ms 2`] = `undefined`;

exports[`parse default scripts multiline-binary-expression.ms 3`] = `6`;

exports[`parse default scripts multiline-binary-expression.ms 4`] = `0`;

exports[`parse default scripts multiline-binary-expression.ms unsafe 1`] = `
"Chunk[1:1-8:7][
	IfStatement[1:1-8:7][
		IfClause[1:1-8:7][BinaryExpression[1:5-6:21][CallExpression[1:5-6:13][MemberExpression[1:5-6:10][ListConstructor[1:5-6:2][
			ListValue[2:3-2:4][Literal[2:3-2:4][1]]
			ListValue[3:3-3:4][Literal[3:3-3:4][2]]
			ListValue[4:3-4:4][Literal[4:3-4:4][3]]
			ListValue[5:3-5:4][Literal[5:3-5:4][4]]
		].Identifier[6:3-6:10][indexOf]](Literal[6:11-6:12][2])] != Literal[6:17-6:21][null]]]
	]
]"
`;

exports[`parse default scripts multiline-comment.src 1`] = `
"Chunk[1:1-10:28][
	Comment[1:1-6:7][
	
	
	my Test
	
	  **]
	CallExpression[6:8-6:21][Identifier[6:8-6:13][print](Literal[6:14-6:20][test])]
	Comment[6:22-10:5][
	
	  another comment
	
	  ]
	Comment[10:6-10:28][ one line comment ]
]"
`;

exports[`parse default scripts multiline-comment.src 2`] = `undefined`;

exports[`parse default scripts multiline-comment.src 3`] = `1`;

exports[`parse default scripts multiline-comment.src 4`] = `0`;

exports[`parse default scripts multiline-comment.src unsafe 1`] = `
"Chunk[1:1-10:28][
	Comment[1:1-6:7][
	
	
	my Test
	
	  **]
	CallExpression[6:8-6:21][Identifier[6:8-6:13][print](Literal[6:14-6:20][test])]
	Comment[6:22-10:5][
	
	  another comment
	
	  ]
	Comment[10:6-10:28][ one line comment ]
]"
`;

exports[`parse default scripts multiline-condition.ms 1`] = `
"Chunk[1:1-14:12][
	IfStatement[1:1-6:7][
		IfClause[1:1-6:7][LogicalExpression[1:4-4:10][LogicalExpression[1:4-2:5][Literal[1:4-1:8][true] or Literal[2:1-2:5][true]] or LogicalExpression[3:1-4:10][Literal[3:1-3:6][false] and NegationExpression[4:1-4:10][not Literal[4:5-4:10][false]]]]
			CallExpression[5:3-5:16][Identifier[5:3-5:8][print](Literal[5:9-5:15][test])]
		]
	]
	CallExpression[8:1-14:12][Identifier[8:1-8:6][print](BinaryExpression[8:7-14:12][BinaryExpression[8:7-13:12][BinaryExpression[8:7-12:12][BinaryExpression[8:7-11:12][BinaryExpression[8:7-10:12][BinaryExpression[8:7-9:12][CallExpression[8:7-8:16][Identifier[8:7-8:8][p](Literal[8:9-8:12][A], Literal[8:14-8:15][1])] == CallExpression[9:3-9:12][Identifier[9:3-9:4][p](Literal[9:5-9:8][B], Literal[9:10-9:11][1])]] != CallExpression[10:3-10:12][Identifier[10:3-10:4][p](Literal[10:5-10:8][C], Literal[10:10-10:11][1])]] > CallExpression[11:3-11:12][Identifier[11:3-11:4][p](Literal[11:5-11:8][D], Literal[11:10-11:11][1])]] < CallExpression[12:3-12:12][Identifier[12:3-12:4][p](Literal[12:5-12:8][E], Literal[12:10-12:11][1])]] >= CallExpression[13:3-13:12][Identifier[13:3-13:4][p](Literal[13:5-13:8][F], Literal[13:10-13:11][1])]] <= CallExpression[14:3-14:12][Identifier[14:3-14:4][p](Literal[14:5-14:8][G], Literal[14:10-14:11][1])]])]
]"
`;

exports[`parse default scripts multiline-condition.ms 2`] = `undefined`;

exports[`parse default scripts multiline-condition.ms 3`] = `19`;

exports[`parse default scripts multiline-condition.ms 4`] = `0`;

exports[`parse default scripts multiline-condition.ms unsafe 1`] = `
"Chunk[1:1-14:12][
	IfStatement[1:1-6:7][
		IfClause[1:1-6:7][LogicalExpression[1:4-4:10][LogicalExpression[1:4-2:5][Literal[1:4-1:8][true] or Literal[2:1-2:5][true]] or LogicalExpression[3:1-4:10][Literal[3:1-3:6][false] and NegationExpression[4:1-4:10][not Literal[4:5-4:10][false]]]]
			CallExpression[5:3-5:16][Identifier[5:3-5:8][print](Literal[5:9-5:15][test])]
		]
	]
	CallExpression[8:1-14:12][Identifier[8:1-8:6][print](BinaryExpression[8:7-14:12][BinaryExpression[8:7-13:12][BinaryExpression[8:7-12:12][BinaryExpression[8:7-11:12][BinaryExpression[8:7-10:12][BinaryExpression[8:7-9:12][CallExpression[8:7-8:16][Identifier[8:7-8:8][p](Literal[8:9-8:12][A], Literal[8:14-8:15][1])] == CallExpression[9:3-9:12][Identifier[9:3-9:4][p](Literal[9:5-9:8][B], Literal[9:10-9:11][1])]] != CallExpression[10:3-10:12][Identifier[10:3-10:4][p](Literal[10:5-10:8][C], Literal[10:10-10:11][1])]] > CallExpression[11:3-11:12][Identifier[11:3-11:4][p](Literal[11:5-11:8][D], Literal[11:10-11:11][1])]] < CallExpression[12:3-12:12][Identifier[12:3-12:4][p](Literal[12:5-12:8][E], Literal[12:10-12:11][1])]] >= CallExpression[13:3-13:12][Identifier[13:3-13:4][p](Literal[13:5-13:8][F], Literal[13:10-13:11][1])]] <= CallExpression[14:3-14:12][Identifier[14:3-14:4][p](Literal[14:5-14:8][G], Literal[14:10-14:11][1])]])]
]"
`;

exports[`parse default scripts negation.ms 1`] = `
"Chunk[1:1-6:9][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:5][test] = BinaryExpression[1:8-1:23][BinaryExpression[1:8-1:19][BinaryExpression[1:8-1:14][BinaryNegatedExpression[1:8-1:10][- Literal[1:9-1:10][1]] + Literal[1:13-1:14][2]] + BinaryNegatedExpression[1:17-1:19][- Literal[1:18-1:19][2]]] + Literal[1:22-1:23][3]]]
	AssignmentStatement[2:1-2:34][Identifier[2:1-2:4][foo] = ListConstructor[2:7-2:34][
		ListValue[2:8-2:10][BinaryNegatedExpression[2:8-2:10][- Literal[2:9-2:10][1]]]
		ListValue[2:12-2:18][BinaryExpression[2:12-2:18][BinaryNegatedExpression[2:12-2:14][- Literal[2:13-2:14][2]] + Literal[2:17-2:18][4]]]
		ListValue[2:20-2:33][BinaryExpression[2:20-2:33][BinaryExpression[2:20-2:29][BinaryNegatedExpression[2:21-2:23][- Literal[2:22-2:23][2]] + BinaryNegatedExpression[2:27-2:29][- Literal[2:28-2:29][4]]] + Literal[2:32-2:33][6]]]
	]]
	CallExpression[4:1-4:12][Identifier[4:1-4:6][print](Identifier[4:7-4:11][test])]
	CallExpression[5:1-5:11][Identifier[5:1-5:6][print](Identifier[5:7-5:10][foo])]
	CallExpression[6:1-6:9][Identifier[6:1-6:6][print](BinaryNegatedExpression[6:7-6:9][- Literal[6:8-6:9][2]])]
]"
`;

exports[`parse default scripts negation.ms 2`] = `undefined`;

exports[`parse default scripts negation.ms 3`] = `11`;

exports[`parse default scripts negation.ms 4`] = `5`;

exports[`parse default scripts negation.ms unsafe 1`] = `
"Chunk[1:1-6:9][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:5][test] = BinaryExpression[1:8-1:23][BinaryExpression[1:8-1:19][BinaryExpression[1:8-1:14][BinaryNegatedExpression[1:8-1:10][- Literal[1:9-1:10][1]] + Literal[1:13-1:14][2]] + BinaryNegatedExpression[1:17-1:19][- Literal[1:18-1:19][2]]] + Literal[1:22-1:23][3]]]
	AssignmentStatement[2:1-2:34][Identifier[2:1-2:4][foo] = ListConstructor[2:7-2:34][
		ListValue[2:8-2:10][BinaryNegatedExpression[2:8-2:10][- Literal[2:9-2:10][1]]]
		ListValue[2:12-2:18][BinaryExpression[2:12-2:18][BinaryNegatedExpression[2:12-2:14][- Literal[2:13-2:14][2]] + Literal[2:17-2:18][4]]]
		ListValue[2:20-2:33][BinaryExpression[2:20-2:33][BinaryExpression[2:20-2:29][BinaryNegatedExpression[2:21-2:23][- Literal[2:22-2:23][2]] + BinaryNegatedExpression[2:27-2:29][- Literal[2:28-2:29][4]]] + Literal[2:32-2:33][6]]]
	]]
	CallExpression[4:1-4:12][Identifier[4:1-4:6][print](Identifier[4:7-4:11][test])]
	CallExpression[5:1-5:11][Identifier[5:1-5:6][print](Identifier[5:7-5:10][foo])]
	CallExpression[6:1-6:9][Identifier[6:1-6:6][print](BinaryNegatedExpression[6:7-6:9][- Literal[6:8-6:9][2]])]
]"
`;

exports[`parse default scripts negation.src 1`] = `
"Chunk[1:1-5:11][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:5][test] = BinaryExpression[1:8-1:23][BinaryExpression[1:8-1:19][BinaryExpression[1:8-1:14][BinaryNegatedExpression[1:8-1:10][- Literal[1:9-1:10][1]] + Literal[1:13-1:14][2]] + BinaryNegatedExpression[1:17-1:19][- Literal[1:18-1:19][2]]] + Literal[1:22-1:23][3]]]
	AssignmentStatement[2:1-2:34][Identifier[2:1-2:4][foo] = ListConstructor[2:7-2:34][
		ListValue[2:8-2:10][BinaryNegatedExpression[2:8-2:10][- Literal[2:9-2:10][1]]]
		ListValue[2:12-2:18][BinaryExpression[2:12-2:18][BinaryNegatedExpression[2:12-2:14][- Literal[2:13-2:14][2]] + Literal[2:17-2:18][4]]]
		ListValue[2:20-2:33][BinaryExpression[2:20-2:33][BinaryExpression[2:20-2:29][BinaryNegatedExpression[2:21-2:23][- Literal[2:22-2:23][2]] + BinaryNegatedExpression[2:27-2:29][- Literal[2:28-2:29][4]]] + Literal[2:32-2:33][6]]]
	]]
	CallExpression[4:1-4:12][Identifier[4:1-4:6][print](Identifier[4:7-4:11][test])]
	CallExpression[5:1-5:11][Identifier[5:1-5:6][print](Identifier[5:7-5:10][foo])]
]"
`;

exports[`parse default scripts negation.src 2`] = `undefined`;

exports[`parse default scripts negation.src 3`] = `10`;

exports[`parse default scripts negation.src 4`] = `5`;

exports[`parse default scripts negation.src unsafe 1`] = `
"Chunk[1:1-5:11][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:5][test] = BinaryExpression[1:8-1:23][BinaryExpression[1:8-1:19][BinaryExpression[1:8-1:14][BinaryNegatedExpression[1:8-1:10][- Literal[1:9-1:10][1]] + Literal[1:13-1:14][2]] + BinaryNegatedExpression[1:17-1:19][- Literal[1:18-1:19][2]]] + Literal[1:22-1:23][3]]]
	AssignmentStatement[2:1-2:34][Identifier[2:1-2:4][foo] = ListConstructor[2:7-2:34][
		ListValue[2:8-2:10][BinaryNegatedExpression[2:8-2:10][- Literal[2:9-2:10][1]]]
		ListValue[2:12-2:18][BinaryExpression[2:12-2:18][BinaryNegatedExpression[2:12-2:14][- Literal[2:13-2:14][2]] + Literal[2:17-2:18][4]]]
		ListValue[2:20-2:33][BinaryExpression[2:20-2:33][BinaryExpression[2:20-2:29][BinaryNegatedExpression[2:21-2:23][- Literal[2:22-2:23][2]] + BinaryNegatedExpression[2:27-2:29][- Literal[2:28-2:29][4]]] + Literal[2:32-2:33][6]]]
	]]
	CallExpression[4:1-4:12][Identifier[4:1-4:6][print](Identifier[4:7-4:11][test])]
	CallExpression[5:1-5:11][Identifier[5:1-5:6][print](Identifier[5:7-5:10][foo])]
]"
`;

exports[`parse default scripts obj-init.ms 1`] = `
"Chunk[1:1-21:14][
	AssignmentStatement[1:1-1:26][Identifier[1:1-1:18][valueOfIdentifier] = Literal[1:21-1:26][foo]]
	AssignmentStatement[3:1-9:2][Identifier[3:1-3:9][myObject] = MapConstructor[3:12-9:2][
		MapKeyString[4:5-6:6][Literal[4:5-4:11][test]: MapConstructor[4:13-6:6][
			MapKeyString[5:9-5:25][Literal[5:9-5:18][another]: Literal[5:20-5:25][123]]
		]]
		MapKeyString[7:5-7:19][Literal[7:5-7:12][value]: Literal[7:14-7:19][123]]
		MapKeyString[8:5-8:30][Literal[8:5-8:11][idtf]: Identifier[8:13-8:30][valueOfIdentifier]]
	]]
	CallExpression[11:1-11:62][Identifier[11:1-11:6][print](ListConstructor[11:7-11:61][
		ListValue[11:8-11:29][MemberExpression[11:8-11:29][MemberExpression[11:8-11:21][Identifier[11:8-11:16][myObject].Identifier[11:17-11:21][test]].Identifier[11:22-11:29][another]]]
		ListValue[11:31-11:45][MemberExpression[11:31-11:45][Identifier[11:31-11:39][myObject].Identifier[11:40-11:45][value]]]
		ListValue[11:47-11:60][MemberExpression[11:47-11:60][Identifier[11:47-11:55][myObject].Identifier[11:56-11:60][idtf]]]
	])]
	AssignmentStatement[13:1-19:2][Identifier[13:1-13:7][myList] = ListConstructor[13:10-19:2][
		ListValue[14:5-16:6][MapConstructor[14:5-16:6][
			MapKeyString[15:9-15:25][Literal[15:9-15:18][another]: Literal[15:20-15:25][123]]
		]]
		ListValue[17:5-17:10][Literal[17:5-17:10][123]]
		ListValue[18:5-18:22][Identifier[18:5-18:22][valueOfIdentifier]]
	]]
	CallExpression[21:1-21:14][Identifier[21:1-21:6][print](Identifier[21:7-21:13][myList])]
]"
`;

exports[`parse default scripts obj-init.ms 2`] = `undefined`;

exports[`parse default scripts obj-init.ms 3`] = `10`;

exports[`parse default scripts obj-init.ms 4`] = `11`;

exports[`parse default scripts obj-init.ms unsafe 1`] = `
"Chunk[1:1-21:14][
	AssignmentStatement[1:1-1:26][Identifier[1:1-1:18][valueOfIdentifier] = Literal[1:21-1:26][foo]]
	AssignmentStatement[3:1-9:2][Identifier[3:1-3:9][myObject] = MapConstructor[3:12-9:2][
		MapKeyString[4:5-6:6][Literal[4:5-4:11][test]: MapConstructor[4:13-6:6][
			MapKeyString[5:9-5:25][Literal[5:9-5:18][another]: Literal[5:20-5:25][123]]
		]]
		MapKeyString[7:5-7:19][Literal[7:5-7:12][value]: Literal[7:14-7:19][123]]
		MapKeyString[8:5-8:30][Literal[8:5-8:11][idtf]: Identifier[8:13-8:30][valueOfIdentifier]]
	]]
	CallExpression[11:1-11:62][Identifier[11:1-11:6][print](ListConstructor[11:7-11:61][
		ListValue[11:8-11:29][MemberExpression[11:8-11:29][MemberExpression[11:8-11:21][Identifier[11:8-11:16][myObject].Identifier[11:17-11:21][test]].Identifier[11:22-11:29][another]]]
		ListValue[11:31-11:45][MemberExpression[11:31-11:45][Identifier[11:31-11:39][myObject].Identifier[11:40-11:45][value]]]
		ListValue[11:47-11:60][MemberExpression[11:47-11:60][Identifier[11:47-11:55][myObject].Identifier[11:56-11:60][idtf]]]
	])]
	AssignmentStatement[13:1-19:2][Identifier[13:1-13:7][myList] = ListConstructor[13:10-19:2][
		ListValue[14:5-16:6][MapConstructor[14:5-16:6][
			MapKeyString[15:9-15:25][Literal[15:9-15:18][another]: Literal[15:20-15:25][123]]
		]]
		ListValue[17:5-17:10][Literal[17:5-17:10][123]]
		ListValue[18:5-18:22][Identifier[18:5-18:22][valueOfIdentifier]]
	]]
	CallExpression[21:1-21:14][Identifier[21:1-21:6][print](Identifier[21:7-21:13][myList])]
]"
`;

exports[`parse default scripts obj-init.src 1`] = `
"Chunk[1:1-21:14][
	AssignmentStatement[1:1-1:26][Identifier[1:1-1:18][valueOfIdentifier] = Literal[1:21-1:26][foo]]
	AssignmentStatement[3:1-9:2][Identifier[3:1-3:9][myObject] = MapConstructor[3:12-9:2][
		MapKeyString[4:5-6:6][Literal[4:5-4:11][test]: MapConstructor[4:13-6:6][
			MapKeyString[5:9-5:25][Literal[5:9-5:18][another]: Literal[5:20-5:25][123]]
		]]
		MapKeyString[7:5-7:19][Literal[7:5-7:12][value]: Literal[7:14-7:19][123]]
		MapKeyString[8:5-8:30][Literal[8:5-8:11][idtf]: Identifier[8:13-8:30][valueOfIdentifier]]
	]]
	CallExpression[11:1-11:62][Identifier[11:1-11:6][print](ListConstructor[11:7-11:61][
		ListValue[11:8-11:29][MemberExpression[11:8-11:29][MemberExpression[11:8-11:21][Identifier[11:8-11:16][myObject].Identifier[11:17-11:21][test]].Identifier[11:22-11:29][another]]]
		ListValue[11:31-11:45][MemberExpression[11:31-11:45][Identifier[11:31-11:39][myObject].Identifier[11:40-11:45][value]]]
		ListValue[11:47-11:60][MemberExpression[11:47-11:60][Identifier[11:47-11:55][myObject].Identifier[11:56-11:60][idtf]]]
	])]
	AssignmentStatement[13:1-19:2][Identifier[13:1-13:7][myList] = ListConstructor[13:10-19:2][
		ListValue[14:5-16:6][MapConstructor[14:5-16:6][
			MapKeyString[15:9-15:25][Literal[15:9-15:18][another]: Literal[15:20-15:25][123]]
		]]
		ListValue[17:5-17:10][Literal[17:5-17:10][123]]
		ListValue[18:5-18:22][Identifier[18:5-18:22][valueOfIdentifier]]
	]]
	CallExpression[21:1-21:14][Identifier[21:1-21:6][print](Identifier[21:7-21:13][myList])]
]"
`;

exports[`parse default scripts obj-init.src 2`] = `undefined`;

exports[`parse default scripts obj-init.src 3`] = `10`;

exports[`parse default scripts obj-init.src 4`] = `11`;

exports[`parse default scripts obj-init.src unsafe 1`] = `
"Chunk[1:1-21:14][
	AssignmentStatement[1:1-1:26][Identifier[1:1-1:18][valueOfIdentifier] = Literal[1:21-1:26][foo]]
	AssignmentStatement[3:1-9:2][Identifier[3:1-3:9][myObject] = MapConstructor[3:12-9:2][
		MapKeyString[4:5-6:6][Literal[4:5-4:11][test]: MapConstructor[4:13-6:6][
			MapKeyString[5:9-5:25][Literal[5:9-5:18][another]: Literal[5:20-5:25][123]]
		]]
		MapKeyString[7:5-7:19][Literal[7:5-7:12][value]: Literal[7:14-7:19][123]]
		MapKeyString[8:5-8:30][Literal[8:5-8:11][idtf]: Identifier[8:13-8:30][valueOfIdentifier]]
	]]
	CallExpression[11:1-11:62][Identifier[11:1-11:6][print](ListConstructor[11:7-11:61][
		ListValue[11:8-11:29][MemberExpression[11:8-11:29][MemberExpression[11:8-11:21][Identifier[11:8-11:16][myObject].Identifier[11:17-11:21][test]].Identifier[11:22-11:29][another]]]
		ListValue[11:31-11:45][MemberExpression[11:31-11:45][Identifier[11:31-11:39][myObject].Identifier[11:40-11:45][value]]]
		ListValue[11:47-11:60][MemberExpression[11:47-11:60][Identifier[11:47-11:55][myObject].Identifier[11:56-11:60][idtf]]]
	])]
	AssignmentStatement[13:1-19:2][Identifier[13:1-13:7][myList] = ListConstructor[13:10-19:2][
		ListValue[14:5-16:6][MapConstructor[14:5-16:6][
			MapKeyString[15:9-15:25][Literal[15:9-15:18][another]: Literal[15:20-15:25][123]]
		]]
		ListValue[17:5-17:10][Literal[17:5-17:10][123]]
		ListValue[18:5-18:22][Identifier[18:5-18:22][valueOfIdentifier]]
	]]
	CallExpression[21:1-21:14][Identifier[21:1-21:6][print](Identifier[21:7-21:13][myList])]
]"
`;

exports[`parse default scripts parentheses.ms 1`] = `
"Chunk[1:1-4:75][
	AssignmentStatement[1:1-1:40][Identifier[1:1-1:7][params] = ListConstructor[1:10-1:40][
		ListValue[1:11-1:23][Literal[1:11-1:23][/home/test]]
		ListValue[1:25-1:39][Literal[1:25-1:39][myTestFolder]]
	]]
	CallExpression[3:1-3:69][Identifier[3:1-3:6][print](LogicalExpression[3:7-3:68][LogicalExpression[3:7-3:43][BinaryExpression[3:7-3:22][MemberExpression[3:7-3:17][Identifier[3:7-3:13][params].Identifier[3:14-3:17][len]] != Literal[3:21-3:22][1]] or BinaryExpression[3:26-3:43][IndexExpression[3:26-3:35][Identifier[3:26-3:32][params][Literal[3:33-3:34][0]]] == Literal[3:39-3:43][-h]]] or BinaryExpression[3:47-3:68][IndexExpression[3:47-3:56][Identifier[3:47-3:53][params][Literal[3:54-3:55][0]]] == Literal[3:60-3:68][--help]]])]
	CallExpression[4:1-4:75][Identifier[4:1-4:6][print](LogicalExpression[4:7-4:74][LogicalExpression[4:7-4:47][BinaryExpression[4:8-4:23][MemberExpression[4:8-4:18][Identifier[4:8-4:14][params].Identifier[4:15-4:18][len]] != Literal[4:22-4:23][1]] or BinaryExpression[4:29-4:46][IndexExpression[4:29-4:38][Identifier[4:29-4:35][params][Literal[4:36-4:37][0]]] == Literal[4:42-4:46][-h]]] or BinaryExpression[4:52-4:73][IndexExpression[4:52-4:61][Identifier[4:52-4:58][params][Literal[4:59-4:60][0]]] == Literal[4:65-4:73][--help]]])]
]"
`;

exports[`parse default scripts parentheses.ms 2`] = `undefined`;

exports[`parse default scripts parentheses.ms 3`] = `12`;

exports[`parse default scripts parentheses.ms 4`] = `3`;

exports[`parse default scripts parentheses.ms unsafe 1`] = `
"Chunk[1:1-4:75][
	AssignmentStatement[1:1-1:40][Identifier[1:1-1:7][params] = ListConstructor[1:10-1:40][
		ListValue[1:11-1:23][Literal[1:11-1:23][/home/test]]
		ListValue[1:25-1:39][Literal[1:25-1:39][myTestFolder]]
	]]
	CallExpression[3:1-3:69][Identifier[3:1-3:6][print](LogicalExpression[3:7-3:68][LogicalExpression[3:7-3:43][BinaryExpression[3:7-3:22][MemberExpression[3:7-3:17][Identifier[3:7-3:13][params].Identifier[3:14-3:17][len]] != Literal[3:21-3:22][1]] or BinaryExpression[3:26-3:43][IndexExpression[3:26-3:35][Identifier[3:26-3:32][params][Literal[3:33-3:34][0]]] == Literal[3:39-3:43][-h]]] or BinaryExpression[3:47-3:68][IndexExpression[3:47-3:56][Identifier[3:47-3:53][params][Literal[3:54-3:55][0]]] == Literal[3:60-3:68][--help]]])]
	CallExpression[4:1-4:75][Identifier[4:1-4:6][print](LogicalExpression[4:7-4:74][LogicalExpression[4:7-4:47][BinaryExpression[4:8-4:23][MemberExpression[4:8-4:18][Identifier[4:8-4:14][params].Identifier[4:15-4:18][len]] != Literal[4:22-4:23][1]] or BinaryExpression[4:29-4:46][IndexExpression[4:29-4:38][Identifier[4:29-4:35][params][Literal[4:36-4:37][0]]] == Literal[4:42-4:46][-h]]] or BinaryExpression[4:52-4:73][IndexExpression[4:52-4:61][Identifier[4:52-4:58][params][Literal[4:59-4:60][0]]] == Literal[4:65-4:73][--help]]])]
]"
`;

exports[`parse default scripts password-generator.src 1`] = `
"Chunk[1:1-65:14][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:18][PasswordGenerator] = MapConstructor[1:21-1:23][]]
	AssignmentStatement[3:1-3:43][MemberExpression[3:1-3:38][Identifier[3:1-3:18][PasswordGenerator].Identifier[3:19-3:38][MAX_PASSWORD_LENGTH]] = Literal[3:41-3:43][15]]
	AssignmentStatement[4:1-4:71][MemberExpression[4:1-4:40][Identifier[4:1-4:18][PasswordGenerator].Identifier[4:19-4:40][ALPHABETIC_CHARACTERS]] = Literal[4:43-4:71][qwertzuiopasdfghjklyxcvbnm]]
	AssignmentStatement[5:1-5:51][MemberExpression[5:1-5:36][Identifier[5:1-5:18][PasswordGenerator].Identifier[5:19-5:36][NUMBER_CHARACTERS]] = Literal[5:39-5:51][0123456789]]
	AssignmentStatement[6:1-6:160][MemberExpression[6:1-6:32][Identifier[6:1-6:18][PasswordGenerator].Identifier[6:19-6:32][ALPHA_NUMERIC]] = BinaryExpression[6:35-6:160][BinaryExpression[6:35-6:122][MemberExpression[6:35-6:74][Identifier[6:35-6:52][PasswordGenerator].Identifier[6:53-6:74][ALPHABETIC_CHARACTERS]] + MemberExpression[6:77-6:122][MemberExpression[6:77-6:116][Identifier[6:77-6:94][PasswordGenerator].Identifier[6:95-6:116][ALPHABETIC_CHARACTERS]].Identifier[6:117-6:122][upper]]] + MemberExpression[6:125-6:160][Identifier[6:125-6:142][PasswordGenerator].Identifier[6:143-6:160][NUMBER_CHARACTERS]]]]
	AssignmentStatement[8:1-13:13][MemberExpression[8:1-8:30][Identifier[8:1-8:18][PasswordGenerator].Identifier[8:19-8:30][constructor]] = Function[8:33-13:13][ =>
		AssignmentStatement[9:5-9:14][Identifier[9:5-9:7][me] = Identifier[9:10-9:14][self]]
		AssignmentStatement[10:5-10:20][MemberExpression[10:5-10:14][Identifier[10:5-10:7][me].Identifier[10:8-10:14][buffer]] = ListConstructor[10:17-10:20][
			ListValue[10:18-10:19][Literal[10:18-10:19][0]]
		]]
		AssignmentStatement[11:5-11:37][MemberExpression[11:5-11:18][Identifier[11:5-11:7][me].Identifier[11:8-11:18][characters]] = MemberExpression[11:21-11:37][Identifier[11:21-11:23][me].Identifier[11:24-11:37][ALPHA_NUMERIC]]]
		ReturnStatement[12:5-12:14][Identifier[12:12-12:14][me]]
	]]
	AssignmentStatement[15:1-31:13][MemberExpression[15:1-15:33][Identifier[15:1-15:18][PasswordGenerator].Identifier[15:19-15:33][increaseBuffer]] = Function[15:36-31:13][Identifier[15:45-15:46][i] =>
		AssignmentStatement[16:5-16:14][Identifier[16:5-16:7][me] = Identifier[16:10-16:14][self]]
		AssignmentStatement[17:5-17:34][Identifier[17:5-17:22][currentCharBuffer] = MemberExpression[17:25-17:34][Identifier[17:25-17:27][me].Identifier[17:28-17:34][buffer]]]
		AssignmentStatement[18:5-18:38][Identifier[18:5-18:18][maxBufferSize] = MemberExpression[18:21-18:38][MemberExpression[18:21-18:34][Identifier[18:21-18:23][me].Identifier[18:24-18:34][characters]].Identifier[18:35-18:38][len]]]
		IfStatement[19:5-19:54][
			IfShortcutClause[19:5-19:54][BinaryExpression[19:9-19:18][Identifier[19:9-19:10][i] == Literal[19:14-19:18][null]]
				AssignmentStatement[19:25-19:54][Identifier[19:25-19:26][i] = BinaryExpression[19:29-19:54][MemberExpression[19:29-19:50][Identifier[19:29-19:46][currentCharBuffer].Identifier[19:47-19:50][len]] - Literal[19:53-19:54][1]]]
			]
		]
		AssignmentStatement[20:5-20:29][Identifier[20:5-20:6][p] = IndexExpression[20:9-20:29][Identifier[20:9-20:26][currentCharBuffer][Identifier[20:27-20:28][i]]]]
		AssignmentStatement[21:5-21:14][Identifier[21:5-21:6][p] = BinaryExpression[21:9-21:14][Identifier[21:9-21:10][p] + Literal[21:13-21:14][1]]]
		AssignmentStatement[22:5-22:29][IndexExpression[22:5-22:25][Identifier[22:5-22:22][currentCharBuffer][Identifier[22:23-22:24][i]]] = Identifier[22:28-22:29][p]]
		IfStatement[23:5-30:11][
			IfClause[23:5-30:11][BinaryExpression[23:9-23:27][Identifier[23:9-23:10][p] == Identifier[23:14-23:27][maxBufferSize]]
				AssignmentStatement[24:9-24:33][IndexExpression[24:9-24:29][Identifier[24:9-24:26][currentCharBuffer][Identifier[24:27-24:28][i]]] = Literal[24:32-24:33][0]]
				IfStatement[25:9-29:15][
					IfClause[25:9-27:13][BinaryExpression[25:13-25:19][Identifier[25:13-25:14][i] == Literal[25:18-25:19][0]]
						CallExpression[26:13-26:38][MemberExpression[26:13-26:35][Identifier[26:13-26:30][currentCharBuffer].Identifier[26:31-26:35][push]](Literal[26:36-26:37][0])]
					]
					ElseClause[27:13-29:15][
						CallExpression[28:13-28:37][MemberExpression[28:13-28:30][Identifier[28:13-28:15][me].Identifier[28:16-28:30][increaseBuffer]](BinaryExpression[28:31-28:36][Identifier[28:31-28:32][i] - Literal[28:35-28:36][1]])]
					}]
				]
			]
		]
	]]
	AssignmentStatement[33:1-52:13][MemberExpression[33:1-33:22][Identifier[33:1-33:18][PasswordGenerator].Identifier[33:19-33:22][gen]] = Function[33:25-52:13][ =>
		AssignmentStatement[34:5-34:14][Identifier[34:5-34:7][me] = Identifier[34:10-34:14][self]]
		AssignmentStatement[35:5-35:34][Identifier[35:5-35:22][currentCharBuffer] = MemberExpression[35:25-35:34][Identifier[35:25-35:27][me].Identifier[35:28-35:34][buffer]]]
		AssignmentStatement[36:5-36:40][Identifier[36:5-36:24][generatorCharacters] = MemberExpression[36:27-36:40][Identifier[36:27-36:29][me].Identifier[36:30-36:40][characters]]]
		AssignmentStatement[37:5-37:18][Identifier[37:5-37:13][password] = Literal[37:16-37:18][]]
		AssignmentStatement[38:5-38:14][Identifier[38:5-38:10][index] = Literal[38:13-38:14][0]]
		WhileStatement[40:5-45:14][BinaryExpression[40:11-40:40][Identifier[40:11-40:16][index] < MemberExpression[40:19-40:40][Identifier[40:19-40:36][currentCharBuffer].Identifier[40:37-40:40][len]]]
			AssignmentStatement[41:9-41:43][Identifier[41:9-41:16][pointer] = IndexExpression[41:19-41:43][Identifier[41:19-41:36][currentCharBuffer][Identifier[41:37-41:42][index]]]]
			AssignmentStatement[42:9-42:59][Identifier[42:9-42:17][password] = BinaryExpression[42:20-42:59][Identifier[42:20-42:28][password] + IndexExpression[42:31-42:59][Identifier[42:31-42:50][generatorCharacters][Identifier[42:51-42:58][pointer]]]]]
			IfStatement[43:9-43:75][
				IfShortcutClause[43:9-43:75][BinaryExpression[43:13-43:47][Identifier[43:13-43:18][index] == BinaryExpression[43:22-43:47][MemberExpression[43:22-43:43][Identifier[43:22-43:39][currentCharBuffer].Identifier[43:40-43:43][len]] - Literal[43:46-43:47][1]]]
					CallExpression[43:54-43:75][MemberExpression[43:54-43:73][Identifier[43:54-43:58][self].Identifier[43:59-43:73][increaseBuffer]]()]
				]
			]
			AssignmentStatement[44:9-44:26][Identifier[44:9-44:14][index] = BinaryExpression[44:17-44:26][Identifier[44:17-44:22][index] + Literal[44:25-44:26][1]]]
		]
		IfStatement[47:5-49:11][
			IfClause[47:5-49:11][BinaryExpression[47:9-47:55][MemberExpression[47:9-47:30][Identifier[47:9-47:26][currentCharBuffer].Identifier[47:27-47:30][len]] > MemberExpression[47:33-47:55][Identifier[47:33-47:35][me].Identifier[47:36-47:55][MAX_PASSWORD_LENGTH]]]
				ReturnStatement[48:9-48:20][Literal[48:16-48:20][null]]
			]
		]
		ReturnStatement[51:5-51:20][Identifier[51:12-51:20][password]]
	]]
	AssignmentStatement[54:1-54:45][Identifier[54:1-54:5][pgen] = CallExpression[54:8-54:45][MemberExpression[54:8-54:43][UnaryExpression[54:9-54:30][new Identifier[54:13-54:30][PasswordGenerator]].Identifier[54:32-54:43][constructor]]()]]
	AssignmentStatement[56:1-56:10][Identifier[56:1-56:6][index] = Literal[56:9-56:10][0]]
	AssignmentStatement[57:1-57:9][Identifier[57:1-57:4][max] = Literal[57:7-57:9][10]]
	AssignmentStatement[58:1-58:12][Identifier[58:1-58:7][result] = ListConstructor[58:10-58:12][]]
	WhileStatement[60:1-63:10][BinaryExpression[60:8-60:19][Identifier[60:8-60:13][index] < Identifier[60:16-60:19][max]]
		CallExpression[61:5-61:28][MemberExpression[61:5-61:16][Identifier[61:5-61:11][result].Identifier[61:12-61:16][push]](CallExpression[61:17-61:27][MemberExpression[61:17-61:25][Identifier[61:17-61:21][pgen].Identifier[61:22-61:25][gen]]()])]
		AssignmentStatement[62:5-62:22][Identifier[62:5-62:10][index] = BinaryExpression[62:13-62:22][Identifier[62:13-62:18][index] + Literal[62:21-62:22][1]]]
	]
	CallExpression[65:1-65:14][Identifier[65:1-65:6][print](Identifier[65:7-65:13][result])]
]"
`;

exports[`parse default scripts password-generator.src 2`] = `undefined`;

exports[`parse default scripts password-generator.src 3`] = `19`;

exports[`parse default scripts password-generator.src 4`] = `13`;

exports[`parse default scripts password-generator.src unsafe 1`] = `
"Chunk[1:1-65:14][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:18][PasswordGenerator] = MapConstructor[1:21-1:23][]]
	AssignmentStatement[3:1-3:43][MemberExpression[3:1-3:38][Identifier[3:1-3:18][PasswordGenerator].Identifier[3:19-3:38][MAX_PASSWORD_LENGTH]] = Literal[3:41-3:43][15]]
	AssignmentStatement[4:1-4:71][MemberExpression[4:1-4:40][Identifier[4:1-4:18][PasswordGenerator].Identifier[4:19-4:40][ALPHABETIC_CHARACTERS]] = Literal[4:43-4:71][qwertzuiopasdfghjklyxcvbnm]]
	AssignmentStatement[5:1-5:51][MemberExpression[5:1-5:36][Identifier[5:1-5:18][PasswordGenerator].Identifier[5:19-5:36][NUMBER_CHARACTERS]] = Literal[5:39-5:51][0123456789]]
	AssignmentStatement[6:1-6:160][MemberExpression[6:1-6:32][Identifier[6:1-6:18][PasswordGenerator].Identifier[6:19-6:32][ALPHA_NUMERIC]] = BinaryExpression[6:35-6:160][BinaryExpression[6:35-6:122][MemberExpression[6:35-6:74][Identifier[6:35-6:52][PasswordGenerator].Identifier[6:53-6:74][ALPHABETIC_CHARACTERS]] + MemberExpression[6:77-6:122][MemberExpression[6:77-6:116][Identifier[6:77-6:94][PasswordGenerator].Identifier[6:95-6:116][ALPHABETIC_CHARACTERS]].Identifier[6:117-6:122][upper]]] + MemberExpression[6:125-6:160][Identifier[6:125-6:142][PasswordGenerator].Identifier[6:143-6:160][NUMBER_CHARACTERS]]]]
	AssignmentStatement[8:1-13:13][MemberExpression[8:1-8:30][Identifier[8:1-8:18][PasswordGenerator].Identifier[8:19-8:30][constructor]] = Function[8:33-13:13][ =>
		AssignmentStatement[9:5-9:14][Identifier[9:5-9:7][me] = Identifier[9:10-9:14][self]]
		AssignmentStatement[10:5-10:20][MemberExpression[10:5-10:14][Identifier[10:5-10:7][me].Identifier[10:8-10:14][buffer]] = ListConstructor[10:17-10:20][
			ListValue[10:18-10:19][Literal[10:18-10:19][0]]
		]]
		AssignmentStatement[11:5-11:37][MemberExpression[11:5-11:18][Identifier[11:5-11:7][me].Identifier[11:8-11:18][characters]] = MemberExpression[11:21-11:37][Identifier[11:21-11:23][me].Identifier[11:24-11:37][ALPHA_NUMERIC]]]
		ReturnStatement[12:5-12:14][Identifier[12:12-12:14][me]]
	]]
	AssignmentStatement[15:1-31:13][MemberExpression[15:1-15:33][Identifier[15:1-15:18][PasswordGenerator].Identifier[15:19-15:33][increaseBuffer]] = Function[15:36-31:13][Identifier[15:45-15:46][i] =>
		AssignmentStatement[16:5-16:14][Identifier[16:5-16:7][me] = Identifier[16:10-16:14][self]]
		AssignmentStatement[17:5-17:34][Identifier[17:5-17:22][currentCharBuffer] = MemberExpression[17:25-17:34][Identifier[17:25-17:27][me].Identifier[17:28-17:34][buffer]]]
		AssignmentStatement[18:5-18:38][Identifier[18:5-18:18][maxBufferSize] = MemberExpression[18:21-18:38][MemberExpression[18:21-18:34][Identifier[18:21-18:23][me].Identifier[18:24-18:34][characters]].Identifier[18:35-18:38][len]]]
		IfStatement[19:5-19:54][
			IfShortcutClause[19:5-19:54][BinaryExpression[19:9-19:18][Identifier[19:9-19:10][i] == Literal[19:14-19:18][null]]
				AssignmentStatement[19:25-19:54][Identifier[19:25-19:26][i] = BinaryExpression[19:29-19:54][MemberExpression[19:29-19:50][Identifier[19:29-19:46][currentCharBuffer].Identifier[19:47-19:50][len]] - Literal[19:53-19:54][1]]]
			]
		]
		AssignmentStatement[20:5-20:29][Identifier[20:5-20:6][p] = IndexExpression[20:9-20:29][Identifier[20:9-20:26][currentCharBuffer][Identifier[20:27-20:28][i]]]]
		AssignmentStatement[21:5-21:14][Identifier[21:5-21:6][p] = BinaryExpression[21:9-21:14][Identifier[21:9-21:10][p] + Literal[21:13-21:14][1]]]
		AssignmentStatement[22:5-22:29][IndexExpression[22:5-22:25][Identifier[22:5-22:22][currentCharBuffer][Identifier[22:23-22:24][i]]] = Identifier[22:28-22:29][p]]
		IfStatement[23:5-30:11][
			IfClause[23:5-30:11][BinaryExpression[23:9-23:27][Identifier[23:9-23:10][p] == Identifier[23:14-23:27][maxBufferSize]]
				AssignmentStatement[24:9-24:33][IndexExpression[24:9-24:29][Identifier[24:9-24:26][currentCharBuffer][Identifier[24:27-24:28][i]]] = Literal[24:32-24:33][0]]
				IfStatement[25:9-29:15][
					IfClause[25:9-27:13][BinaryExpression[25:13-25:19][Identifier[25:13-25:14][i] == Literal[25:18-25:19][0]]
						CallExpression[26:13-26:38][MemberExpression[26:13-26:35][Identifier[26:13-26:30][currentCharBuffer].Identifier[26:31-26:35][push]](Literal[26:36-26:37][0])]
					]
					ElseClause[27:13-29:15][
						CallExpression[28:13-28:37][MemberExpression[28:13-28:30][Identifier[28:13-28:15][me].Identifier[28:16-28:30][increaseBuffer]](BinaryExpression[28:31-28:36][Identifier[28:31-28:32][i] - Literal[28:35-28:36][1]])]
					}]
				]
			]
		]
	]]
	AssignmentStatement[33:1-52:13][MemberExpression[33:1-33:22][Identifier[33:1-33:18][PasswordGenerator].Identifier[33:19-33:22][gen]] = Function[33:25-52:13][ =>
		AssignmentStatement[34:5-34:14][Identifier[34:5-34:7][me] = Identifier[34:10-34:14][self]]
		AssignmentStatement[35:5-35:34][Identifier[35:5-35:22][currentCharBuffer] = MemberExpression[35:25-35:34][Identifier[35:25-35:27][me].Identifier[35:28-35:34][buffer]]]
		AssignmentStatement[36:5-36:40][Identifier[36:5-36:24][generatorCharacters] = MemberExpression[36:27-36:40][Identifier[36:27-36:29][me].Identifier[36:30-36:40][characters]]]
		AssignmentStatement[37:5-37:18][Identifier[37:5-37:13][password] = Literal[37:16-37:18][]]
		AssignmentStatement[38:5-38:14][Identifier[38:5-38:10][index] = Literal[38:13-38:14][0]]
		WhileStatement[40:5-45:14][BinaryExpression[40:11-40:40][Identifier[40:11-40:16][index] < MemberExpression[40:19-40:40][Identifier[40:19-40:36][currentCharBuffer].Identifier[40:37-40:40][len]]]
			AssignmentStatement[41:9-41:43][Identifier[41:9-41:16][pointer] = IndexExpression[41:19-41:43][Identifier[41:19-41:36][currentCharBuffer][Identifier[41:37-41:42][index]]]]
			AssignmentStatement[42:9-42:59][Identifier[42:9-42:17][password] = BinaryExpression[42:20-42:59][Identifier[42:20-42:28][password] + IndexExpression[42:31-42:59][Identifier[42:31-42:50][generatorCharacters][Identifier[42:51-42:58][pointer]]]]]
			IfStatement[43:9-43:75][
				IfShortcutClause[43:9-43:75][BinaryExpression[43:13-43:47][Identifier[43:13-43:18][index] == BinaryExpression[43:22-43:47][MemberExpression[43:22-43:43][Identifier[43:22-43:39][currentCharBuffer].Identifier[43:40-43:43][len]] - Literal[43:46-43:47][1]]]
					CallExpression[43:54-43:75][MemberExpression[43:54-43:73][Identifier[43:54-43:58][self].Identifier[43:59-43:73][increaseBuffer]]()]
				]
			]
			AssignmentStatement[44:9-44:26][Identifier[44:9-44:14][index] = BinaryExpression[44:17-44:26][Identifier[44:17-44:22][index] + Literal[44:25-44:26][1]]]
		]
		IfStatement[47:5-49:11][
			IfClause[47:5-49:11][BinaryExpression[47:9-47:55][MemberExpression[47:9-47:30][Identifier[47:9-47:26][currentCharBuffer].Identifier[47:27-47:30][len]] > MemberExpression[47:33-47:55][Identifier[47:33-47:35][me].Identifier[47:36-47:55][MAX_PASSWORD_LENGTH]]]
				ReturnStatement[48:9-48:20][Literal[48:16-48:20][null]]
			]
		]
		ReturnStatement[51:5-51:20][Identifier[51:12-51:20][password]]
	]]
	AssignmentStatement[54:1-54:45][Identifier[54:1-54:5][pgen] = CallExpression[54:8-54:45][MemberExpression[54:8-54:43][UnaryExpression[54:9-54:30][new Identifier[54:13-54:30][PasswordGenerator]].Identifier[54:32-54:43][constructor]]()]]
	AssignmentStatement[56:1-56:10][Identifier[56:1-56:6][index] = Literal[56:9-56:10][0]]
	AssignmentStatement[57:1-57:9][Identifier[57:1-57:4][max] = Literal[57:7-57:9][10]]
	AssignmentStatement[58:1-58:12][Identifier[58:1-58:7][result] = ListConstructor[58:10-58:12][]]
	WhileStatement[60:1-63:10][BinaryExpression[60:8-60:19][Identifier[60:8-60:13][index] < Identifier[60:16-60:19][max]]
		CallExpression[61:5-61:28][MemberExpression[61:5-61:16][Identifier[61:5-61:11][result].Identifier[61:12-61:16][push]](CallExpression[61:17-61:27][MemberExpression[61:17-61:25][Identifier[61:17-61:21][pgen].Identifier[61:22-61:25][gen]]()])]
		AssignmentStatement[62:5-62:22][Identifier[62:5-62:10][index] = BinaryExpression[62:13-62:22][Identifier[62:13-62:18][index] + Literal[62:21-62:22][1]]]
	]
	CallExpression[65:1-65:14][Identifier[65:1-65:6][print](Identifier[65:7-65:13][result])]
]"
`;

exports[`parse default scripts pseudo-crypto.src 1`] = `
"Chunk[1:1-213:1][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][String] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-6:13][MemberExpression[3:1-3:19][Identifier[3:1-3:7][String].Identifier[3:8-3:19][constructor]] = Function[3:22-6:13][Identifier[3:31-3:34][str] =>
		AssignmentStatement[4:5-4:19][MemberExpression[4:5-4:13][Identifier[4:5-4:9][self].Identifier[4:10-4:13][str]] = Identifier[4:16-4:19][str]]
		ReturnStatement[5:5-5:16][Identifier[5:12-5:16][self]]
	]]
	AssignmentStatement[8:1-19:13][MemberExpression[8:1-8:13][Identifier[8:1-8:7][String].Identifier[8:8-8:13][parse]] = Function[8:16-19:13][Identifier[8:25-8:31][values] =>
		AssignmentStatement[9:5-9:22][Identifier[9:5-9:11][result] = MemberExpression[9:14-9:22][Identifier[9:14-9:18][self].Identifier[9:19-9:22][str]]]
		AssignmentStatement[10:5-10:14][Identifier[10:5-10:10][index] = Literal[10:13-10:14][0]]
		AssignmentStatement[11:5-11:26][Identifier[11:5-11:13][maxIndex] = MemberExpression[11:16-11:26][Identifier[11:16-11:22][values].Identifier[11:23-11:26][len]]]
		WhileStatement[13:5-16:14][BinaryExpression[13:11-13:27][Identifier[13:11-13:16][index] < Identifier[13:19-13:27][maxIndex]]
			AssignmentStatement[14:9-14:58][Identifier[14:9-14:15][result] = CallExpression[14:18-14:58][MemberExpression[14:18-14:32][Identifier[14:18-14:24][result].Identifier[14:25-14:32][replace]](BinaryExpression[14:33-14:42][Literal[14:33-14:36][$] + Identifier[14:37-14:42][index]], IndexExpression[14:44-14:57][Identifier[14:44-14:50][values][Identifier[14:51-14:56][index]]])]]
			AssignmentStatement[15:9-15:26][Identifier[15:9-15:14][index] = BinaryExpression[15:17-15:26][Identifier[15:17-15:22][index] + Literal[15:25-15:26][1]]]
		]
		ReturnStatement[18:5-18:42][CallExpression[18:12-18:42][MemberExpression[18:12-18:34][UnaryExpression[18:13-18:21][new Identifier[18:17-18:21][self]].Identifier[18:23-18:34][constructor]](Identifier[18:35-18:41][result])]]
	]]
	AssignmentStatement[21:1-23:13][MemberExpression[21:1-21:18][Identifier[21:1-21:7][String].Identifier[21:8-21:18][startsWith]] = Function[21:21-23:13][Identifier[21:30-21:33][str] =>
		ReturnStatement[22:5-22:38][BinaryExpression[22:12-22:38][CallExpression[22:12-22:33][MemberExpression[22:12-22:28][MemberExpression[22:12-22:20][Identifier[22:12-22:16][self].Identifier[22:17-22:20][str]].Identifier[22:21-22:28][indexOf]](Identifier[22:29-22:32][str])] == Literal[22:37-22:38][0]]]
	]]
	AssignmentStatement[25:1-27:13][MemberExpression[25:1-25:14][Identifier[25:1-25:7][String].Identifier[25:8-25:14][substr]] = Function[25:17-27:13][Identifier[25:26-25:36][startIndex], Identifier[25:38-25:46][endIndex] =>
		ReturnStatement[26:5-26:73][CallExpression[26:12-26:73][MemberExpression[26:12-26:34][UnaryExpression[26:13-26:21][new Identifier[26:17-26:21][self]].Identifier[26:23-26:34][constructor]](CallExpression[26:35-26:72][Identifier[26:35-26:40][slice](MemberExpression[26:41-26:49][Identifier[26:41-26:45][self].Identifier[26:46-26:49][str]], Identifier[26:51-26:61][startIndex], Identifier[26:63-26:71][endIndex])])]]
	]]
	AssignmentStatement[29:1-31:13][MemberExpression[29:1-29:15][Identifier[29:1-29:7][String].Identifier[29:8-29:15][indexOf]] = Function[29:18-31:13][Identifier[29:27-29:30][str] =>
		ReturnStatement[30:5-30:33][CallExpression[30:12-30:33][MemberExpression[30:12-30:28][MemberExpression[30:12-30:20][Identifier[30:12-30:16][self].Identifier[30:17-30:20][str]].Identifier[30:21-30:28][indexOf]](Identifier[30:29-30:32][str])]]
	]]
	AssignmentStatement[33:1-35:13][MemberExpression[33:1-33:15][Identifier[33:1-33:7][String].Identifier[33:8-33:15][replace]] = Function[33:18-35:13][Identifier[33:27-33:30][str], Identifier[33:32-33:38][newStr] =>
		ReturnStatement[34:5-34:65][CallExpression[34:12-34:65][MemberExpression[34:12-34:34][UnaryExpression[34:13-34:21][new Identifier[34:17-34:21][self]].Identifier[34:23-34:34][constructor]](CallExpression[34:35-34:64][MemberExpression[34:35-34:51][MemberExpression[34:35-34:43][Identifier[34:35-34:39][self].Identifier[34:40-34:43][str]].Identifier[34:44-34:51][replace]](Identifier[34:52-34:55][str], Identifier[34:57-34:63][newStr])])]]
	]]
	AssignmentStatement[37:1-39:13][MemberExpression[37:1-37:14][Identifier[37:1-37:7][String].Identifier[37:8-37:14][remove]] = Function[37:17-39:13][Identifier[37:26-37:29][str] =>
		ReturnStatement[38:5-38:56][CallExpression[38:12-38:56][MemberExpression[38:12-38:34][UnaryExpression[38:13-38:21][new Identifier[38:17-38:21][self]].Identifier[38:23-38:34][constructor]](CallExpression[38:35-38:55][MemberExpression[38:35-38:50][MemberExpression[38:35-38:43][Identifier[38:35-38:39][self].Identifier[38:40-38:43][str]].Identifier[38:44-38:50][remove]](Identifier[38:51-38:54][str])])]]
	]]
	AssignmentStatement[41:1-43:13][MemberExpression[41:1-41:16][Identifier[41:1-41:7][String].Identifier[41:8-41:16][toString]] = Function[41:19-43:13][ =>
		ReturnStatement[42:5-42:20][MemberExpression[42:12-42:20][Identifier[42:12-42:16][self].Identifier[42:17-42:20][str]]]
	]]
	AssignmentStatement[45:1-47:13][MemberExpression[45:1-45:14][Identifier[45:1-45:7][String].Identifier[45:8-45:14][length]] = Function[45:17-47:13][ =>
		ReturnStatement[46:5-46:24][MemberExpression[46:12-46:24][MemberExpression[46:12-46:20][Identifier[46:12-46:16][self].Identifier[46:17-46:20][str]].Identifier[46:21-46:24][len]]]
	]]
	AssignmentStatement[49:1-51:13][MemberExpression[49:1-49:13][Identifier[49:1-49:7][String].Identifier[49:8-49:13][split]] = Function[49:16-51:13][Identifier[49:25-49:34][seperator] =>
		ReturnStatement[50:5-50:37][CallExpression[50:12-50:37][MemberExpression[50:12-50:26][MemberExpression[50:12-50:20][Identifier[50:12-50:16][self].Identifier[50:17-50:20][str]].Identifier[50:21-50:26][split]](Identifier[50:27-50:36][seperator])]]
	]]
	AssignmentStatement[53:1-55:13][MemberExpression[53:1-53:12][Identifier[53:1-53:7][String].Identifier[53:8-53:12][trim]] = Function[53:15-55:13][Identifier[53:24-53:33][seperator] =>
		ReturnStatement[54:5-54:51][CallExpression[54:12-54:51][MemberExpression[54:12-54:34][UnaryExpression[54:13-54:21][new Identifier[54:17-54:21][self]].Identifier[54:23-54:34][constructor]](CallExpression[54:35-54:50][MemberExpression[54:35-54:48][MemberExpression[54:35-54:43][Identifier[54:35-54:39][self].Identifier[54:40-54:43][str]].Identifier[54:44-54:48][trim]]()])]]
	]]
	AssignmentStatement[57:1-57:11][Identifier[57:1-57:6][Error] = MapConstructor[57:9-57:11][]]
	AssignmentStatement[59:1-59:22][MemberExpression[59:1-59:13][Identifier[59:1-59:6][Error].Identifier[59:7-59:13][String]] = Identifier[59:16-59:22][String]]
	AssignmentStatement[61:1-68:13][MemberExpression[61:1-61:18][Identifier[61:1-61:6][Error].Identifier[61:7-61:18][constructor]] = Function[61:21-68:13][Identifier[61:30-61:37][message], Identifier[61:39-61:45][values] =>
		AssignmentStatement[62:5-62:13][Identifier[62:5-62:6][m] = Identifier[62:9-62:13][self]]
		AssignmentStatement[63:5-63:24][MemberExpression[63:5-63:14][Identifier[63:5-63:6][m].Identifier[63:7-63:14][message]] = Identifier[63:17-63:24][message]]
		IfStatement[64:5-66:11][
			IfClause[64:5-66:11][BinaryExpression[64:9-64:23][Identifier[64:9-64:15][values] != Literal[64:19-64:23][null]]
				AssignmentStatement[65:9-65:81][MemberExpression[65:9-65:18][Identifier[65:9-65:10][m].Identifier[65:11-65:18][message]] = CallExpression[65:21-65:81][MemberExpression[65:21-65:79][CallExpression[65:21-65:70][MemberExpression[65:21-65:62][CallExpression[65:21-65:56][MemberExpression[65:21-65:47][UnaryExpression[65:22-65:34][new MemberExpression[65:26-65:34][Identifier[65:26-65:27][m].Identifier[65:28-65:34][String]]].Identifier[65:36-65:47][constructor]](Identifier[65:48-65:55][message])].Identifier[65:57-65:62][parse]](Identifier[65:63-65:69][values])].Identifier[65:71-65:79][toString]]()]]
			]
		]
		ReturnStatement[67:5-67:13][Identifier[67:12-67:13][m]]
	]]
	AssignmentStatement[70:1-72:13][MemberExpression[70:1-70:12][Identifier[70:1-70:6][Error].Identifier[70:7-70:12][throw]] = Function[70:15-72:13][ =>
		CallExpression[71:5-71:56][Identifier[71:5-71:9][exit](BinaryExpression[71:10-71:55][BinaryExpression[71:10-71:42][Literal[71:10-71:27][<color=#ff0000>] + MemberExpression[71:30-71:42][Identifier[71:30-71:34][self].Identifier[71:35-71:42][message]]] + Literal[71:45-71:55][</color>]])]
	]]
	AssignmentStatement[74:1-74:12][Identifier[74:1-74:7][Crypto] = MapConstructor[74:10-74:12][]]
	AssignmentStatement[76:1-76:91][MemberExpression[76:1-76:22][Identifier[76:1-76:7][Crypto].Identifier[76:8-76:22][defaultCharset]] = Literal[76:25-76:91][QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-]]
	AssignmentStatement[77:1-77:33][MemberExpression[77:1-77:21][Identifier[77:1-77:7][Crypto].Identifier[77:8-77:21][defaultSecret]] = Literal[77:24-77:33][test123]]
	AssignmentStatement[78:1-78:27][MemberExpression[78:1-78:19][Identifier[78:1-78:7][Crypto].Identifier[78:8-78:19][maxCharCode]] = Literal[78:22-78:27][55295]]
	AssignmentStatement[79:1-79:21][MemberExpression[79:1-79:13][Identifier[79:1-79:7][Crypto].Identifier[79:8-79:13][Error]] = Identifier[79:16-79:21][Error]]
	AssignmentStatement[81:1-90:13][MemberExpression[81:1-81:19][Identifier[81:1-81:7][Crypto].Identifier[81:8-81:19][constructor]] = Function[81:22-90:13][Identifier[81:31-81:44][defaultSecret], Identifier[81:46-81:52][hashFn], Identifier[81:54-81:61][charset] =>
		AssignmentStatement[82:5-82:14][Identifier[82:5-82:7][me] = Identifier[82:10-82:14][self]]
		AssignmentStatement[83:5-83:37][MemberExpression[83:5-83:21][Identifier[83:5-83:7][me].Identifier[83:8-83:21][defaultSecret]] = Identifier[83:24-83:37][defaultSecret]]
		AssignmentStatement[84:5-84:23][MemberExpression[84:5-84:13][Identifier[84:5-84:7][me].Identifier[84:8-84:13][table]] = Identifier[84:16-84:23][charset]]
		AssignmentStatement[85:5-85:24][MemberExpression[85:5-85:14][Identifier[85:5-85:7][me].Identifier[85:8-85:14][hashFn]] = UnaryExpression[85:17-85:24][@ Identifier[85:18-85:24][hashFn]]]
		IfStatement[86:5-86:47][
			IfShortcutClause[86:5-86:47][BinaryExpression[86:9-86:24][UnaryExpression[86:9-86:16][@ Identifier[86:10-86:16][hashFn]] == Literal[86:20-86:24][null]]
				AssignmentStatement[86:31-86:47][MemberExpression[86:31-86:40][Identifier[86:31-86:33][me].Identifier[86:34-86:40][hashFn]] = UnaryExpression[86:43-86:47][@ Identifier[86:44-86:47][md5]]]
			]
		]
		IfStatement[87:5-87:57][
			IfShortcutClause[87:5-87:57][BinaryExpression[87:8-87:23][Identifier[87:8-87:15][charset] == Literal[87:19-87:23][null]]
				AssignmentStatement[87:29-87:57][MemberExpression[87:29-87:37][Identifier[87:29-87:31][me].Identifier[87:32-87:37][table]] = MemberExpression[87:40-87:57][Identifier[87:40-87:42][me].Identifier[87:43-87:57][defaultCharset]]]
			]
		]
		IfStatement[88:5-88:103][
			IfShortcutClause[88:5-88:103][BinaryExpression[88:8-88:26][MemberExpression[88:8-88:20][MemberExpression[88:8-88:16][Identifier[88:8-88:10][me].Identifier[88:11-88:16][table]].Identifier[88:17-88:20][len]] != Literal[88:24-88:26][64]]
				CallExpression[88:32-88:103][MemberExpression[88:32-88:101][CallExpression[88:32-88:95][MemberExpression[88:32-88:58][UnaryExpression[88:33-88:45][new MemberExpression[88:37-88:45][Identifier[88:37-88:39][me].Identifier[88:40-88:45][Error]]].Identifier[88:47-88:58][constructor]](Literal[88:59-88:82][Invalid charset $0...], ListConstructor[88:84-88:94][
					ListValue[88:85-88:93][MemberExpression[88:85-88:93][Identifier[88:85-88:87][me].Identifier[88:88-88:93][table]]]
				])].Identifier[88:96-88:101][throw]]()]
			]
		]
		ReturnStatement[89:5-89:14][Identifier[89:12-89:14][me]]
	]]
	AssignmentStatement[92:1-101:13][MemberExpression[92:1-92:15][Identifier[92:1-92:7][Crypto].Identifier[92:8-92:15][getHash]] = Function[92:18-101:13][Identifier[92:27-92:29][pw] =>
		AssignmentStatement[93:5-93:14][Identifier[93:5-93:7][me] = Identifier[93:10-93:14][self]]
		AssignmentStatement[94:5-94:14][Identifier[94:5-94:9][hash] = ListConstructor[94:12-94:14][]]
		AssignmentStatement[95:5-95:22][Identifier[95:5-95:6][x] = CallExpression[95:9-95:22][MemberExpression[95:9-95:18][Identifier[95:9-95:11][me].Identifier[95:12-95:18][hashFn]](Identifier[95:19-95:21][pw])]]
		For[96:5-98:12][Identifier[96:9-96:13][char] in Identifier[96:17-96:18][x]
			CallExpression[97:9-97:29][MemberExpression[97:9-97:18][Identifier[97:9-97:13][hash].Identifier[97:14-97:18][push]](MemberExpression[97:19-97:28][Identifier[97:19-97:23][char].Identifier[97:24-97:28][code]])]
		]
		MemberExpression[99:5-99:17][Identifier[99:5-99:9][hash].Identifier[99:10-99:17][reverse]]
		ReturnStatement[100:5-100:16][Identifier[100:12-100:16][hash]]
	]]
	AssignmentStatement[103:1-156:13][MemberExpression[103:1-103:15][Identifier[103:1-103:7][Crypto].Identifier[103:8-103:15][encrypt]] = Function[103:18-156:13][Identifier[103:27-103:30][str], Identifier[103:32-103:34][pw] =>
		AssignmentStatement[104:5-104:14][Identifier[104:5-104:7][me] = Identifier[104:10-104:14][self]]
		IfStatement[105:5-105:47][
			IfShortcutClause[105:5-105:47][BinaryExpression[105:9-105:19][Identifier[105:9-105:11][pw] == Literal[105:15-105:19][null]]
				AssignmentStatement[105:26-105:47][Identifier[105:26-105:28][pw] = MemberExpression[105:31-105:47][Identifier[105:31-105:33][me].Identifier[105:34-105:47][defaultSecret]]]
			]
		]
		AssignmentStatement[106:5-106:26][Identifier[106:5-106:9][hash] = CallExpression[106:12-106:26][MemberExpression[106:12-106:22][Identifier[106:12-106:14][me].Identifier[106:15-106:22][getHash]](Identifier[106:23-106:25][pw])]]
		AssignmentStatement[107:5-107:20][Identifier[107:5-107:16][hashPointer] = Literal[107:19-107:20][0]]
		AssignmentStatement[108:5-108:16][Identifier[108:5-108:11][output] = ListConstructor[108:14-108:16][]]
		AssignmentStatement[109:5-109:17][Identifier[109:5-109:13][position] = Literal[109:16-109:17][0]]
		AssignmentStatement[110:5-110:26][Identifier[110:5-110:12][padding] = BinaryExpression[110:15-110:26][MemberExpression[110:15-110:22][Identifier[110:15-110:18][str].Identifier[110:19-110:22][len]] % Literal[110:25-110:26][3]]]
		AssignmentStatement[111:5-111:28][Identifier[111:5-111:8][max] = BinaryExpression[111:11-111:28][MemberExpression[111:11-111:18][Identifier[111:11-111:14][str].Identifier[111:15-111:18][len]] - Identifier[111:21-111:28][padding]]]
		AssignmentStatement[112:5-117:17][Identifier[112:5-112:8][get] = Function[112:11-117:17][Identifier[112:20-112:21][v] =>
			IfStatement[113:9-115:15][
				IfClause[113:9-115:15][NegationExpression[113:13-113:37][not CallExpression[113:17-113:37][MemberExpression[113:17-113:34][MemberExpression[113:17-113:25][Identifier[113:17-113:19][me].Identifier[113:20-113:25][table]].Identifier[113:26-113:34][hasIndex]](Identifier[113:35-113:36][v])]]
					CallExpression[114:13-114:75][MemberExpression[114:13-114:73][CallExpression[114:13-114:67][MemberExpression[114:13-114:39][UnaryExpression[114:14-114:26][new MemberExpression[114:18-114:26][Identifier[114:18-114:20][me].Identifier[114:21-114:26][Error]]].Identifier[114:28-114:39][constructor]](Literal[114:40-114:61][Invalid index $0...], ListConstructor[114:63-114:66][
						ListValue[114:64-114:65][Identifier[114:64-114:65][v]]
					])].Identifier[114:68-114:73][throw]]()]
				]
			]
			ReturnStatement[116:9-116:27][IndexExpression[116:16-116:27][MemberExpression[116:16-116:24][Identifier[116:16-116:18][me].Identifier[116:19-116:24][table]][Identifier[116:25-116:26][v]]]]
		]]
		AssignmentStatement[118:5-120:17][Identifier[118:5-118:8][AND] = Function[118:11-120:17][Identifier[118:20-118:21][a], Identifier[118:23-118:24][b] =>
			ReturnStatement[119:9-119:34][CallExpression[119:16-119:34][Identifier[119:16-119:23][bitwise](Literal[119:24-119:27][&], Identifier[119:29-119:30][a], Identifier[119:32-119:33][b])]]
		]]
		AssignmentStatement[121:5-123:17][Identifier[121:5-121:11][LSHIFT] = Function[121:14-123:17][Identifier[121:23-121:24][a], Identifier[121:26-121:27][b] =>
			ReturnStatement[122:9-122:35][CallExpression[122:16-122:35][Identifier[122:16-122:23][bitwise](Literal[122:24-122:28][<<], Identifier[122:30-122:31][a], Identifier[122:33-122:34][b])]]
		]]
		AssignmentStatement[124:5-126:17][Identifier[124:5-124:11][RSHIFT] = Function[124:14-126:17][Identifier[124:23-124:24][a], Identifier[124:26-124:27][b] =>
			ReturnStatement[125:9-125:35][CallExpression[125:16-125:35][Identifier[125:16-125:23][bitwise](Literal[125:24-125:28][>>], Identifier[125:30-125:31][a], Identifier[125:33-125:34][b])]]
		]]
		WhileStatement[127:5-138:14][BinaryExpression[127:11-127:25][Identifier[127:11-127:19][position] < Identifier[127:22-127:25][max]]
			AssignmentStatement[128:9-128:42][Identifier[128:9-128:10][m] = IndexExpression[128:13-128:42][Identifier[128:13-128:17][hash][BinaryExpression[128:18-128:41][BinaryExpression[128:18-128:37][Identifier[128:18-128:26][position] % MemberExpression[128:29-128:37][Identifier[128:29-128:33][hash].Identifier[128:34-128:37][len]]] - Literal[128:40-128:41][1]]]]]
			AssignmentStatement[129:9-129:47][Identifier[129:9-129:10][a] = CallExpression[129:13-129:47][Identifier[129:13-129:19][LSHIFT](BinaryExpression[129:20-129:42][MemberExpression[129:20-129:38][IndexExpression[129:20-129:33][Identifier[129:20-129:23][str][Identifier[129:24-129:32][position]]].Identifier[129:34-129:38][code]] + Identifier[129:41-129:42][m]], Literal[129:44-129:46][16])]]
			AssignmentStatement[130:9-130:50][Identifier[130:9-130:10][b] = CallExpression[130:13-130:50][Identifier[130:13-130:19][LSHIFT](BinaryExpression[130:20-130:46][MemberExpression[130:20-130:42][IndexExpression[130:20-130:37][Identifier[130:20-130:23][str][BinaryExpression[130:24-130:36][Identifier[130:24-130:32][position] + Literal[130:35-130:36][1]]]].Identifier[130:38-130:42][code]] + Identifier[130:45-130:46][m]], Literal[130:48-130:49][8])]]
			AssignmentStatement[131:9-131:39][Identifier[131:9-131:10][c] = BinaryExpression[131:13-131:39][MemberExpression[131:13-131:35][IndexExpression[131:13-131:30][Identifier[131:13-131:16][str][BinaryExpression[131:17-131:29][Identifier[131:17-131:25][position] + Literal[131:28-131:29][2]]]].Identifier[131:31-131:35][code]] + Identifier[131:38-131:39][m]]]
			AssignmentStatement[132:9-132:27][Identifier[132:9-132:15][buffer] = BinaryExpression[132:18-132:27][BinaryExpression[132:18-132:23][Identifier[132:18-132:19][a] + Identifier[132:22-132:23][b]] + Identifier[132:26-132:27][c]]]
			CallExpression[133:9-133:54][MemberExpression[133:9-133:20][Identifier[133:9-133:15][output].Identifier[133:16-133:20][push]](CallExpression[133:21-133:53][Identifier[133:21-133:24][get](CallExpression[133:25-133:52][Identifier[133:25-133:28][AND](CallExpression[133:29-133:47][Identifier[133:29-133:35][RSHIFT](Identifier[133:36-133:42][buffer], Literal[133:44-133:46][18])], Literal[133:49-133:51][63])])])]
			CallExpression[134:9-134:54][MemberExpression[134:9-134:20][Identifier[134:9-134:15][output].Identifier[134:16-134:20][push]](CallExpression[134:21-134:53][Identifier[134:21-134:24][get](CallExpression[134:25-134:52][Identifier[134:25-134:28][AND](CallExpression[134:29-134:47][Identifier[134:29-134:35][RSHIFT](Identifier[134:36-134:42][buffer], Literal[134:44-134:46][12])], Literal[134:49-134:51][63])])])]
			CallExpression[135:9-135:53][MemberExpression[135:9-135:20][Identifier[135:9-135:15][output].Identifier[135:16-135:20][push]](CallExpression[135:21-135:52][Identifier[135:21-135:24][get](CallExpression[135:25-135:51][Identifier[135:25-135:28][AND](CallExpression[135:29-135:46][Identifier[135:29-135:35][RSHIFT](Identifier[135:36-135:42][buffer], Literal[135:44-135:45][6])], Literal[135:48-135:50][63])])])]
			CallExpression[136:9-136:42][MemberExpression[136:9-136:20][Identifier[136:9-136:15][output].Identifier[136:16-136:20][push]](CallExpression[136:21-136:41][Identifier[136:21-136:24][get](CallExpression[136:25-136:40][Identifier[136:25-136:28][AND](Identifier[136:29-136:35][buffer], Literal[136:37-136:39][63])])])]
			AssignmentStatement[137:9-137:32][Identifier[137:9-137:17][position] = BinaryExpression[137:20-137:32][Identifier[137:20-137:28][position] + Literal[137:31-137:32][3]]]
		]
		IfStatement[139:5-154:11][
			IfClause[139:5-148:12][BinaryExpression[139:9-139:21][Identifier[139:9-139:16][padding] == Literal[139:20-139:21][2]]
				AssignmentStatement[140:9-140:42][Identifier[140:9-140:10][m] = IndexExpression[140:13-140:42][Identifier[140:13-140:17][hash][BinaryExpression[140:18-140:41][BinaryExpression[140:18-140:37][Identifier[140:18-140:26][position] % MemberExpression[140:29-140:37][Identifier[140:29-140:33][hash].Identifier[140:34-140:37][len]]] - Literal[140:40-140:41][1]]]]]
				AssignmentStatement[141:9-141:46][Identifier[141:9-141:10][a] = CallExpression[141:13-141:46][Identifier[141:13-141:19][LSHIFT](BinaryExpression[141:20-141:42][MemberExpression[141:20-141:38][IndexExpression[141:20-141:33][Identifier[141:20-141:23][str][Identifier[141:24-141:32][position]]].Identifier[141:34-141:38][code]] + Identifier[141:41-141:42][m]], Literal[141:44-141:45][8])]]
				AssignmentStatement[142:9-142:39][Identifier[142:9-142:10][b] = BinaryExpression[142:13-142:39][MemberExpression[142:13-142:35][IndexExpression[142:13-142:30][Identifier[142:13-142:16][str][BinaryExpression[142:17-142:29][Identifier[142:17-142:25][position] + Literal[142:28-142:29][1]]]].Identifier[142:31-142:35][code]] + Identifier[142:38-142:39][m]]]
				AssignmentStatement[143:9-143:23][Identifier[143:9-143:15][buffer] = BinaryExpression[143:18-143:23][Identifier[143:18-143:19][a] + Identifier[143:22-143:23][b]]]
				CallExpression[144:9-144:45][MemberExpression[144:9-144:20][Identifier[144:9-144:15][output].Identifier[144:16-144:20][push]](CallExpression[144:21-144:44][Identifier[144:21-144:24][get](CallExpression[144:25-144:43][Identifier[144:25-144:31][RSHIFT](Identifier[144:32-144:38][buffer], Literal[144:40-144:42][10])])])]
				CallExpression[145:9-145:53][MemberExpression[145:9-145:20][Identifier[145:9-145:15][output].Identifier[145:16-145:20][push]](CallExpression[145:21-145:52][Identifier[145:21-145:24][get](CallExpression[145:25-145:51][Identifier[145:25-145:28][AND](CallExpression[145:29-145:46][Identifier[145:29-145:35][RSHIFT](Identifier[145:36-145:42][buffer], Literal[145:44-145:45][4])], Literal[145:48-145:50][63])])])]
				CallExpression[146:9-146:53][MemberExpression[146:9-146:20][Identifier[146:9-146:15][output].Identifier[146:16-146:20][push]](CallExpression[146:21-146:52][Identifier[146:21-146:24][get](CallExpression[146:25-146:51][Identifier[146:25-146:28][AND](CallExpression[146:29-146:46][Identifier[146:29-146:35][LSHIFT](Identifier[146:36-146:42][buffer], Literal[146:44-146:45][2])], Literal[146:48-146:50][63])])])]
				CallExpression[147:9-147:25][MemberExpression[147:9-147:20][Identifier[147:9-147:15][output].Identifier[147:16-147:20][push]](Literal[147:21-147:24][=])]
			]
			ElseifClause[148:13-154:11][BinaryExpression[148:14-148:26][Identifier[148:14-148:21][padding] == Literal[148:25-148:26][1]]
				AssignmentStatement[149:9-149:42][Identifier[149:9-149:10][m] = IndexExpression[149:13-149:42][Identifier[149:13-149:17][hash][BinaryExpression[149:18-149:41][BinaryExpression[149:18-149:37][Identifier[149:18-149:26][position] % MemberExpression[149:29-149:37][Identifier[149:29-149:33][hash].Identifier[149:34-149:37][len]]] - Literal[149:40-149:41][1]]]]]
				AssignmentStatement[150:9-150:40][Identifier[150:9-150:15][buffer] = BinaryExpression[150:18-150:40][MemberExpression[150:18-150:36][IndexExpression[150:18-150:31][Identifier[150:18-150:21][str][Identifier[150:22-150:30][position]]].Identifier[150:32-150:36][code]] + Identifier[150:39-150:40][m]]]
				CallExpression[151:9-151:44][MemberExpression[151:9-151:20][Identifier[151:9-151:15][output].Identifier[151:16-151:20][push]](CallExpression[151:21-151:43][Identifier[151:21-151:24][get](CallExpression[151:25-151:42][Identifier[151:25-151:31][RSHIFT](Identifier[151:32-151:38][buffer], Literal[151:40-151:41][2])])])]
				CallExpression[152:9-152:53][MemberExpression[152:9-152:20][Identifier[152:9-152:15][output].Identifier[152:16-152:20][push]](CallExpression[152:21-152:52][Identifier[152:21-152:24][get](CallExpression[152:25-152:51][Identifier[152:25-152:28][AND](CallExpression[152:29-152:46][Identifier[152:29-152:35][LSHIFT](Identifier[152:36-152:42][buffer], Literal[152:44-152:45][4])], Literal[152:48-152:50][63])])])]
				CallExpression[153:9-153:26][MemberExpression[153:9-153:20][Identifier[153:9-153:15][output].Identifier[153:16-153:20][push]](Literal[153:21-153:25][==])]
			]
		]
		ReturnStatement[155:5-155:27][CallExpression[155:12-155:27][MemberExpression[155:12-155:23][Identifier[155:12-155:18][output].Identifier[155:19-155:23][join]](Literal[155:24-155:26][])]]
	]]
	AssignmentStatement[158:1-202:13][MemberExpression[158:1-158:15][Identifier[158:1-158:7][Crypto].Identifier[158:8-158:15][decrypt]] = Function[158:18-202:13][Identifier[158:27-158:30][str], Identifier[158:32-158:34][pw] =>
		AssignmentStatement[159:5-159:14][Identifier[159:5-159:7][me] = Identifier[159:10-159:14][self]]
		IfStatement[160:5-160:47][
			IfShortcutClause[160:5-160:47][BinaryExpression[160:9-160:19][Identifier[160:9-160:11][pw] == Literal[160:15-160:19][null]]
				AssignmentStatement[160:26-160:47][Identifier[160:26-160:28][pw] = MemberExpression[160:31-160:47][Identifier[160:31-160:33][me].Identifier[160:34-160:47][defaultSecret]]]
			]
		]
		AssignmentStatement[161:5-161:26][Identifier[161:5-161:9][hash] = CallExpression[161:12-161:26][MemberExpression[161:12-161:22][Identifier[161:12-161:14][me].Identifier[161:15-161:22][getHash]](Identifier[161:23-161:25][pw])]]
		AssignmentStatement[162:5-162:20][Identifier[162:5-162:16][hashPointer] = Literal[162:19-162:20][0]]
		AssignmentStatement[163:5-163:26][Identifier[163:5-163:15][hashLength] = MemberExpression[163:18-163:26][Identifier[163:18-163:22][hash].Identifier[163:23-163:26][len]]]
		AssignmentStatement[164:5-164:16][Identifier[164:5-164:11][output] = ListConstructor[164:14-164:16][]]
		AssignmentStatement[165:5-165:19][Identifier[165:5-165:15][bitCounter] = Literal[165:18-165:19][0]]
		AssignmentStatement[166:5-166:19][Identifier[166:5-166:15][bitStorage] = Literal[166:18-166:19][0]]
		AssignmentStatement[167:5-167:17][Identifier[167:5-167:13][position] = Literal[167:16-167:17][0]]
		AssignmentStatement[168:5-168:20][Identifier[168:5-168:16][hashPointer] = Literal[168:19-168:20][0]]
		AssignmentStatement[169:5-169:18][Identifier[169:5-169:8][max] = MemberExpression[169:11-169:18][Identifier[169:11-169:14][str].Identifier[169:15-169:18][len]]]
		AssignmentStatement[170:5-172:17][Identifier[170:5-170:8][AND] = Function[170:11-172:17][Identifier[170:20-170:21][a], Identifier[170:23-170:24][b] =>
			ReturnStatement[171:9-171:34][CallExpression[171:16-171:34][Identifier[171:16-171:23][bitwise](Literal[171:24-171:27][&], Identifier[171:29-171:30][a], Identifier[171:32-171:33][b])]]
		]]
		AssignmentStatement[173:5-175:17][Identifier[173:5-173:11][RSHIFT] = Function[173:14-175:17][Identifier[173:23-173:24][a], Identifier[173:26-173:27][b] =>
			ReturnStatement[174:9-174:35][CallExpression[174:16-174:35][Identifier[174:16-174:23][bitwise](Literal[174:24-174:28][>>], Identifier[174:30-174:31][a], Identifier[174:33-174:34][b])]]
		]]
		WhileStatement[176:5-200:14][BinaryExpression[176:11-176:25][Identifier[176:11-176:19][position] < Identifier[176:22-176:25][max]]
			AssignmentStatement[177:9-177:49][Identifier[177:9-177:15][buffer] = CallExpression[177:18-177:49][MemberExpression[177:18-177:34][MemberExpression[177:18-177:26][Identifier[177:18-177:20][me].Identifier[177:21-177:26][table]].Identifier[177:27-177:34][indexOf]](IndexExpression[177:35-177:48][Identifier[177:35-177:38][str][Identifier[177:39-177:47][position]]])]]
			AssignmentStatement[178:9-178:32][Identifier[178:9-178:19][currentBit] = Identifier[178:22-178:32][bitCounter]]
			AssignmentStatement[179:9-179:36][Identifier[179:9-179:19][bitCounter] = BinaryExpression[179:22-179:36][Identifier[179:22-179:32][bitCounter] + Literal[179:35-179:36][1]]]
			IfStatement[180:9-184:15][
				IfClause[180:9-182:13][BinaryExpression[180:13-180:27][Identifier[180:13-180:23][currentBit] % Literal[180:26-180:27][4]]
					AssignmentStatement[181:13-181:50][Identifier[181:13-181:23][bitStorage] = BinaryExpression[181:26-181:50][BinaryExpression[181:26-181:41][Identifier[181:26-181:36][bitStorage] * Literal[181:39-181:41][64]] + Identifier[181:44-181:50][buffer]]]
				]
				ElseClause[182:13-184:15][
					AssignmentStatement[183:13-183:32][Identifier[183:13-183:23][bitStorage] = Identifier[183:26-183:32][buffer]]
				}]
			]
			IfStatement[185:9-198:15][
				IfClause[185:9-198:15][BinaryExpression[185:13-185:27][Identifier[185:13-185:23][currentBit] % Literal[185:26-185:27][4]]
					AssignmentStatement[186:13-186:78][Identifier[186:13-186:30][expectedHashIndex] = BinaryExpression[186:33-186:78][BinaryExpression[186:33-186:74][BinaryExpression[186:34-186:60][CallExpression[186:34-186:56][Identifier[186:34-186:39][floor](BinaryExpression[186:40-186:55][Identifier[186:40-186:51][hashPointer] / Literal[186:54-186:55][3]])] * Literal[186:59-186:60][3]] % Identifier[186:64-186:74][hashLength]] - Literal[186:77-186:78][1]]]
					IfStatement[187:13-187:65][
						IfShortcutClause[187:13-187:65][NegationExpression[187:17-187:53][not CallExpression[187:21-187:53][MemberExpression[187:21-187:34][Identifier[187:21-187:25][hash].Identifier[187:26-187:34][hasIndex]](Identifier[187:35-187:52][expectedHashIndex])]]
							BreakStatement[187:60-187:65][]
						]
					]
					AssignmentStatement[188:13-188:40][Identifier[188:13-188:14][m] = IndexExpression[188:17-188:40][Identifier[188:17-188:21][hash][Identifier[188:22-188:39][expectedHashIndex]]]]
					AssignmentStatement[189:13-189:48][Identifier[189:13-189:22][operation] = CallExpression[189:25-189:48][Identifier[189:25-189:28][AND](BinaryExpression[189:29-189:44][BinaryNegatedExpression[189:29-189:31][- Literal[189:30-189:31][2]] * Identifier[189:34-189:44][bitCounter]], Literal[189:46-189:47][6])]]
					AssignmentStatement[190:13-190:54][Identifier[190:13-190:22][operation] = CallExpression[190:25-190:54][Identifier[190:25-190:31][RSHIFT](Identifier[190:32-190:42][bitStorage], Identifier[190:44-190:53][operation])]]
					AssignmentStatement[191:13-191:44][Identifier[191:13-191:22][operation] = CallExpression[191:25-191:44][Identifier[191:25-191:28][AND](Literal[191:29-191:32][255], Identifier[191:34-191:43][operation])]]
					IfStatement[192:13-196:19][
						IfClause[192:13-196:19][BinaryExpression[192:17-192:31][Identifier[192:17-192:26][operation] != Literal[192:30-192:31][0]]
							AssignmentStatement[193:17-193:41][Identifier[193:17-193:25][charCode] = BinaryExpression[193:28-193:41][Identifier[193:28-193:37][operation] - Identifier[193:40-193:41][m]]]
							IfStatement[194:17-194:58][
								IfShortcutClause[194:17-194:58][BinaryExpression[194:21-194:46][Identifier[194:21-194:29][charCode] > MemberExpression[194:32-194:46][Identifier[194:32-194:34][me].Identifier[194:35-194:46][maxCharCode]]]
									BreakStatement[194:53-194:58][]
								]
							]
							CallExpression[195:17-195:44][MemberExpression[195:17-195:28][Identifier[195:17-195:23][output].Identifier[195:24-195:28][push]](CallExpression[195:29-195:43][Identifier[195:29-195:33][char](Identifier[195:34-195:42][charCode])])]
						]
					]
					AssignmentStatement[197:13-197:42][Identifier[197:13-197:24][hashPointer] = BinaryExpression[197:27-197:42][Identifier[197:27-197:38][hashPointer] + Literal[197:41-197:42][1]]]
				]
			]
			AssignmentStatement[199:9-199:32][Identifier[199:9-199:17][position] = BinaryExpression[199:20-199:32][Identifier[199:20-199:28][position] + Literal[199:31-199:32][1]]]
		]
		ReturnStatement[201:5-201:27][CallExpression[201:12-201:27][MemberExpression[201:12-201:23][Identifier[201:12-201:18][output].Identifier[201:19-201:23][join]](Literal[201:24-201:26][])]]
	]]
	AssignmentStatement[204:1-204:40][Identifier[204:1-204:5][test] = CallExpression[204:8-204:40][MemberExpression[204:8-204:32][UnaryExpression[204:9-204:19][new Identifier[204:13-204:19][Crypto]].Identifier[204:21-204:32][constructor]](Literal[204:33-204:39][test])]]
	AssignmentStatement[206:1-206:14][Identifier[206:1-206:4][pwd] = Literal[206:7-206:14][abcde]]
	AssignmentStatement[208:1-208:24][Identifier[208:1-208:4][foo] = CallExpression[208:7-208:24][MemberExpression[208:7-208:19][Identifier[208:7-208:11][test].Identifier[208:12-208:19][encrypt]](Identifier[208:20-208:23][pwd])]]
	AssignmentStatement[209:1-209:30][Identifier[209:1-209:10][decrypted] = CallExpression[209:13-209:30][MemberExpression[209:13-209:25][Identifier[209:13-209:17][test].Identifier[209:18-209:25][decrypt]](Identifier[209:26-209:29][foo])]]
	CallExpression[211:1-211:11][Identifier[211:1-211:6][print](Identifier[211:7-211:10][foo])]
	CallExpression[212:1-212:17][Identifier[212:1-212:6][print](Identifier[212:7-212:16][decrypted])]
]"
`;

exports[`parse default scripts pseudo-crypto.src 2`] = `undefined`;

exports[`parse default scripts pseudo-crypto.src 3`] = `76`;

exports[`parse default scripts pseudo-crypto.src 4`] = `29`;

exports[`parse default scripts pseudo-crypto.src unsafe 1`] = `
"Chunk[1:1-213:1][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][String] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-6:13][MemberExpression[3:1-3:19][Identifier[3:1-3:7][String].Identifier[3:8-3:19][constructor]] = Function[3:22-6:13][Identifier[3:31-3:34][str] =>
		AssignmentStatement[4:5-4:19][MemberExpression[4:5-4:13][Identifier[4:5-4:9][self].Identifier[4:10-4:13][str]] = Identifier[4:16-4:19][str]]
		ReturnStatement[5:5-5:16][Identifier[5:12-5:16][self]]
	]]
	AssignmentStatement[8:1-19:13][MemberExpression[8:1-8:13][Identifier[8:1-8:7][String].Identifier[8:8-8:13][parse]] = Function[8:16-19:13][Identifier[8:25-8:31][values] =>
		AssignmentStatement[9:5-9:22][Identifier[9:5-9:11][result] = MemberExpression[9:14-9:22][Identifier[9:14-9:18][self].Identifier[9:19-9:22][str]]]
		AssignmentStatement[10:5-10:14][Identifier[10:5-10:10][index] = Literal[10:13-10:14][0]]
		AssignmentStatement[11:5-11:26][Identifier[11:5-11:13][maxIndex] = MemberExpression[11:16-11:26][Identifier[11:16-11:22][values].Identifier[11:23-11:26][len]]]
		WhileStatement[13:5-16:14][BinaryExpression[13:11-13:27][Identifier[13:11-13:16][index] < Identifier[13:19-13:27][maxIndex]]
			AssignmentStatement[14:9-14:58][Identifier[14:9-14:15][result] = CallExpression[14:18-14:58][MemberExpression[14:18-14:32][Identifier[14:18-14:24][result].Identifier[14:25-14:32][replace]](BinaryExpression[14:33-14:42][Literal[14:33-14:36][$] + Identifier[14:37-14:42][index]], IndexExpression[14:44-14:57][Identifier[14:44-14:50][values][Identifier[14:51-14:56][index]]])]]
			AssignmentStatement[15:9-15:26][Identifier[15:9-15:14][index] = BinaryExpression[15:17-15:26][Identifier[15:17-15:22][index] + Literal[15:25-15:26][1]]]
		]
		ReturnStatement[18:5-18:42][CallExpression[18:12-18:42][MemberExpression[18:12-18:34][UnaryExpression[18:13-18:21][new Identifier[18:17-18:21][self]].Identifier[18:23-18:34][constructor]](Identifier[18:35-18:41][result])]]
	]]
	AssignmentStatement[21:1-23:13][MemberExpression[21:1-21:18][Identifier[21:1-21:7][String].Identifier[21:8-21:18][startsWith]] = Function[21:21-23:13][Identifier[21:30-21:33][str] =>
		ReturnStatement[22:5-22:38][BinaryExpression[22:12-22:38][CallExpression[22:12-22:33][MemberExpression[22:12-22:28][MemberExpression[22:12-22:20][Identifier[22:12-22:16][self].Identifier[22:17-22:20][str]].Identifier[22:21-22:28][indexOf]](Identifier[22:29-22:32][str])] == Literal[22:37-22:38][0]]]
	]]
	AssignmentStatement[25:1-27:13][MemberExpression[25:1-25:14][Identifier[25:1-25:7][String].Identifier[25:8-25:14][substr]] = Function[25:17-27:13][Identifier[25:26-25:36][startIndex], Identifier[25:38-25:46][endIndex] =>
		ReturnStatement[26:5-26:73][CallExpression[26:12-26:73][MemberExpression[26:12-26:34][UnaryExpression[26:13-26:21][new Identifier[26:17-26:21][self]].Identifier[26:23-26:34][constructor]](CallExpression[26:35-26:72][Identifier[26:35-26:40][slice](MemberExpression[26:41-26:49][Identifier[26:41-26:45][self].Identifier[26:46-26:49][str]], Identifier[26:51-26:61][startIndex], Identifier[26:63-26:71][endIndex])])]]
	]]
	AssignmentStatement[29:1-31:13][MemberExpression[29:1-29:15][Identifier[29:1-29:7][String].Identifier[29:8-29:15][indexOf]] = Function[29:18-31:13][Identifier[29:27-29:30][str] =>
		ReturnStatement[30:5-30:33][CallExpression[30:12-30:33][MemberExpression[30:12-30:28][MemberExpression[30:12-30:20][Identifier[30:12-30:16][self].Identifier[30:17-30:20][str]].Identifier[30:21-30:28][indexOf]](Identifier[30:29-30:32][str])]]
	]]
	AssignmentStatement[33:1-35:13][MemberExpression[33:1-33:15][Identifier[33:1-33:7][String].Identifier[33:8-33:15][replace]] = Function[33:18-35:13][Identifier[33:27-33:30][str], Identifier[33:32-33:38][newStr] =>
		ReturnStatement[34:5-34:65][CallExpression[34:12-34:65][MemberExpression[34:12-34:34][UnaryExpression[34:13-34:21][new Identifier[34:17-34:21][self]].Identifier[34:23-34:34][constructor]](CallExpression[34:35-34:64][MemberExpression[34:35-34:51][MemberExpression[34:35-34:43][Identifier[34:35-34:39][self].Identifier[34:40-34:43][str]].Identifier[34:44-34:51][replace]](Identifier[34:52-34:55][str], Identifier[34:57-34:63][newStr])])]]
	]]
	AssignmentStatement[37:1-39:13][MemberExpression[37:1-37:14][Identifier[37:1-37:7][String].Identifier[37:8-37:14][remove]] = Function[37:17-39:13][Identifier[37:26-37:29][str] =>
		ReturnStatement[38:5-38:56][CallExpression[38:12-38:56][MemberExpression[38:12-38:34][UnaryExpression[38:13-38:21][new Identifier[38:17-38:21][self]].Identifier[38:23-38:34][constructor]](CallExpression[38:35-38:55][MemberExpression[38:35-38:50][MemberExpression[38:35-38:43][Identifier[38:35-38:39][self].Identifier[38:40-38:43][str]].Identifier[38:44-38:50][remove]](Identifier[38:51-38:54][str])])]]
	]]
	AssignmentStatement[41:1-43:13][MemberExpression[41:1-41:16][Identifier[41:1-41:7][String].Identifier[41:8-41:16][toString]] = Function[41:19-43:13][ =>
		ReturnStatement[42:5-42:20][MemberExpression[42:12-42:20][Identifier[42:12-42:16][self].Identifier[42:17-42:20][str]]]
	]]
	AssignmentStatement[45:1-47:13][MemberExpression[45:1-45:14][Identifier[45:1-45:7][String].Identifier[45:8-45:14][length]] = Function[45:17-47:13][ =>
		ReturnStatement[46:5-46:24][MemberExpression[46:12-46:24][MemberExpression[46:12-46:20][Identifier[46:12-46:16][self].Identifier[46:17-46:20][str]].Identifier[46:21-46:24][len]]]
	]]
	AssignmentStatement[49:1-51:13][MemberExpression[49:1-49:13][Identifier[49:1-49:7][String].Identifier[49:8-49:13][split]] = Function[49:16-51:13][Identifier[49:25-49:34][seperator] =>
		ReturnStatement[50:5-50:37][CallExpression[50:12-50:37][MemberExpression[50:12-50:26][MemberExpression[50:12-50:20][Identifier[50:12-50:16][self].Identifier[50:17-50:20][str]].Identifier[50:21-50:26][split]](Identifier[50:27-50:36][seperator])]]
	]]
	AssignmentStatement[53:1-55:13][MemberExpression[53:1-53:12][Identifier[53:1-53:7][String].Identifier[53:8-53:12][trim]] = Function[53:15-55:13][Identifier[53:24-53:33][seperator] =>
		ReturnStatement[54:5-54:51][CallExpression[54:12-54:51][MemberExpression[54:12-54:34][UnaryExpression[54:13-54:21][new Identifier[54:17-54:21][self]].Identifier[54:23-54:34][constructor]](CallExpression[54:35-54:50][MemberExpression[54:35-54:48][MemberExpression[54:35-54:43][Identifier[54:35-54:39][self].Identifier[54:40-54:43][str]].Identifier[54:44-54:48][trim]]()])]]
	]]
	AssignmentStatement[57:1-57:11][Identifier[57:1-57:6][Error] = MapConstructor[57:9-57:11][]]
	AssignmentStatement[59:1-59:22][MemberExpression[59:1-59:13][Identifier[59:1-59:6][Error].Identifier[59:7-59:13][String]] = Identifier[59:16-59:22][String]]
	AssignmentStatement[61:1-68:13][MemberExpression[61:1-61:18][Identifier[61:1-61:6][Error].Identifier[61:7-61:18][constructor]] = Function[61:21-68:13][Identifier[61:30-61:37][message], Identifier[61:39-61:45][values] =>
		AssignmentStatement[62:5-62:13][Identifier[62:5-62:6][m] = Identifier[62:9-62:13][self]]
		AssignmentStatement[63:5-63:24][MemberExpression[63:5-63:14][Identifier[63:5-63:6][m].Identifier[63:7-63:14][message]] = Identifier[63:17-63:24][message]]
		IfStatement[64:5-66:11][
			IfClause[64:5-66:11][BinaryExpression[64:9-64:23][Identifier[64:9-64:15][values] != Literal[64:19-64:23][null]]
				AssignmentStatement[65:9-65:81][MemberExpression[65:9-65:18][Identifier[65:9-65:10][m].Identifier[65:11-65:18][message]] = CallExpression[65:21-65:81][MemberExpression[65:21-65:79][CallExpression[65:21-65:70][MemberExpression[65:21-65:62][CallExpression[65:21-65:56][MemberExpression[65:21-65:47][UnaryExpression[65:22-65:34][new MemberExpression[65:26-65:34][Identifier[65:26-65:27][m].Identifier[65:28-65:34][String]]].Identifier[65:36-65:47][constructor]](Identifier[65:48-65:55][message])].Identifier[65:57-65:62][parse]](Identifier[65:63-65:69][values])].Identifier[65:71-65:79][toString]]()]]
			]
		]
		ReturnStatement[67:5-67:13][Identifier[67:12-67:13][m]]
	]]
	AssignmentStatement[70:1-72:13][MemberExpression[70:1-70:12][Identifier[70:1-70:6][Error].Identifier[70:7-70:12][throw]] = Function[70:15-72:13][ =>
		CallExpression[71:5-71:56][Identifier[71:5-71:9][exit](BinaryExpression[71:10-71:55][BinaryExpression[71:10-71:42][Literal[71:10-71:27][<color=#ff0000>] + MemberExpression[71:30-71:42][Identifier[71:30-71:34][self].Identifier[71:35-71:42][message]]] + Literal[71:45-71:55][</color>]])]
	]]
	AssignmentStatement[74:1-74:12][Identifier[74:1-74:7][Crypto] = MapConstructor[74:10-74:12][]]
	AssignmentStatement[76:1-76:91][MemberExpression[76:1-76:22][Identifier[76:1-76:7][Crypto].Identifier[76:8-76:22][defaultCharset]] = Literal[76:25-76:91][QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-]]
	AssignmentStatement[77:1-77:33][MemberExpression[77:1-77:21][Identifier[77:1-77:7][Crypto].Identifier[77:8-77:21][defaultSecret]] = Literal[77:24-77:33][test123]]
	AssignmentStatement[78:1-78:27][MemberExpression[78:1-78:19][Identifier[78:1-78:7][Crypto].Identifier[78:8-78:19][maxCharCode]] = Literal[78:22-78:27][55295]]
	AssignmentStatement[79:1-79:21][MemberExpression[79:1-79:13][Identifier[79:1-79:7][Crypto].Identifier[79:8-79:13][Error]] = Identifier[79:16-79:21][Error]]
	AssignmentStatement[81:1-90:13][MemberExpression[81:1-81:19][Identifier[81:1-81:7][Crypto].Identifier[81:8-81:19][constructor]] = Function[81:22-90:13][Identifier[81:31-81:44][defaultSecret], Identifier[81:46-81:52][hashFn], Identifier[81:54-81:61][charset] =>
		AssignmentStatement[82:5-82:14][Identifier[82:5-82:7][me] = Identifier[82:10-82:14][self]]
		AssignmentStatement[83:5-83:37][MemberExpression[83:5-83:21][Identifier[83:5-83:7][me].Identifier[83:8-83:21][defaultSecret]] = Identifier[83:24-83:37][defaultSecret]]
		AssignmentStatement[84:5-84:23][MemberExpression[84:5-84:13][Identifier[84:5-84:7][me].Identifier[84:8-84:13][table]] = Identifier[84:16-84:23][charset]]
		AssignmentStatement[85:5-85:24][MemberExpression[85:5-85:14][Identifier[85:5-85:7][me].Identifier[85:8-85:14][hashFn]] = UnaryExpression[85:17-85:24][@ Identifier[85:18-85:24][hashFn]]]
		IfStatement[86:5-86:47][
			IfShortcutClause[86:5-86:47][BinaryExpression[86:9-86:24][UnaryExpression[86:9-86:16][@ Identifier[86:10-86:16][hashFn]] == Literal[86:20-86:24][null]]
				AssignmentStatement[86:31-86:47][MemberExpression[86:31-86:40][Identifier[86:31-86:33][me].Identifier[86:34-86:40][hashFn]] = UnaryExpression[86:43-86:47][@ Identifier[86:44-86:47][md5]]]
			]
		]
		IfStatement[87:5-87:57][
			IfShortcutClause[87:5-87:57][BinaryExpression[87:8-87:23][Identifier[87:8-87:15][charset] == Literal[87:19-87:23][null]]
				AssignmentStatement[87:29-87:57][MemberExpression[87:29-87:37][Identifier[87:29-87:31][me].Identifier[87:32-87:37][table]] = MemberExpression[87:40-87:57][Identifier[87:40-87:42][me].Identifier[87:43-87:57][defaultCharset]]]
			]
		]
		IfStatement[88:5-88:103][
			IfShortcutClause[88:5-88:103][BinaryExpression[88:8-88:26][MemberExpression[88:8-88:20][MemberExpression[88:8-88:16][Identifier[88:8-88:10][me].Identifier[88:11-88:16][table]].Identifier[88:17-88:20][len]] != Literal[88:24-88:26][64]]
				CallExpression[88:32-88:103][MemberExpression[88:32-88:101][CallExpression[88:32-88:95][MemberExpression[88:32-88:58][UnaryExpression[88:33-88:45][new MemberExpression[88:37-88:45][Identifier[88:37-88:39][me].Identifier[88:40-88:45][Error]]].Identifier[88:47-88:58][constructor]](Literal[88:59-88:82][Invalid charset $0...], ListConstructor[88:84-88:94][
					ListValue[88:85-88:93][MemberExpression[88:85-88:93][Identifier[88:85-88:87][me].Identifier[88:88-88:93][table]]]
				])].Identifier[88:96-88:101][throw]]()]
			]
		]
		ReturnStatement[89:5-89:14][Identifier[89:12-89:14][me]]
	]]
	AssignmentStatement[92:1-101:13][MemberExpression[92:1-92:15][Identifier[92:1-92:7][Crypto].Identifier[92:8-92:15][getHash]] = Function[92:18-101:13][Identifier[92:27-92:29][pw] =>
		AssignmentStatement[93:5-93:14][Identifier[93:5-93:7][me] = Identifier[93:10-93:14][self]]
		AssignmentStatement[94:5-94:14][Identifier[94:5-94:9][hash] = ListConstructor[94:12-94:14][]]
		AssignmentStatement[95:5-95:22][Identifier[95:5-95:6][x] = CallExpression[95:9-95:22][MemberExpression[95:9-95:18][Identifier[95:9-95:11][me].Identifier[95:12-95:18][hashFn]](Identifier[95:19-95:21][pw])]]
		For[96:5-98:12][Identifier[96:9-96:13][char] in Identifier[96:17-96:18][x]
			CallExpression[97:9-97:29][MemberExpression[97:9-97:18][Identifier[97:9-97:13][hash].Identifier[97:14-97:18][push]](MemberExpression[97:19-97:28][Identifier[97:19-97:23][char].Identifier[97:24-97:28][code]])]
		]
		MemberExpression[99:5-99:17][Identifier[99:5-99:9][hash].Identifier[99:10-99:17][reverse]]
		ReturnStatement[100:5-100:16][Identifier[100:12-100:16][hash]]
	]]
	AssignmentStatement[103:1-156:13][MemberExpression[103:1-103:15][Identifier[103:1-103:7][Crypto].Identifier[103:8-103:15][encrypt]] = Function[103:18-156:13][Identifier[103:27-103:30][str], Identifier[103:32-103:34][pw] =>
		AssignmentStatement[104:5-104:14][Identifier[104:5-104:7][me] = Identifier[104:10-104:14][self]]
		IfStatement[105:5-105:47][
			IfShortcutClause[105:5-105:47][BinaryExpression[105:9-105:19][Identifier[105:9-105:11][pw] == Literal[105:15-105:19][null]]
				AssignmentStatement[105:26-105:47][Identifier[105:26-105:28][pw] = MemberExpression[105:31-105:47][Identifier[105:31-105:33][me].Identifier[105:34-105:47][defaultSecret]]]
			]
		]
		AssignmentStatement[106:5-106:26][Identifier[106:5-106:9][hash] = CallExpression[106:12-106:26][MemberExpression[106:12-106:22][Identifier[106:12-106:14][me].Identifier[106:15-106:22][getHash]](Identifier[106:23-106:25][pw])]]
		AssignmentStatement[107:5-107:20][Identifier[107:5-107:16][hashPointer] = Literal[107:19-107:20][0]]
		AssignmentStatement[108:5-108:16][Identifier[108:5-108:11][output] = ListConstructor[108:14-108:16][]]
		AssignmentStatement[109:5-109:17][Identifier[109:5-109:13][position] = Literal[109:16-109:17][0]]
		AssignmentStatement[110:5-110:26][Identifier[110:5-110:12][padding] = BinaryExpression[110:15-110:26][MemberExpression[110:15-110:22][Identifier[110:15-110:18][str].Identifier[110:19-110:22][len]] % Literal[110:25-110:26][3]]]
		AssignmentStatement[111:5-111:28][Identifier[111:5-111:8][max] = BinaryExpression[111:11-111:28][MemberExpression[111:11-111:18][Identifier[111:11-111:14][str].Identifier[111:15-111:18][len]] - Identifier[111:21-111:28][padding]]]
		AssignmentStatement[112:5-117:17][Identifier[112:5-112:8][get] = Function[112:11-117:17][Identifier[112:20-112:21][v] =>
			IfStatement[113:9-115:15][
				IfClause[113:9-115:15][NegationExpression[113:13-113:37][not CallExpression[113:17-113:37][MemberExpression[113:17-113:34][MemberExpression[113:17-113:25][Identifier[113:17-113:19][me].Identifier[113:20-113:25][table]].Identifier[113:26-113:34][hasIndex]](Identifier[113:35-113:36][v])]]
					CallExpression[114:13-114:75][MemberExpression[114:13-114:73][CallExpression[114:13-114:67][MemberExpression[114:13-114:39][UnaryExpression[114:14-114:26][new MemberExpression[114:18-114:26][Identifier[114:18-114:20][me].Identifier[114:21-114:26][Error]]].Identifier[114:28-114:39][constructor]](Literal[114:40-114:61][Invalid index $0...], ListConstructor[114:63-114:66][
						ListValue[114:64-114:65][Identifier[114:64-114:65][v]]
					])].Identifier[114:68-114:73][throw]]()]
				]
			]
			ReturnStatement[116:9-116:27][IndexExpression[116:16-116:27][MemberExpression[116:16-116:24][Identifier[116:16-116:18][me].Identifier[116:19-116:24][table]][Identifier[116:25-116:26][v]]]]
		]]
		AssignmentStatement[118:5-120:17][Identifier[118:5-118:8][AND] = Function[118:11-120:17][Identifier[118:20-118:21][a], Identifier[118:23-118:24][b] =>
			ReturnStatement[119:9-119:34][CallExpression[119:16-119:34][Identifier[119:16-119:23][bitwise](Literal[119:24-119:27][&], Identifier[119:29-119:30][a], Identifier[119:32-119:33][b])]]
		]]
		AssignmentStatement[121:5-123:17][Identifier[121:5-121:11][LSHIFT] = Function[121:14-123:17][Identifier[121:23-121:24][a], Identifier[121:26-121:27][b] =>
			ReturnStatement[122:9-122:35][CallExpression[122:16-122:35][Identifier[122:16-122:23][bitwise](Literal[122:24-122:28][<<], Identifier[122:30-122:31][a], Identifier[122:33-122:34][b])]]
		]]
		AssignmentStatement[124:5-126:17][Identifier[124:5-124:11][RSHIFT] = Function[124:14-126:17][Identifier[124:23-124:24][a], Identifier[124:26-124:27][b] =>
			ReturnStatement[125:9-125:35][CallExpression[125:16-125:35][Identifier[125:16-125:23][bitwise](Literal[125:24-125:28][>>], Identifier[125:30-125:31][a], Identifier[125:33-125:34][b])]]
		]]
		WhileStatement[127:5-138:14][BinaryExpression[127:11-127:25][Identifier[127:11-127:19][position] < Identifier[127:22-127:25][max]]
			AssignmentStatement[128:9-128:42][Identifier[128:9-128:10][m] = IndexExpression[128:13-128:42][Identifier[128:13-128:17][hash][BinaryExpression[128:18-128:41][BinaryExpression[128:18-128:37][Identifier[128:18-128:26][position] % MemberExpression[128:29-128:37][Identifier[128:29-128:33][hash].Identifier[128:34-128:37][len]]] - Literal[128:40-128:41][1]]]]]
			AssignmentStatement[129:9-129:47][Identifier[129:9-129:10][a] = CallExpression[129:13-129:47][Identifier[129:13-129:19][LSHIFT](BinaryExpression[129:20-129:42][MemberExpression[129:20-129:38][IndexExpression[129:20-129:33][Identifier[129:20-129:23][str][Identifier[129:24-129:32][position]]].Identifier[129:34-129:38][code]] + Identifier[129:41-129:42][m]], Literal[129:44-129:46][16])]]
			AssignmentStatement[130:9-130:50][Identifier[130:9-130:10][b] = CallExpression[130:13-130:50][Identifier[130:13-130:19][LSHIFT](BinaryExpression[130:20-130:46][MemberExpression[130:20-130:42][IndexExpression[130:20-130:37][Identifier[130:20-130:23][str][BinaryExpression[130:24-130:36][Identifier[130:24-130:32][position] + Literal[130:35-130:36][1]]]].Identifier[130:38-130:42][code]] + Identifier[130:45-130:46][m]], Literal[130:48-130:49][8])]]
			AssignmentStatement[131:9-131:39][Identifier[131:9-131:10][c] = BinaryExpression[131:13-131:39][MemberExpression[131:13-131:35][IndexExpression[131:13-131:30][Identifier[131:13-131:16][str][BinaryExpression[131:17-131:29][Identifier[131:17-131:25][position] + Literal[131:28-131:29][2]]]].Identifier[131:31-131:35][code]] + Identifier[131:38-131:39][m]]]
			AssignmentStatement[132:9-132:27][Identifier[132:9-132:15][buffer] = BinaryExpression[132:18-132:27][BinaryExpression[132:18-132:23][Identifier[132:18-132:19][a] + Identifier[132:22-132:23][b]] + Identifier[132:26-132:27][c]]]
			CallExpression[133:9-133:54][MemberExpression[133:9-133:20][Identifier[133:9-133:15][output].Identifier[133:16-133:20][push]](CallExpression[133:21-133:53][Identifier[133:21-133:24][get](CallExpression[133:25-133:52][Identifier[133:25-133:28][AND](CallExpression[133:29-133:47][Identifier[133:29-133:35][RSHIFT](Identifier[133:36-133:42][buffer], Literal[133:44-133:46][18])], Literal[133:49-133:51][63])])])]
			CallExpression[134:9-134:54][MemberExpression[134:9-134:20][Identifier[134:9-134:15][output].Identifier[134:16-134:20][push]](CallExpression[134:21-134:53][Identifier[134:21-134:24][get](CallExpression[134:25-134:52][Identifier[134:25-134:28][AND](CallExpression[134:29-134:47][Identifier[134:29-134:35][RSHIFT](Identifier[134:36-134:42][buffer], Literal[134:44-134:46][12])], Literal[134:49-134:51][63])])])]
			CallExpression[135:9-135:53][MemberExpression[135:9-135:20][Identifier[135:9-135:15][output].Identifier[135:16-135:20][push]](CallExpression[135:21-135:52][Identifier[135:21-135:24][get](CallExpression[135:25-135:51][Identifier[135:25-135:28][AND](CallExpression[135:29-135:46][Identifier[135:29-135:35][RSHIFT](Identifier[135:36-135:42][buffer], Literal[135:44-135:45][6])], Literal[135:48-135:50][63])])])]
			CallExpression[136:9-136:42][MemberExpression[136:9-136:20][Identifier[136:9-136:15][output].Identifier[136:16-136:20][push]](CallExpression[136:21-136:41][Identifier[136:21-136:24][get](CallExpression[136:25-136:40][Identifier[136:25-136:28][AND](Identifier[136:29-136:35][buffer], Literal[136:37-136:39][63])])])]
			AssignmentStatement[137:9-137:32][Identifier[137:9-137:17][position] = BinaryExpression[137:20-137:32][Identifier[137:20-137:28][position] + Literal[137:31-137:32][3]]]
		]
		IfStatement[139:5-154:11][
			IfClause[139:5-148:12][BinaryExpression[139:9-139:21][Identifier[139:9-139:16][padding] == Literal[139:20-139:21][2]]
				AssignmentStatement[140:9-140:42][Identifier[140:9-140:10][m] = IndexExpression[140:13-140:42][Identifier[140:13-140:17][hash][BinaryExpression[140:18-140:41][BinaryExpression[140:18-140:37][Identifier[140:18-140:26][position] % MemberExpression[140:29-140:37][Identifier[140:29-140:33][hash].Identifier[140:34-140:37][len]]] - Literal[140:40-140:41][1]]]]]
				AssignmentStatement[141:9-141:46][Identifier[141:9-141:10][a] = CallExpression[141:13-141:46][Identifier[141:13-141:19][LSHIFT](BinaryExpression[141:20-141:42][MemberExpression[141:20-141:38][IndexExpression[141:20-141:33][Identifier[141:20-141:23][str][Identifier[141:24-141:32][position]]].Identifier[141:34-141:38][code]] + Identifier[141:41-141:42][m]], Literal[141:44-141:45][8])]]
				AssignmentStatement[142:9-142:39][Identifier[142:9-142:10][b] = BinaryExpression[142:13-142:39][MemberExpression[142:13-142:35][IndexExpression[142:13-142:30][Identifier[142:13-142:16][str][BinaryExpression[142:17-142:29][Identifier[142:17-142:25][position] + Literal[142:28-142:29][1]]]].Identifier[142:31-142:35][code]] + Identifier[142:38-142:39][m]]]
				AssignmentStatement[143:9-143:23][Identifier[143:9-143:15][buffer] = BinaryExpression[143:18-143:23][Identifier[143:18-143:19][a] + Identifier[143:22-143:23][b]]]
				CallExpression[144:9-144:45][MemberExpression[144:9-144:20][Identifier[144:9-144:15][output].Identifier[144:16-144:20][push]](CallExpression[144:21-144:44][Identifier[144:21-144:24][get](CallExpression[144:25-144:43][Identifier[144:25-144:31][RSHIFT](Identifier[144:32-144:38][buffer], Literal[144:40-144:42][10])])])]
				CallExpression[145:9-145:53][MemberExpression[145:9-145:20][Identifier[145:9-145:15][output].Identifier[145:16-145:20][push]](CallExpression[145:21-145:52][Identifier[145:21-145:24][get](CallExpression[145:25-145:51][Identifier[145:25-145:28][AND](CallExpression[145:29-145:46][Identifier[145:29-145:35][RSHIFT](Identifier[145:36-145:42][buffer], Literal[145:44-145:45][4])], Literal[145:48-145:50][63])])])]
				CallExpression[146:9-146:53][MemberExpression[146:9-146:20][Identifier[146:9-146:15][output].Identifier[146:16-146:20][push]](CallExpression[146:21-146:52][Identifier[146:21-146:24][get](CallExpression[146:25-146:51][Identifier[146:25-146:28][AND](CallExpression[146:29-146:46][Identifier[146:29-146:35][LSHIFT](Identifier[146:36-146:42][buffer], Literal[146:44-146:45][2])], Literal[146:48-146:50][63])])])]
				CallExpression[147:9-147:25][MemberExpression[147:9-147:20][Identifier[147:9-147:15][output].Identifier[147:16-147:20][push]](Literal[147:21-147:24][=])]
			]
			ElseifClause[148:13-154:11][BinaryExpression[148:14-148:26][Identifier[148:14-148:21][padding] == Literal[148:25-148:26][1]]
				AssignmentStatement[149:9-149:42][Identifier[149:9-149:10][m] = IndexExpression[149:13-149:42][Identifier[149:13-149:17][hash][BinaryExpression[149:18-149:41][BinaryExpression[149:18-149:37][Identifier[149:18-149:26][position] % MemberExpression[149:29-149:37][Identifier[149:29-149:33][hash].Identifier[149:34-149:37][len]]] - Literal[149:40-149:41][1]]]]]
				AssignmentStatement[150:9-150:40][Identifier[150:9-150:15][buffer] = BinaryExpression[150:18-150:40][MemberExpression[150:18-150:36][IndexExpression[150:18-150:31][Identifier[150:18-150:21][str][Identifier[150:22-150:30][position]]].Identifier[150:32-150:36][code]] + Identifier[150:39-150:40][m]]]
				CallExpression[151:9-151:44][MemberExpression[151:9-151:20][Identifier[151:9-151:15][output].Identifier[151:16-151:20][push]](CallExpression[151:21-151:43][Identifier[151:21-151:24][get](CallExpression[151:25-151:42][Identifier[151:25-151:31][RSHIFT](Identifier[151:32-151:38][buffer], Literal[151:40-151:41][2])])])]
				CallExpression[152:9-152:53][MemberExpression[152:9-152:20][Identifier[152:9-152:15][output].Identifier[152:16-152:20][push]](CallExpression[152:21-152:52][Identifier[152:21-152:24][get](CallExpression[152:25-152:51][Identifier[152:25-152:28][AND](CallExpression[152:29-152:46][Identifier[152:29-152:35][LSHIFT](Identifier[152:36-152:42][buffer], Literal[152:44-152:45][4])], Literal[152:48-152:50][63])])])]
				CallExpression[153:9-153:26][MemberExpression[153:9-153:20][Identifier[153:9-153:15][output].Identifier[153:16-153:20][push]](Literal[153:21-153:25][==])]
			]
		]
		ReturnStatement[155:5-155:27][CallExpression[155:12-155:27][MemberExpression[155:12-155:23][Identifier[155:12-155:18][output].Identifier[155:19-155:23][join]](Literal[155:24-155:26][])]]
	]]
	AssignmentStatement[158:1-202:13][MemberExpression[158:1-158:15][Identifier[158:1-158:7][Crypto].Identifier[158:8-158:15][decrypt]] = Function[158:18-202:13][Identifier[158:27-158:30][str], Identifier[158:32-158:34][pw] =>
		AssignmentStatement[159:5-159:14][Identifier[159:5-159:7][me] = Identifier[159:10-159:14][self]]
		IfStatement[160:5-160:47][
			IfShortcutClause[160:5-160:47][BinaryExpression[160:9-160:19][Identifier[160:9-160:11][pw] == Literal[160:15-160:19][null]]
				AssignmentStatement[160:26-160:47][Identifier[160:26-160:28][pw] = MemberExpression[160:31-160:47][Identifier[160:31-160:33][me].Identifier[160:34-160:47][defaultSecret]]]
			]
		]
		AssignmentStatement[161:5-161:26][Identifier[161:5-161:9][hash] = CallExpression[161:12-161:26][MemberExpression[161:12-161:22][Identifier[161:12-161:14][me].Identifier[161:15-161:22][getHash]](Identifier[161:23-161:25][pw])]]
		AssignmentStatement[162:5-162:20][Identifier[162:5-162:16][hashPointer] = Literal[162:19-162:20][0]]
		AssignmentStatement[163:5-163:26][Identifier[163:5-163:15][hashLength] = MemberExpression[163:18-163:26][Identifier[163:18-163:22][hash].Identifier[163:23-163:26][len]]]
		AssignmentStatement[164:5-164:16][Identifier[164:5-164:11][output] = ListConstructor[164:14-164:16][]]
		AssignmentStatement[165:5-165:19][Identifier[165:5-165:15][bitCounter] = Literal[165:18-165:19][0]]
		AssignmentStatement[166:5-166:19][Identifier[166:5-166:15][bitStorage] = Literal[166:18-166:19][0]]
		AssignmentStatement[167:5-167:17][Identifier[167:5-167:13][position] = Literal[167:16-167:17][0]]
		AssignmentStatement[168:5-168:20][Identifier[168:5-168:16][hashPointer] = Literal[168:19-168:20][0]]
		AssignmentStatement[169:5-169:18][Identifier[169:5-169:8][max] = MemberExpression[169:11-169:18][Identifier[169:11-169:14][str].Identifier[169:15-169:18][len]]]
		AssignmentStatement[170:5-172:17][Identifier[170:5-170:8][AND] = Function[170:11-172:17][Identifier[170:20-170:21][a], Identifier[170:23-170:24][b] =>
			ReturnStatement[171:9-171:34][CallExpression[171:16-171:34][Identifier[171:16-171:23][bitwise](Literal[171:24-171:27][&], Identifier[171:29-171:30][a], Identifier[171:32-171:33][b])]]
		]]
		AssignmentStatement[173:5-175:17][Identifier[173:5-173:11][RSHIFT] = Function[173:14-175:17][Identifier[173:23-173:24][a], Identifier[173:26-173:27][b] =>
			ReturnStatement[174:9-174:35][CallExpression[174:16-174:35][Identifier[174:16-174:23][bitwise](Literal[174:24-174:28][>>], Identifier[174:30-174:31][a], Identifier[174:33-174:34][b])]]
		]]
		WhileStatement[176:5-200:14][BinaryExpression[176:11-176:25][Identifier[176:11-176:19][position] < Identifier[176:22-176:25][max]]
			AssignmentStatement[177:9-177:49][Identifier[177:9-177:15][buffer] = CallExpression[177:18-177:49][MemberExpression[177:18-177:34][MemberExpression[177:18-177:26][Identifier[177:18-177:20][me].Identifier[177:21-177:26][table]].Identifier[177:27-177:34][indexOf]](IndexExpression[177:35-177:48][Identifier[177:35-177:38][str][Identifier[177:39-177:47][position]]])]]
			AssignmentStatement[178:9-178:32][Identifier[178:9-178:19][currentBit] = Identifier[178:22-178:32][bitCounter]]
			AssignmentStatement[179:9-179:36][Identifier[179:9-179:19][bitCounter] = BinaryExpression[179:22-179:36][Identifier[179:22-179:32][bitCounter] + Literal[179:35-179:36][1]]]
			IfStatement[180:9-184:15][
				IfClause[180:9-182:13][BinaryExpression[180:13-180:27][Identifier[180:13-180:23][currentBit] % Literal[180:26-180:27][4]]
					AssignmentStatement[181:13-181:50][Identifier[181:13-181:23][bitStorage] = BinaryExpression[181:26-181:50][BinaryExpression[181:26-181:41][Identifier[181:26-181:36][bitStorage] * Literal[181:39-181:41][64]] + Identifier[181:44-181:50][buffer]]]
				]
				ElseClause[182:13-184:15][
					AssignmentStatement[183:13-183:32][Identifier[183:13-183:23][bitStorage] = Identifier[183:26-183:32][buffer]]
				}]
			]
			IfStatement[185:9-198:15][
				IfClause[185:9-198:15][BinaryExpression[185:13-185:27][Identifier[185:13-185:23][currentBit] % Literal[185:26-185:27][4]]
					AssignmentStatement[186:13-186:78][Identifier[186:13-186:30][expectedHashIndex] = BinaryExpression[186:33-186:78][BinaryExpression[186:33-186:74][BinaryExpression[186:34-186:60][CallExpression[186:34-186:56][Identifier[186:34-186:39][floor](BinaryExpression[186:40-186:55][Identifier[186:40-186:51][hashPointer] / Literal[186:54-186:55][3]])] * Literal[186:59-186:60][3]] % Identifier[186:64-186:74][hashLength]] - Literal[186:77-186:78][1]]]
					IfStatement[187:13-187:65][
						IfShortcutClause[187:13-187:65][NegationExpression[187:17-187:53][not CallExpression[187:21-187:53][MemberExpression[187:21-187:34][Identifier[187:21-187:25][hash].Identifier[187:26-187:34][hasIndex]](Identifier[187:35-187:52][expectedHashIndex])]]
							BreakStatement[187:60-187:65][]
						]
					]
					AssignmentStatement[188:13-188:40][Identifier[188:13-188:14][m] = IndexExpression[188:17-188:40][Identifier[188:17-188:21][hash][Identifier[188:22-188:39][expectedHashIndex]]]]
					AssignmentStatement[189:13-189:48][Identifier[189:13-189:22][operation] = CallExpression[189:25-189:48][Identifier[189:25-189:28][AND](BinaryExpression[189:29-189:44][BinaryNegatedExpression[189:29-189:31][- Literal[189:30-189:31][2]] * Identifier[189:34-189:44][bitCounter]], Literal[189:46-189:47][6])]]
					AssignmentStatement[190:13-190:54][Identifier[190:13-190:22][operation] = CallExpression[190:25-190:54][Identifier[190:25-190:31][RSHIFT](Identifier[190:32-190:42][bitStorage], Identifier[190:44-190:53][operation])]]
					AssignmentStatement[191:13-191:44][Identifier[191:13-191:22][operation] = CallExpression[191:25-191:44][Identifier[191:25-191:28][AND](Literal[191:29-191:32][255], Identifier[191:34-191:43][operation])]]
					IfStatement[192:13-196:19][
						IfClause[192:13-196:19][BinaryExpression[192:17-192:31][Identifier[192:17-192:26][operation] != Literal[192:30-192:31][0]]
							AssignmentStatement[193:17-193:41][Identifier[193:17-193:25][charCode] = BinaryExpression[193:28-193:41][Identifier[193:28-193:37][operation] - Identifier[193:40-193:41][m]]]
							IfStatement[194:17-194:58][
								IfShortcutClause[194:17-194:58][BinaryExpression[194:21-194:46][Identifier[194:21-194:29][charCode] > MemberExpression[194:32-194:46][Identifier[194:32-194:34][me].Identifier[194:35-194:46][maxCharCode]]]
									BreakStatement[194:53-194:58][]
								]
							]
							CallExpression[195:17-195:44][MemberExpression[195:17-195:28][Identifier[195:17-195:23][output].Identifier[195:24-195:28][push]](CallExpression[195:29-195:43][Identifier[195:29-195:33][char](Identifier[195:34-195:42][charCode])])]
						]
					]
					AssignmentStatement[197:13-197:42][Identifier[197:13-197:24][hashPointer] = BinaryExpression[197:27-197:42][Identifier[197:27-197:38][hashPointer] + Literal[197:41-197:42][1]]]
				]
			]
			AssignmentStatement[199:9-199:32][Identifier[199:9-199:17][position] = BinaryExpression[199:20-199:32][Identifier[199:20-199:28][position] + Literal[199:31-199:32][1]]]
		]
		ReturnStatement[201:5-201:27][CallExpression[201:12-201:27][MemberExpression[201:12-201:23][Identifier[201:12-201:18][output].Identifier[201:19-201:23][join]](Literal[201:24-201:26][])]]
	]]
	AssignmentStatement[204:1-204:40][Identifier[204:1-204:5][test] = CallExpression[204:8-204:40][MemberExpression[204:8-204:32][UnaryExpression[204:9-204:19][new Identifier[204:13-204:19][Crypto]].Identifier[204:21-204:32][constructor]](Literal[204:33-204:39][test])]]
	AssignmentStatement[206:1-206:14][Identifier[206:1-206:4][pwd] = Literal[206:7-206:14][abcde]]
	AssignmentStatement[208:1-208:24][Identifier[208:1-208:4][foo] = CallExpression[208:7-208:24][MemberExpression[208:7-208:19][Identifier[208:7-208:11][test].Identifier[208:12-208:19][encrypt]](Identifier[208:20-208:23][pwd])]]
	AssignmentStatement[209:1-209:30][Identifier[209:1-209:10][decrypted] = CallExpression[209:13-209:30][MemberExpression[209:13-209:25][Identifier[209:13-209:17][test].Identifier[209:18-209:25][decrypt]](Identifier[209:26-209:29][foo])]]
	CallExpression[211:1-211:11][Identifier[211:1-211:6][print](Identifier[211:7-211:10][foo])]
	CallExpression[212:1-212:17][Identifier[212:1-212:6][print](Identifier[212:7-212:16][decrypted])]
]"
`;

exports[`parse default scripts random.ms 1`] = `
"Chunk[1:1-62:39][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][Random] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-3:17][MemberExpression[3:1-3:12][Identifier[3:1-3:7][Random].Identifier[3:8-3:12][pool]] = MapConstructor[3:15-3:17][]]
	AssignmentStatement[4:1-4:30][MemberExpression[4:1-4:19][Identifier[4:1-4:7][Random].Identifier[4:8-4:19][defaultSeed]] = Literal[4:22-4:30][random]]
	AssignmentStatement[6:1-8:13][MemberExpression[6:1-6:18][Identifier[6:1-6:7][Random].Identifier[6:8-6:18][createPool]] = Function[6:21-8:13][Identifier[6:30-6:34][seed], Identifier[6:36-6:39][val] =>
		ReturnStatement[7:5-7:59][MapConstructor[7:12-7:59][
			MapKeyString[7:14-7:26][Literal[7:14-7:20][seed]: Identifier[7:22-7:26][seed]]
			MapKeyString[7:28-7:40][Literal[7:28-7:35][value]: Identifier[7:37-7:40][val]]
			MapKeyString[7:42-7:57][Literal[7:42-7:54][generation]: Literal[7:56-7:57][0]]
		]]
	]]
	AssignmentStatement[10:1-20:13][MemberExpression[10:1-10:16][Identifier[10:1-10:7][Random].Identifier[10:8-10:16][calcSeed]] = Function[10:19-20:13][Identifier[10:28-10:32][seed] =>
		AssignmentStatement[11:5-11:16][Identifier[11:5-11:12][seedVal] = Literal[11:15-11:16][0]]
		AssignmentStatement[12:5-12:19][Identifier[12:5-12:8][pos] = MemberExpression[12:11-12:19][Identifier[12:11-12:15][seed].Identifier[12:16-12:19][len]]]
		For[14:5-17:12][Identifier[14:9-14:13][char] in Identifier[14:17-14:21][seed]
			AssignmentStatement[15:9-15:44][Identifier[15:9-15:16][seedVal] = BinaryExpression[15:19-15:44][BinaryExpression[15:19-15:38][Identifier[15:19-15:26][seedVal] + MemberExpression[15:29-15:38][Identifier[15:29-15:33][char].Identifier[15:34-15:38][code]]] + Identifier[15:41-15:44][pos]]]
			AssignmentStatement[16:9-16:22][Identifier[16:9-16:12][pos] = BinaryExpression[16:15-16:22][Identifier[16:15-16:18][pos] - Literal[16:21-16:22][1]]]
		]
		ReturnStatement[19:5-19:19][Identifier[19:12-19:19][seedVal]]
	]]
	AssignmentStatement[22:1-42:13][MemberExpression[22:1-22:11][Identifier[22:1-22:7][Random].Identifier[22:8-22:11][gen]] = Function[22:14-42:13][Identifier[22:23-22:26][min], Identifier[22:28-22:31][max], Identifier[22:33-22:37][seed], Identifier[22:39-22:42][inc] =>
		AssignmentStatement[23:5-23:14][Identifier[23:5-23:7][me] = Identifier[23:10-23:14][self]]
		AssignmentStatement[24:5-24:19][Identifier[24:5-24:9][pool] = MemberExpression[24:12-24:19][Identifier[24:12-24:14][me].Identifier[24:15-24:19][pool]]]
		IfStatement[25:5-25:37][
			IfShortcutClause[25:5-25:37][BinaryExpression[25:9-25:20][Identifier[25:9-25:12][inc] == Literal[25:16-25:20][null]]
				AssignmentStatement[25:27-25:37][Identifier[25:27-25:30][inc] = Literal[25:33-25:37][true]]
			]
		]
		IfStatement[26:5-26:49][
			IfShortcutClause[26:5-26:49][BinaryExpression[26:9-26:21][Identifier[26:9-26:13][seed] == Literal[26:17-26:21][null]]
				AssignmentStatement[26:28-26:49][Identifier[26:28-26:32][seed] = MemberExpression[26:35-26:49][Identifier[26:35-26:37][me].Identifier[26:38-26:49][defaultSeed]]]
			]
		]
		IfStatement[27:5-34:11][
			IfClause[27:5-34:11][CallExpression[27:9-27:28][MemberExpression[27:9-27:22][Identifier[27:9-27:13][pool].Identifier[27:14-27:22][hasIndex]](Identifier[27:23-27:27][seed])]
				AssignmentStatement[28:9-28:24][Identifier[28:9-28:11][ps] = IndexExpression[28:14-28:24][Identifier[28:14-28:18][pool][Identifier[28:19-28:23][seed]]]]
				IfStatement[29:9-29:42][
					IfShortcutClause[29:9-29:42][NegationExpression[29:13-29:20][not Identifier[29:17-29:20][inc]]
						ReturnStatement[29:27-29:42][MemberExpression[29:34-29:42][Identifier[29:34-29:36][ps].Identifier[29:37-29:42][value]]]
					]
				]
				AssignmentStatement[30:9-30:42][MemberExpression[30:9-30:22][Identifier[30:9-30:11][ps].Identifier[30:12-30:22][generation]] = BinaryExpression[30:25-30:42][MemberExpression[30:25-30:38][Identifier[30:25-30:27][ps].Identifier[30:28-30:38][generation]] + Literal[30:41-30:42][1]]]
				AssignmentStatement[31:9-31:73][Identifier[31:9-31:12][val] = CallExpression[31:15-31:73][Identifier[31:15-31:20][floor](BinaryExpression[31:21-31:72][BinaryExpression[31:22-31:65][CallExpression[31:22-31:51][Identifier[31:22-31:25][rnd](BinaryExpression[31:26-31:50][MemberExpression[31:26-31:34][Identifier[31:26-31:28][ps].Identifier[31:29-31:34][value]] + MemberExpression[31:37-31:50][Identifier[31:37-31:39][ps].Identifier[31:40-31:50][generation]]])] * BinaryExpression[31:55-31:64][Identifier[31:55-31:58][max] - Identifier[31:61-31:64][min]]] + Identifier[31:69-31:72][min]])]]
				AssignmentStatement[32:9-32:23][MemberExpression[32:9-32:17][Identifier[32:9-32:11][ps].Identifier[32:12-32:17][value]] = Identifier[32:20-32:23][val]]
				ReturnStatement[33:9-33:19][Identifier[33:16-33:19][val]]
			]
		]
		AssignmentStatement[36:5-36:32][Identifier[36:5-36:12][seedVal] = CallExpression[36:15-36:32][MemberExpression[36:15-36:26][Identifier[36:15-36:17][me].Identifier[36:18-36:26][calcSeed]](Identifier[36:27-36:31][seed])]]
		AssignmentStatement[38:5-38:52][Identifier[38:5-38:8][val] = CallExpression[38:11-38:52][Identifier[38:11-38:16][floor](BinaryExpression[38:17-38:51][BinaryExpression[38:18-38:44][CallExpression[38:18-38:30][Identifier[38:18-38:21][rnd](Identifier[38:22-38:29][seedVal])] * BinaryExpression[38:34-38:43][Identifier[38:34-38:37][max] - Identifier[38:40-38:43][min]]] + Identifier[38:48-38:51][min]])]]
		AssignmentStatement[39:5-39:45][IndexExpression[39:5-39:15][Identifier[39:5-39:9][pool][Identifier[39:10-39:14][seed]]] = CallExpression[39:18-39:45][MemberExpression[39:18-39:31][Identifier[39:18-39:20][me].Identifier[39:21-39:31][createPool]](Identifier[39:32-39:39][seedVal], Identifier[39:41-39:44][val])]]
		ReturnStatement[41:5-41:15][Identifier[41:12-41:15][val]]
	]]
	AssignmentStatement[44:1-55:13][MemberExpression[44:1-44:11][Identifier[44:1-44:7][Random].Identifier[44:8-44:11][seq]] = Function[44:14-55:13][Identifier[44:23-44:26][min], Identifier[44:28-44:31][max], Identifier[44:33-44:37][seed], Identifier[44:39-44:45][amount], Identifier[44:47-44:55][keepPool] =>
		AssignmentStatement[45:5-45:14][Identifier[45:5-45:7][me] = Identifier[45:10-45:14][self]]
		AssignmentStatement[46:5-46:14][Identifier[46:5-46:10][index] = Literal[46:13-46:14][0]]
		AssignmentStatement[47:5-47:16][Identifier[47:5-47:11][result] = ListConstructor[47:14-47:16][]]
		WhileStatement[48:5-52:14][BinaryExpression[48:11-48:25][Identifier[48:11-48:16][index] < Identifier[48:19-48:25][amount]]
			AssignmentStatement[49:9-49:38][Identifier[49:9-49:13][temp] = CallExpression[49:16-49:38][MemberExpression[49:16-49:22][Identifier[49:16-49:18][me].Identifier[49:19-49:22][gen]](Identifier[49:23-49:26][min], Identifier[49:28-49:31][max], Identifier[49:33-49:37][seed])]]
			CallExpression[50:9-50:27][MemberExpression[50:9-50:20][Identifier[50:9-50:15][result].Identifier[50:16-50:20][push]](Identifier[50:21-50:25][temp])]
			AssignmentStatement[51:9-51:26][Identifier[51:9-51:14][index] = BinaryExpression[51:17-51:26][Identifier[51:17-51:22][index] + Literal[51:25-51:26][1]]]
		]
		IfStatement[53:5-53:52][
			IfShortcutClause[53:5-53:52][BinaryExpression[53:9-53:25][Identifier[53:9-53:17][keepPool] != Literal[53:21-53:25][true]]
				CallExpression[53:32-53:52][MemberExpression[53:32-53:46][MemberExpression[53:32-53:39][Identifier[53:32-53:34][me].Identifier[53:35-53:39][pool]].Identifier[53:40-53:46][remove]](Identifier[53:47-53:51][seed])]
			]
		]
		ReturnStatement[54:5-54:18][Identifier[54:12-54:18][result]]
	]]
	AssignmentStatement[57:1-59:13][MemberExpression[57:1-57:11][Identifier[57:1-57:7][Random].Identifier[57:8-57:11][get]] = Function[57:14-59:13][Identifier[57:23-57:26][min], Identifier[57:28-57:31][max] =>
		ReturnStatement[58:5-58:30][CallExpression[58:12-58:30][MemberExpression[58:12-58:20][Identifier[58:12-58:16][self].Identifier[58:17-58:20][gen]](Identifier[58:21-58:24][min], Identifier[58:26-58:29][max])]]
	]]
	CallExpression[61:1-61:27][Identifier[61:1-61:6][print](CallExpression[61:7-61:26][MemberExpression[61:7-61:17][Identifier[61:7-61:13][Random].Identifier[61:14-61:17][get]](Literal[61:18-61:21][100], Literal[61:22-61:25][500])])]
	CallExpression[62:1-62:39][Identifier[62:1-62:6][print](CallExpression[62:7-62:38][MemberExpression[62:7-62:17][Identifier[62:7-62:13][Random].Identifier[62:14-62:17][seq]](Literal[62:18-62:21][100], Literal[62:22-62:25][500], Literal[62:27-62:33][test], Literal[62:35-62:37][10])])]
]"
`;

exports[`parse default scripts random.ms 2`] = `undefined`;

exports[`parse default scripts random.ms 3`] = `20`;

exports[`parse default scripts random.ms 4`] = `8`;

exports[`parse default scripts random.ms unsafe 1`] = `
"Chunk[1:1-62:39][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][Random] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-3:17][MemberExpression[3:1-3:12][Identifier[3:1-3:7][Random].Identifier[3:8-3:12][pool]] = MapConstructor[3:15-3:17][]]
	AssignmentStatement[4:1-4:30][MemberExpression[4:1-4:19][Identifier[4:1-4:7][Random].Identifier[4:8-4:19][defaultSeed]] = Literal[4:22-4:30][random]]
	AssignmentStatement[6:1-8:13][MemberExpression[6:1-6:18][Identifier[6:1-6:7][Random].Identifier[6:8-6:18][createPool]] = Function[6:21-8:13][Identifier[6:30-6:34][seed], Identifier[6:36-6:39][val] =>
		ReturnStatement[7:5-7:59][MapConstructor[7:12-7:59][
			MapKeyString[7:14-7:26][Literal[7:14-7:20][seed]: Identifier[7:22-7:26][seed]]
			MapKeyString[7:28-7:40][Literal[7:28-7:35][value]: Identifier[7:37-7:40][val]]
			MapKeyString[7:42-7:57][Literal[7:42-7:54][generation]: Literal[7:56-7:57][0]]
		]]
	]]
	AssignmentStatement[10:1-20:13][MemberExpression[10:1-10:16][Identifier[10:1-10:7][Random].Identifier[10:8-10:16][calcSeed]] = Function[10:19-20:13][Identifier[10:28-10:32][seed] =>
		AssignmentStatement[11:5-11:16][Identifier[11:5-11:12][seedVal] = Literal[11:15-11:16][0]]
		AssignmentStatement[12:5-12:19][Identifier[12:5-12:8][pos] = MemberExpression[12:11-12:19][Identifier[12:11-12:15][seed].Identifier[12:16-12:19][len]]]
		For[14:5-17:12][Identifier[14:9-14:13][char] in Identifier[14:17-14:21][seed]
			AssignmentStatement[15:9-15:44][Identifier[15:9-15:16][seedVal] = BinaryExpression[15:19-15:44][BinaryExpression[15:19-15:38][Identifier[15:19-15:26][seedVal] + MemberExpression[15:29-15:38][Identifier[15:29-15:33][char].Identifier[15:34-15:38][code]]] + Identifier[15:41-15:44][pos]]]
			AssignmentStatement[16:9-16:22][Identifier[16:9-16:12][pos] = BinaryExpression[16:15-16:22][Identifier[16:15-16:18][pos] - Literal[16:21-16:22][1]]]
		]
		ReturnStatement[19:5-19:19][Identifier[19:12-19:19][seedVal]]
	]]
	AssignmentStatement[22:1-42:13][MemberExpression[22:1-22:11][Identifier[22:1-22:7][Random].Identifier[22:8-22:11][gen]] = Function[22:14-42:13][Identifier[22:23-22:26][min], Identifier[22:28-22:31][max], Identifier[22:33-22:37][seed], Identifier[22:39-22:42][inc] =>
		AssignmentStatement[23:5-23:14][Identifier[23:5-23:7][me] = Identifier[23:10-23:14][self]]
		AssignmentStatement[24:5-24:19][Identifier[24:5-24:9][pool] = MemberExpression[24:12-24:19][Identifier[24:12-24:14][me].Identifier[24:15-24:19][pool]]]
		IfStatement[25:5-25:37][
			IfShortcutClause[25:5-25:37][BinaryExpression[25:9-25:20][Identifier[25:9-25:12][inc] == Literal[25:16-25:20][null]]
				AssignmentStatement[25:27-25:37][Identifier[25:27-25:30][inc] = Literal[25:33-25:37][true]]
			]
		]
		IfStatement[26:5-26:49][
			IfShortcutClause[26:5-26:49][BinaryExpression[26:9-26:21][Identifier[26:9-26:13][seed] == Literal[26:17-26:21][null]]
				AssignmentStatement[26:28-26:49][Identifier[26:28-26:32][seed] = MemberExpression[26:35-26:49][Identifier[26:35-26:37][me].Identifier[26:38-26:49][defaultSeed]]]
			]
		]
		IfStatement[27:5-34:11][
			IfClause[27:5-34:11][CallExpression[27:9-27:28][MemberExpression[27:9-27:22][Identifier[27:9-27:13][pool].Identifier[27:14-27:22][hasIndex]](Identifier[27:23-27:27][seed])]
				AssignmentStatement[28:9-28:24][Identifier[28:9-28:11][ps] = IndexExpression[28:14-28:24][Identifier[28:14-28:18][pool][Identifier[28:19-28:23][seed]]]]
				IfStatement[29:9-29:42][
					IfShortcutClause[29:9-29:42][NegationExpression[29:13-29:20][not Identifier[29:17-29:20][inc]]
						ReturnStatement[29:27-29:42][MemberExpression[29:34-29:42][Identifier[29:34-29:36][ps].Identifier[29:37-29:42][value]]]
					]
				]
				AssignmentStatement[30:9-30:42][MemberExpression[30:9-30:22][Identifier[30:9-30:11][ps].Identifier[30:12-30:22][generation]] = BinaryExpression[30:25-30:42][MemberExpression[30:25-30:38][Identifier[30:25-30:27][ps].Identifier[30:28-30:38][generation]] + Literal[30:41-30:42][1]]]
				AssignmentStatement[31:9-31:73][Identifier[31:9-31:12][val] = CallExpression[31:15-31:73][Identifier[31:15-31:20][floor](BinaryExpression[31:21-31:72][BinaryExpression[31:22-31:65][CallExpression[31:22-31:51][Identifier[31:22-31:25][rnd](BinaryExpression[31:26-31:50][MemberExpression[31:26-31:34][Identifier[31:26-31:28][ps].Identifier[31:29-31:34][value]] + MemberExpression[31:37-31:50][Identifier[31:37-31:39][ps].Identifier[31:40-31:50][generation]]])] * BinaryExpression[31:55-31:64][Identifier[31:55-31:58][max] - Identifier[31:61-31:64][min]]] + Identifier[31:69-31:72][min]])]]
				AssignmentStatement[32:9-32:23][MemberExpression[32:9-32:17][Identifier[32:9-32:11][ps].Identifier[32:12-32:17][value]] = Identifier[32:20-32:23][val]]
				ReturnStatement[33:9-33:19][Identifier[33:16-33:19][val]]
			]
		]
		AssignmentStatement[36:5-36:32][Identifier[36:5-36:12][seedVal] = CallExpression[36:15-36:32][MemberExpression[36:15-36:26][Identifier[36:15-36:17][me].Identifier[36:18-36:26][calcSeed]](Identifier[36:27-36:31][seed])]]
		AssignmentStatement[38:5-38:52][Identifier[38:5-38:8][val] = CallExpression[38:11-38:52][Identifier[38:11-38:16][floor](BinaryExpression[38:17-38:51][BinaryExpression[38:18-38:44][CallExpression[38:18-38:30][Identifier[38:18-38:21][rnd](Identifier[38:22-38:29][seedVal])] * BinaryExpression[38:34-38:43][Identifier[38:34-38:37][max] - Identifier[38:40-38:43][min]]] + Identifier[38:48-38:51][min]])]]
		AssignmentStatement[39:5-39:45][IndexExpression[39:5-39:15][Identifier[39:5-39:9][pool][Identifier[39:10-39:14][seed]]] = CallExpression[39:18-39:45][MemberExpression[39:18-39:31][Identifier[39:18-39:20][me].Identifier[39:21-39:31][createPool]](Identifier[39:32-39:39][seedVal], Identifier[39:41-39:44][val])]]
		ReturnStatement[41:5-41:15][Identifier[41:12-41:15][val]]
	]]
	AssignmentStatement[44:1-55:13][MemberExpression[44:1-44:11][Identifier[44:1-44:7][Random].Identifier[44:8-44:11][seq]] = Function[44:14-55:13][Identifier[44:23-44:26][min], Identifier[44:28-44:31][max], Identifier[44:33-44:37][seed], Identifier[44:39-44:45][amount], Identifier[44:47-44:55][keepPool] =>
		AssignmentStatement[45:5-45:14][Identifier[45:5-45:7][me] = Identifier[45:10-45:14][self]]
		AssignmentStatement[46:5-46:14][Identifier[46:5-46:10][index] = Literal[46:13-46:14][0]]
		AssignmentStatement[47:5-47:16][Identifier[47:5-47:11][result] = ListConstructor[47:14-47:16][]]
		WhileStatement[48:5-52:14][BinaryExpression[48:11-48:25][Identifier[48:11-48:16][index] < Identifier[48:19-48:25][amount]]
			AssignmentStatement[49:9-49:38][Identifier[49:9-49:13][temp] = CallExpression[49:16-49:38][MemberExpression[49:16-49:22][Identifier[49:16-49:18][me].Identifier[49:19-49:22][gen]](Identifier[49:23-49:26][min], Identifier[49:28-49:31][max], Identifier[49:33-49:37][seed])]]
			CallExpression[50:9-50:27][MemberExpression[50:9-50:20][Identifier[50:9-50:15][result].Identifier[50:16-50:20][push]](Identifier[50:21-50:25][temp])]
			AssignmentStatement[51:9-51:26][Identifier[51:9-51:14][index] = BinaryExpression[51:17-51:26][Identifier[51:17-51:22][index] + Literal[51:25-51:26][1]]]
		]
		IfStatement[53:5-53:52][
			IfShortcutClause[53:5-53:52][BinaryExpression[53:9-53:25][Identifier[53:9-53:17][keepPool] != Literal[53:21-53:25][true]]
				CallExpression[53:32-53:52][MemberExpression[53:32-53:46][MemberExpression[53:32-53:39][Identifier[53:32-53:34][me].Identifier[53:35-53:39][pool]].Identifier[53:40-53:46][remove]](Identifier[53:47-53:51][seed])]
			]
		]
		ReturnStatement[54:5-54:18][Identifier[54:12-54:18][result]]
	]]
	AssignmentStatement[57:1-59:13][MemberExpression[57:1-57:11][Identifier[57:1-57:7][Random].Identifier[57:8-57:11][get]] = Function[57:14-59:13][Identifier[57:23-57:26][min], Identifier[57:28-57:31][max] =>
		ReturnStatement[58:5-58:30][CallExpression[58:12-58:30][MemberExpression[58:12-58:20][Identifier[58:12-58:16][self].Identifier[58:17-58:20][gen]](Identifier[58:21-58:24][min], Identifier[58:26-58:29][max])]]
	]]
	CallExpression[61:1-61:27][Identifier[61:1-61:6][print](CallExpression[61:7-61:26][MemberExpression[61:7-61:17][Identifier[61:7-61:13][Random].Identifier[61:14-61:17][get]](Literal[61:18-61:21][100], Literal[61:22-61:25][500])])]
	CallExpression[62:1-62:39][Identifier[62:1-62:6][print](CallExpression[62:7-62:38][MemberExpression[62:7-62:17][Identifier[62:7-62:13][Random].Identifier[62:14-62:17][seq]](Literal[62:18-62:21][100], Literal[62:22-62:25][500], Literal[62:27-62:33][test], Literal[62:35-62:37][10])])]
]"
`;

exports[`parse default scripts random.src 1`] = `
"Chunk[1:1-62:39][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][Random] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-3:17][MemberExpression[3:1-3:12][Identifier[3:1-3:7][Random].Identifier[3:8-3:12][pool]] = MapConstructor[3:15-3:17][]]
	AssignmentStatement[4:1-4:30][MemberExpression[4:1-4:19][Identifier[4:1-4:7][Random].Identifier[4:8-4:19][defaultSeed]] = Literal[4:22-4:30][random]]
	AssignmentStatement[6:1-8:13][MemberExpression[6:1-6:18][Identifier[6:1-6:7][Random].Identifier[6:8-6:18][createPool]] = Function[6:21-8:13][Identifier[6:30-6:34][seed], Identifier[6:36-6:39][val] =>
		ReturnStatement[7:5-7:59][MapConstructor[7:12-7:59][
			MapKeyString[7:14-7:26][Literal[7:14-7:20][seed]: Identifier[7:22-7:26][seed]]
			MapKeyString[7:28-7:40][Literal[7:28-7:35][value]: Identifier[7:37-7:40][val]]
			MapKeyString[7:42-7:57][Literal[7:42-7:54][generation]: Literal[7:56-7:57][0]]
		]]
	]]
	AssignmentStatement[10:1-20:13][MemberExpression[10:1-10:16][Identifier[10:1-10:7][Random].Identifier[10:8-10:16][calcSeed]] = Function[10:19-20:13][Identifier[10:28-10:32][seed] =>
		AssignmentStatement[11:5-11:16][Identifier[11:5-11:12][seedVal] = Literal[11:15-11:16][0]]
		AssignmentStatement[12:5-12:19][Identifier[12:5-12:8][pos] = MemberExpression[12:11-12:19][Identifier[12:11-12:15][seed].Identifier[12:16-12:19][len]]]
		For[14:5-17:12][Identifier[14:9-14:13][char] in Identifier[14:17-14:21][seed]
			AssignmentStatement[15:9-15:44][Identifier[15:9-15:16][seedVal] = BinaryExpression[15:19-15:44][BinaryExpression[15:19-15:38][Identifier[15:19-15:26][seedVal] + MemberExpression[15:29-15:38][Identifier[15:29-15:33][char].Identifier[15:34-15:38][code]]] + Identifier[15:41-15:44][pos]]]
			AssignmentStatement[16:9-16:22][Identifier[16:9-16:12][pos] = BinaryExpression[16:15-16:22][Identifier[16:15-16:18][pos] - Literal[16:21-16:22][1]]]
		]
		ReturnStatement[19:5-19:19][Identifier[19:12-19:19][seedVal]]
	]]
	AssignmentStatement[22:1-42:13][MemberExpression[22:1-22:11][Identifier[22:1-22:7][Random].Identifier[22:8-22:11][gen]] = Function[22:14-42:13][Identifier[22:23-22:26][min], Identifier[22:28-22:31][max], Identifier[22:33-22:37][seed], Identifier[22:39-22:42][inc] =>
		AssignmentStatement[23:5-23:14][Identifier[23:5-23:7][me] = Identifier[23:10-23:14][self]]
		AssignmentStatement[24:5-24:19][Identifier[24:5-24:9][pool] = MemberExpression[24:12-24:19][Identifier[24:12-24:14][me].Identifier[24:15-24:19][pool]]]
		IfStatement[25:5-25:37][
			IfShortcutClause[25:5-25:37][BinaryExpression[25:9-25:20][Identifier[25:9-25:12][inc] == Literal[25:16-25:20][null]]
				AssignmentStatement[25:27-25:37][Identifier[25:27-25:30][inc] = Literal[25:33-25:37][true]]
			]
		]
		IfStatement[26:5-26:49][
			IfShortcutClause[26:5-26:49][BinaryExpression[26:9-26:21][Identifier[26:9-26:13][seed] == Literal[26:17-26:21][null]]
				AssignmentStatement[26:28-26:49][Identifier[26:28-26:32][seed] = MemberExpression[26:35-26:49][Identifier[26:35-26:37][me].Identifier[26:38-26:49][defaultSeed]]]
			]
		]
		IfStatement[27:5-34:11][
			IfClause[27:5-34:11][CallExpression[27:9-27:28][MemberExpression[27:9-27:22][Identifier[27:9-27:13][pool].Identifier[27:14-27:22][hasIndex]](Identifier[27:23-27:27][seed])]
				AssignmentStatement[28:9-28:24][Identifier[28:9-28:11][ps] = IndexExpression[28:14-28:24][Identifier[28:14-28:18][pool][Identifier[28:19-28:23][seed]]]]
				IfStatement[29:9-29:42][
					IfShortcutClause[29:9-29:42][NegationExpression[29:13-29:20][not Identifier[29:17-29:20][inc]]
						ReturnStatement[29:27-29:42][MemberExpression[29:34-29:42][Identifier[29:34-29:36][ps].Identifier[29:37-29:42][value]]]
					]
				]
				AssignmentStatement[30:9-30:42][MemberExpression[30:9-30:22][Identifier[30:9-30:11][ps].Identifier[30:12-30:22][generation]] = BinaryExpression[30:25-30:42][MemberExpression[30:25-30:38][Identifier[30:25-30:27][ps].Identifier[30:28-30:38][generation]] + Literal[30:41-30:42][1]]]
				AssignmentStatement[31:9-31:73][Identifier[31:9-31:12][val] = CallExpression[31:15-31:73][Identifier[31:15-31:20][floor](BinaryExpression[31:21-31:72][BinaryExpression[31:22-31:65][CallExpression[31:22-31:51][Identifier[31:22-31:25][rnd](BinaryExpression[31:26-31:50][MemberExpression[31:26-31:34][Identifier[31:26-31:28][ps].Identifier[31:29-31:34][value]] + MemberExpression[31:37-31:50][Identifier[31:37-31:39][ps].Identifier[31:40-31:50][generation]]])] * BinaryExpression[31:55-31:64][Identifier[31:55-31:58][max] - Identifier[31:61-31:64][min]]] + Identifier[31:69-31:72][min]])]]
				AssignmentStatement[32:9-32:23][MemberExpression[32:9-32:17][Identifier[32:9-32:11][ps].Identifier[32:12-32:17][value]] = Identifier[32:20-32:23][val]]
				ReturnStatement[33:9-33:19][Identifier[33:16-33:19][val]]
			]
		]
		AssignmentStatement[36:5-36:32][Identifier[36:5-36:12][seedVal] = CallExpression[36:15-36:32][MemberExpression[36:15-36:26][Identifier[36:15-36:17][me].Identifier[36:18-36:26][calcSeed]](Identifier[36:27-36:31][seed])]]
		AssignmentStatement[38:5-38:52][Identifier[38:5-38:8][val] = CallExpression[38:11-38:52][Identifier[38:11-38:16][floor](BinaryExpression[38:17-38:51][BinaryExpression[38:18-38:44][CallExpression[38:18-38:30][Identifier[38:18-38:21][rnd](Identifier[38:22-38:29][seedVal])] * BinaryExpression[38:34-38:43][Identifier[38:34-38:37][max] - Identifier[38:40-38:43][min]]] + Identifier[38:48-38:51][min]])]]
		AssignmentStatement[39:5-39:45][IndexExpression[39:5-39:15][Identifier[39:5-39:9][pool][Identifier[39:10-39:14][seed]]] = CallExpression[39:18-39:45][MemberExpression[39:18-39:31][Identifier[39:18-39:20][me].Identifier[39:21-39:31][createPool]](Identifier[39:32-39:39][seedVal], Identifier[39:41-39:44][val])]]
		ReturnStatement[41:5-41:15][Identifier[41:12-41:15][val]]
	]]
	AssignmentStatement[44:1-55:13][MemberExpression[44:1-44:11][Identifier[44:1-44:7][Random].Identifier[44:8-44:11][seq]] = Function[44:14-55:13][Identifier[44:23-44:26][min], Identifier[44:28-44:31][max], Identifier[44:33-44:37][seed], Identifier[44:39-44:45][amount], Identifier[44:47-44:55][keepPool] =>
		AssignmentStatement[45:5-45:14][Identifier[45:5-45:7][me] = Identifier[45:10-45:14][self]]
		AssignmentStatement[46:5-46:14][Identifier[46:5-46:10][index] = Literal[46:13-46:14][0]]
		AssignmentStatement[47:5-47:16][Identifier[47:5-47:11][result] = ListConstructor[47:14-47:16][]]
		WhileStatement[48:5-52:14][BinaryExpression[48:11-48:25][Identifier[48:11-48:16][index] < Identifier[48:19-48:25][amount]]
			AssignmentStatement[49:9-49:38][Identifier[49:9-49:13][temp] = CallExpression[49:16-49:38][MemberExpression[49:16-49:22][Identifier[49:16-49:18][me].Identifier[49:19-49:22][gen]](Identifier[49:23-49:26][min], Identifier[49:28-49:31][max], Identifier[49:33-49:37][seed])]]
			CallExpression[50:9-50:27][MemberExpression[50:9-50:20][Identifier[50:9-50:15][result].Identifier[50:16-50:20][push]](Identifier[50:21-50:25][temp])]
			AssignmentStatement[51:9-51:26][Identifier[51:9-51:14][index] = BinaryExpression[51:17-51:26][Identifier[51:17-51:22][index] + Literal[51:25-51:26][1]]]
		]
		IfStatement[53:5-53:52][
			IfShortcutClause[53:5-53:52][BinaryExpression[53:9-53:25][Identifier[53:9-53:17][keepPool] != Literal[53:21-53:25][true]]
				CallExpression[53:32-53:52][MemberExpression[53:32-53:46][MemberExpression[53:32-53:39][Identifier[53:32-53:34][me].Identifier[53:35-53:39][pool]].Identifier[53:40-53:46][remove]](Identifier[53:47-53:51][seed])]
			]
		]
		ReturnStatement[54:5-54:18][Identifier[54:12-54:18][result]]
	]]
	AssignmentStatement[57:1-59:13][MemberExpression[57:1-57:11][Identifier[57:1-57:7][Random].Identifier[57:8-57:11][get]] = Function[57:14-59:13][Identifier[57:23-57:26][min], Identifier[57:28-57:31][max] =>
		ReturnStatement[58:5-58:30][CallExpression[58:12-58:30][MemberExpression[58:12-58:20][Identifier[58:12-58:16][self].Identifier[58:17-58:20][gen]](Identifier[58:21-58:24][min], Identifier[58:26-58:29][max])]]
	]]
	CallExpression[61:1-61:27][Identifier[61:1-61:6][print](CallExpression[61:7-61:26][MemberExpression[61:7-61:17][Identifier[61:7-61:13][Random].Identifier[61:14-61:17][get]](Literal[61:18-61:21][100], Literal[61:22-61:25][500])])]
	CallExpression[62:1-62:39][Identifier[62:1-62:6][print](CallExpression[62:7-62:38][MemberExpression[62:7-62:17][Identifier[62:7-62:13][Random].Identifier[62:14-62:17][seq]](Literal[62:18-62:21][100], Literal[62:22-62:25][500], Literal[62:27-62:33][test], Literal[62:35-62:37][10])])]
]"
`;

exports[`parse default scripts random.src 2`] = `undefined`;

exports[`parse default scripts random.src 3`] = `20`;

exports[`parse default scripts random.src 4`] = `8`;

exports[`parse default scripts random.src unsafe 1`] = `
"Chunk[1:1-62:39][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][Random] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-3:17][MemberExpression[3:1-3:12][Identifier[3:1-3:7][Random].Identifier[3:8-3:12][pool]] = MapConstructor[3:15-3:17][]]
	AssignmentStatement[4:1-4:30][MemberExpression[4:1-4:19][Identifier[4:1-4:7][Random].Identifier[4:8-4:19][defaultSeed]] = Literal[4:22-4:30][random]]
	AssignmentStatement[6:1-8:13][MemberExpression[6:1-6:18][Identifier[6:1-6:7][Random].Identifier[6:8-6:18][createPool]] = Function[6:21-8:13][Identifier[6:30-6:34][seed], Identifier[6:36-6:39][val] =>
		ReturnStatement[7:5-7:59][MapConstructor[7:12-7:59][
			MapKeyString[7:14-7:26][Literal[7:14-7:20][seed]: Identifier[7:22-7:26][seed]]
			MapKeyString[7:28-7:40][Literal[7:28-7:35][value]: Identifier[7:37-7:40][val]]
			MapKeyString[7:42-7:57][Literal[7:42-7:54][generation]: Literal[7:56-7:57][0]]
		]]
	]]
	AssignmentStatement[10:1-20:13][MemberExpression[10:1-10:16][Identifier[10:1-10:7][Random].Identifier[10:8-10:16][calcSeed]] = Function[10:19-20:13][Identifier[10:28-10:32][seed] =>
		AssignmentStatement[11:5-11:16][Identifier[11:5-11:12][seedVal] = Literal[11:15-11:16][0]]
		AssignmentStatement[12:5-12:19][Identifier[12:5-12:8][pos] = MemberExpression[12:11-12:19][Identifier[12:11-12:15][seed].Identifier[12:16-12:19][len]]]
		For[14:5-17:12][Identifier[14:9-14:13][char] in Identifier[14:17-14:21][seed]
			AssignmentStatement[15:9-15:44][Identifier[15:9-15:16][seedVal] = BinaryExpression[15:19-15:44][BinaryExpression[15:19-15:38][Identifier[15:19-15:26][seedVal] + MemberExpression[15:29-15:38][Identifier[15:29-15:33][char].Identifier[15:34-15:38][code]]] + Identifier[15:41-15:44][pos]]]
			AssignmentStatement[16:9-16:22][Identifier[16:9-16:12][pos] = BinaryExpression[16:15-16:22][Identifier[16:15-16:18][pos] - Literal[16:21-16:22][1]]]
		]
		ReturnStatement[19:5-19:19][Identifier[19:12-19:19][seedVal]]
	]]
	AssignmentStatement[22:1-42:13][MemberExpression[22:1-22:11][Identifier[22:1-22:7][Random].Identifier[22:8-22:11][gen]] = Function[22:14-42:13][Identifier[22:23-22:26][min], Identifier[22:28-22:31][max], Identifier[22:33-22:37][seed], Identifier[22:39-22:42][inc] =>
		AssignmentStatement[23:5-23:14][Identifier[23:5-23:7][me] = Identifier[23:10-23:14][self]]
		AssignmentStatement[24:5-24:19][Identifier[24:5-24:9][pool] = MemberExpression[24:12-24:19][Identifier[24:12-24:14][me].Identifier[24:15-24:19][pool]]]
		IfStatement[25:5-25:37][
			IfShortcutClause[25:5-25:37][BinaryExpression[25:9-25:20][Identifier[25:9-25:12][inc] == Literal[25:16-25:20][null]]
				AssignmentStatement[25:27-25:37][Identifier[25:27-25:30][inc] = Literal[25:33-25:37][true]]
			]
		]
		IfStatement[26:5-26:49][
			IfShortcutClause[26:5-26:49][BinaryExpression[26:9-26:21][Identifier[26:9-26:13][seed] == Literal[26:17-26:21][null]]
				AssignmentStatement[26:28-26:49][Identifier[26:28-26:32][seed] = MemberExpression[26:35-26:49][Identifier[26:35-26:37][me].Identifier[26:38-26:49][defaultSeed]]]
			]
		]
		IfStatement[27:5-34:11][
			IfClause[27:5-34:11][CallExpression[27:9-27:28][MemberExpression[27:9-27:22][Identifier[27:9-27:13][pool].Identifier[27:14-27:22][hasIndex]](Identifier[27:23-27:27][seed])]
				AssignmentStatement[28:9-28:24][Identifier[28:9-28:11][ps] = IndexExpression[28:14-28:24][Identifier[28:14-28:18][pool][Identifier[28:19-28:23][seed]]]]
				IfStatement[29:9-29:42][
					IfShortcutClause[29:9-29:42][NegationExpression[29:13-29:20][not Identifier[29:17-29:20][inc]]
						ReturnStatement[29:27-29:42][MemberExpression[29:34-29:42][Identifier[29:34-29:36][ps].Identifier[29:37-29:42][value]]]
					]
				]
				AssignmentStatement[30:9-30:42][MemberExpression[30:9-30:22][Identifier[30:9-30:11][ps].Identifier[30:12-30:22][generation]] = BinaryExpression[30:25-30:42][MemberExpression[30:25-30:38][Identifier[30:25-30:27][ps].Identifier[30:28-30:38][generation]] + Literal[30:41-30:42][1]]]
				AssignmentStatement[31:9-31:73][Identifier[31:9-31:12][val] = CallExpression[31:15-31:73][Identifier[31:15-31:20][floor](BinaryExpression[31:21-31:72][BinaryExpression[31:22-31:65][CallExpression[31:22-31:51][Identifier[31:22-31:25][rnd](BinaryExpression[31:26-31:50][MemberExpression[31:26-31:34][Identifier[31:26-31:28][ps].Identifier[31:29-31:34][value]] + MemberExpression[31:37-31:50][Identifier[31:37-31:39][ps].Identifier[31:40-31:50][generation]]])] * BinaryExpression[31:55-31:64][Identifier[31:55-31:58][max] - Identifier[31:61-31:64][min]]] + Identifier[31:69-31:72][min]])]]
				AssignmentStatement[32:9-32:23][MemberExpression[32:9-32:17][Identifier[32:9-32:11][ps].Identifier[32:12-32:17][value]] = Identifier[32:20-32:23][val]]
				ReturnStatement[33:9-33:19][Identifier[33:16-33:19][val]]
			]
		]
		AssignmentStatement[36:5-36:32][Identifier[36:5-36:12][seedVal] = CallExpression[36:15-36:32][MemberExpression[36:15-36:26][Identifier[36:15-36:17][me].Identifier[36:18-36:26][calcSeed]](Identifier[36:27-36:31][seed])]]
		AssignmentStatement[38:5-38:52][Identifier[38:5-38:8][val] = CallExpression[38:11-38:52][Identifier[38:11-38:16][floor](BinaryExpression[38:17-38:51][BinaryExpression[38:18-38:44][CallExpression[38:18-38:30][Identifier[38:18-38:21][rnd](Identifier[38:22-38:29][seedVal])] * BinaryExpression[38:34-38:43][Identifier[38:34-38:37][max] - Identifier[38:40-38:43][min]]] + Identifier[38:48-38:51][min]])]]
		AssignmentStatement[39:5-39:45][IndexExpression[39:5-39:15][Identifier[39:5-39:9][pool][Identifier[39:10-39:14][seed]]] = CallExpression[39:18-39:45][MemberExpression[39:18-39:31][Identifier[39:18-39:20][me].Identifier[39:21-39:31][createPool]](Identifier[39:32-39:39][seedVal], Identifier[39:41-39:44][val])]]
		ReturnStatement[41:5-41:15][Identifier[41:12-41:15][val]]
	]]
	AssignmentStatement[44:1-55:13][MemberExpression[44:1-44:11][Identifier[44:1-44:7][Random].Identifier[44:8-44:11][seq]] = Function[44:14-55:13][Identifier[44:23-44:26][min], Identifier[44:28-44:31][max], Identifier[44:33-44:37][seed], Identifier[44:39-44:45][amount], Identifier[44:47-44:55][keepPool] =>
		AssignmentStatement[45:5-45:14][Identifier[45:5-45:7][me] = Identifier[45:10-45:14][self]]
		AssignmentStatement[46:5-46:14][Identifier[46:5-46:10][index] = Literal[46:13-46:14][0]]
		AssignmentStatement[47:5-47:16][Identifier[47:5-47:11][result] = ListConstructor[47:14-47:16][]]
		WhileStatement[48:5-52:14][BinaryExpression[48:11-48:25][Identifier[48:11-48:16][index] < Identifier[48:19-48:25][amount]]
			AssignmentStatement[49:9-49:38][Identifier[49:9-49:13][temp] = CallExpression[49:16-49:38][MemberExpression[49:16-49:22][Identifier[49:16-49:18][me].Identifier[49:19-49:22][gen]](Identifier[49:23-49:26][min], Identifier[49:28-49:31][max], Identifier[49:33-49:37][seed])]]
			CallExpression[50:9-50:27][MemberExpression[50:9-50:20][Identifier[50:9-50:15][result].Identifier[50:16-50:20][push]](Identifier[50:21-50:25][temp])]
			AssignmentStatement[51:9-51:26][Identifier[51:9-51:14][index] = BinaryExpression[51:17-51:26][Identifier[51:17-51:22][index] + Literal[51:25-51:26][1]]]
		]
		IfStatement[53:5-53:52][
			IfShortcutClause[53:5-53:52][BinaryExpression[53:9-53:25][Identifier[53:9-53:17][keepPool] != Literal[53:21-53:25][true]]
				CallExpression[53:32-53:52][MemberExpression[53:32-53:46][MemberExpression[53:32-53:39][Identifier[53:32-53:34][me].Identifier[53:35-53:39][pool]].Identifier[53:40-53:46][remove]](Identifier[53:47-53:51][seed])]
			]
		]
		ReturnStatement[54:5-54:18][Identifier[54:12-54:18][result]]
	]]
	AssignmentStatement[57:1-59:13][MemberExpression[57:1-57:11][Identifier[57:1-57:7][Random].Identifier[57:8-57:11][get]] = Function[57:14-59:13][Identifier[57:23-57:26][min], Identifier[57:28-57:31][max] =>
		ReturnStatement[58:5-58:30][CallExpression[58:12-58:30][MemberExpression[58:12-58:20][Identifier[58:12-58:16][self].Identifier[58:17-58:20][gen]](Identifier[58:21-58:24][min], Identifier[58:26-58:29][max])]]
	]]
	CallExpression[61:1-61:27][Identifier[61:1-61:6][print](CallExpression[61:7-61:26][MemberExpression[61:7-61:17][Identifier[61:7-61:13][Random].Identifier[61:14-61:17][get]](Literal[61:18-61:21][100], Literal[61:22-61:25][500])])]
	CallExpression[62:1-62:39][Identifier[62:1-62:6][print](CallExpression[62:7-62:38][MemberExpression[62:7-62:17][Identifier[62:7-62:13][Random].Identifier[62:14-62:17][seq]](Literal[62:18-62:21][100], Literal[62:22-62:25][500], Literal[62:27-62:33][test], Literal[62:35-62:37][10])])]
]"
`;

exports[`parse default scripts shorthand.ms 1`] = `
"Chunk[1:1-51:34][
	IfStatement[1:1-1:29][
		IfShortcutClause[1:1-1:29][Literal[1:5-1:9][true]
			CallExpression[1:16-1:29][Identifier[1:16-1:21][print](Literal[1:22-1:28][true])]
		]
	]
	IfStatement[2:1-2:49][
		IfShortcutClause[2:1-2:35][Literal[2:5-2:10][false]
			CallExpression[2:17-2:30][Identifier[2:17-2:22][print](Literal[2:23-2:29][true])]
		]
		ElseShortcutClause[2:36-2:49][
			CallExpression[2:36-2:49][Identifier[2:36-2:41][print](Literal[2:42-2:48][true])]
		}]
	]
	CallExpression[3:1-3:13][Identifier[3:1-3:6][print](Literal[3:7-3:12][was])]
	IfStatement[4:1-8:7][
		IfClause[4:1-6:5][Literal[4:5-4:10][false]
			CallExpression[5:5-5:17][Identifier[5:5-5:10][print](Literal[5:11-5:16][false])]
		]
		ElseClause[6:5-8:7][
			CallExpression[7:5-7:16][Identifier[7:5-7:10][print](Literal[7:11-7:15][true])]
		}]
	]
	IfStatement[9:1-14:7][
		IfClause[9:1-11:5][Literal[9:5-9:10][false]
			CallExpression[10:5-10:17][Identifier[10:5-10:10][print](Literal[10:11-10:16][false])]
		]
		ElseClause[11:5-14:7][
			CallExpression[12:5-12:16][Identifier[12:5-12:10][print](Literal[12:11-12:15][true])]
			IfStatement[13:5-13:53][
				IfShortcutClause[13:5-13:39][Literal[13:9-13:14][false]
					CallExpression[13:21-13:34][Identifier[13:21-13:26][print](Literal[13:27-13:33][true])]
				]
				ElseShortcutClause[13:40-13:53][
					CallExpression[13:40-13:53][Identifier[13:40-13:45][print](Literal[13:46-13:52][true])]
				}]
			]
		}]
	]
	For[16:1-16:21][Identifier[16:5-16:6][i] in ListConstructor[16:10-16:13][]
		CallExpression[16:13-16:21][Identifier[16:13-16:18][print](Identifier[16:19-16:20][i])]
	]
	For[17:1-19:8][Identifier[17:5-17:6][b] in ListConstructor[17:10-17:12][]
		CallExpression[18:5-18:13][Identifier[18:5-18:10][print](Identifier[18:11-18:12][b])]
	]
	WhileStatement[20:1-20:21][BinaryExpression[20:8-20:13][Identifier[20:8-20:9][i] < Identifier[20:12-20:13][b]]
		AssignmentStatement[20:15-20:21][Identifier[20:15-20:16][i] = BinaryExpression[20:20-20:21][Identifier[20:15-20:16][i] + Literal[20:20-20:21][1]]]
	]
	WhileStatement[21:1-23:10][BinaryExpression[21:8-21:13][Identifier[21:8-21:9][b] < Identifier[21:12-21:13][i]]
		AssignmentStatement[22:5-22:11][Identifier[22:5-22:6][b] = BinaryExpression[22:10-22:11][Identifier[22:5-22:6][b] + Literal[22:10-22:11][1]]]
	]
	AssignmentStatement[24:1-26:13][Identifier[24:1-24:11][myFunction] = Function[24:14-26:13][Identifier[24:23-24:24][v] =>
		CallExpression[25:3-25:11][Identifier[25:3-25:8][print](Identifier[25:9-25:10][v])]
	]]
	AssignmentStatement[27:1-29:13][Identifier[27:1-27:14][otherFunction] = Function[27:17-29:13][Identifier[27:26-27:27][n] =>
		CallExpression[28:5-28:13][Identifier[28:5-28:10][print](Identifier[28:11-28:12][n])]
	]]
	IfStatement[31:1-32:7][
		IfClause[31:1-32:7][NegationExpression[31:4-31:12][not UnaryExpression[31:8-31:12][@ Identifier[31:9-31:12][ref]]]]
	]
	IfStatement[34:1-37:7][
		IfClause[34:1-36:5][Literal[34:4-34:8][true]
			AssignmentStatement[35:5-35:26][Identifier[35:5-35:18][elseSomething] = Literal[35:21-35:26][false]]
		]
		ElseClause[]
	]
	For[39:1-41:8][Identifier[39:5-39:6][c] in Identifier[39:10-39:15][clist]
		Comment[39:16-39:19][x]
		CallExpression[40:5-40:17][Identifier[40:5-40:10][print](Literal[40:11-40:16][moo])]
	]
	WhileStatement[43:1-45:10][Literal[43:7-43:11][true]
		Comment[43:12-43:15][x]
		CallExpression[44:5-44:17][Identifier[44:5-44:10][print](Literal[44:11-44:16][moo])]
	]
	IfStatement[47:1-49:7][
		IfClause[47:1-49:7][Literal[47:4-47:8][true]
			Comment[47:14-47:17][x]
			CallExpression[48:5-48:17][Identifier[48:5-48:10][print](Literal[48:11-48:16][moo])]
		]
	]
	IfStatement[51:1-51:34][
		IfShortcutClause[51:1-51:26][BinaryExpression[51:4-51:9][Identifier[51:4-51:5][x] < Literal[51:8-51:9][0]]
			ReturnStatement[51:15-51:21][null]
		]
		ElseShortcutClause[51:27-51:34][
			CallExpression[51:27-51:34][Identifier[51:27-51:32][print](Identifier[51:33-51:34][x])]
		}]
	]
]"
`;

exports[`parse default scripts shorthand.ms 2`] = `undefined`;

exports[`parse default scripts shorthand.ms 3`] = `25`;

exports[`parse default scripts shorthand.ms 4`] = `11`;

exports[`parse default scripts shorthand.ms unsafe 1`] = `
"Chunk[1:1-51:34][
	IfStatement[1:1-1:29][
		IfShortcutClause[1:1-1:29][Literal[1:5-1:9][true]
			CallExpression[1:16-1:29][Identifier[1:16-1:21][print](Literal[1:22-1:28][true])]
		]
	]
	IfStatement[2:1-2:49][
		IfShortcutClause[2:1-2:35][Literal[2:5-2:10][false]
			CallExpression[2:17-2:30][Identifier[2:17-2:22][print](Literal[2:23-2:29][true])]
		]
		ElseShortcutClause[2:36-2:49][
			CallExpression[2:36-2:49][Identifier[2:36-2:41][print](Literal[2:42-2:48][true])]
		}]
	]
	CallExpression[3:1-3:13][Identifier[3:1-3:6][print](Literal[3:7-3:12][was])]
	IfStatement[4:1-8:7][
		IfClause[4:1-6:5][Literal[4:5-4:10][false]
			CallExpression[5:5-5:17][Identifier[5:5-5:10][print](Literal[5:11-5:16][false])]
		]
		ElseClause[6:5-8:7][
			CallExpression[7:5-7:16][Identifier[7:5-7:10][print](Literal[7:11-7:15][true])]
		}]
	]
	IfStatement[9:1-14:7][
		IfClause[9:1-11:5][Literal[9:5-9:10][false]
			CallExpression[10:5-10:17][Identifier[10:5-10:10][print](Literal[10:11-10:16][false])]
		]
		ElseClause[11:5-14:7][
			CallExpression[12:5-12:16][Identifier[12:5-12:10][print](Literal[12:11-12:15][true])]
			IfStatement[13:5-13:53][
				IfShortcutClause[13:5-13:39][Literal[13:9-13:14][false]
					CallExpression[13:21-13:34][Identifier[13:21-13:26][print](Literal[13:27-13:33][true])]
				]
				ElseShortcutClause[13:40-13:53][
					CallExpression[13:40-13:53][Identifier[13:40-13:45][print](Literal[13:46-13:52][true])]
				}]
			]
		}]
	]
	For[16:1-16:21][Identifier[16:5-16:6][i] in ListConstructor[16:10-16:13][]
		CallExpression[16:13-16:21][Identifier[16:13-16:18][print](Identifier[16:19-16:20][i])]
	]
	For[17:1-19:8][Identifier[17:5-17:6][b] in ListConstructor[17:10-17:12][]
		CallExpression[18:5-18:13][Identifier[18:5-18:10][print](Identifier[18:11-18:12][b])]
	]
	WhileStatement[20:1-20:21][BinaryExpression[20:8-20:13][Identifier[20:8-20:9][i] < Identifier[20:12-20:13][b]]
		AssignmentStatement[20:15-20:21][Identifier[20:15-20:16][i] = BinaryExpression[20:20-20:21][Identifier[20:15-20:16][i] + Literal[20:20-20:21][1]]]
	]
	WhileStatement[21:1-23:10][BinaryExpression[21:8-21:13][Identifier[21:8-21:9][b] < Identifier[21:12-21:13][i]]
		AssignmentStatement[22:5-22:11][Identifier[22:5-22:6][b] = BinaryExpression[22:10-22:11][Identifier[22:5-22:6][b] + Literal[22:10-22:11][1]]]
	]
	AssignmentStatement[24:1-26:13][Identifier[24:1-24:11][myFunction] = Function[24:14-26:13][Identifier[24:23-24:24][v] =>
		CallExpression[25:3-25:11][Identifier[25:3-25:8][print](Identifier[25:9-25:10][v])]
	]]
	AssignmentStatement[27:1-29:13][Identifier[27:1-27:14][otherFunction] = Function[27:17-29:13][Identifier[27:26-27:27][n] =>
		CallExpression[28:5-28:13][Identifier[28:5-28:10][print](Identifier[28:11-28:12][n])]
	]]
	IfStatement[31:1-32:7][
		IfClause[31:1-32:7][NegationExpression[31:4-31:12][not UnaryExpression[31:8-31:12][@ Identifier[31:9-31:12][ref]]]]
	]
	IfStatement[34:1-37:7][
		IfClause[34:1-36:5][Literal[34:4-34:8][true]
			AssignmentStatement[35:5-35:26][Identifier[35:5-35:18][elseSomething] = Literal[35:21-35:26][false]]
		]
		ElseClause[]
	]
	For[39:1-41:8][Identifier[39:5-39:6][c] in Identifier[39:10-39:15][clist]
		Comment[39:16-39:19][x]
		CallExpression[40:5-40:17][Identifier[40:5-40:10][print](Literal[40:11-40:16][moo])]
	]
	WhileStatement[43:1-45:10][Literal[43:7-43:11][true]
		Comment[43:12-43:15][x]
		CallExpression[44:5-44:17][Identifier[44:5-44:10][print](Literal[44:11-44:16][moo])]
	]
	IfStatement[47:1-49:7][
		IfClause[47:1-49:7][Literal[47:4-47:8][true]
			Comment[47:14-47:17][x]
			CallExpression[48:5-48:17][Identifier[48:5-48:10][print](Literal[48:11-48:16][moo])]
		]
	]
	IfStatement[51:1-51:34][
		IfShortcutClause[51:1-51:26][BinaryExpression[51:4-51:9][Identifier[51:4-51:5][x] < Literal[51:8-51:9][0]]
			ReturnStatement[51:15-51:21][null]
		]
		ElseShortcutClause[51:27-51:34][
			CallExpression[51:27-51:34][Identifier[51:27-51:32][print](Identifier[51:33-51:34][x])]
		}]
	]
]"
`;

exports[`parse default scripts simple-object.src 1`] = `
"Chunk[1:1-9:18][
	AssignmentStatement[1:1-1:10][Identifier[1:1-1:5][test] = MapConstructor[1:8-1:10][]]
	AssignmentStatement[3:1-3:18][MemberExpression[3:1-3:10][Identifier[3:1-3:5][test].Identifier[3:6-3:10][here]] = Literal[3:13-3:18][was]]
	AssignmentStatement[5:1-7:13][MemberExpression[5:1-5:9][Identifier[5:1-5:5][test].Identifier[5:6-5:9][was]] = Function[5:12-7:13][ =>
		CallExpression[6:5-6:21][Identifier[6:5-6:10][print](MemberExpression[6:11-6:20][Identifier[6:11-6:15][self].Identifier[6:16-6:20][here]])]
	]]
	CallExpression[9:1-9:18][Identifier[9:1-9:6][print](CallExpression[9:7-9:17][MemberExpression[9:7-9:15][Identifier[9:7-9:11][test].Identifier[9:12-9:15][was]]()])]
]"
`;

exports[`parse default scripts simple-object.src 2`] = `undefined`;

exports[`parse default scripts simple-object.src 3`] = `1`;

exports[`parse default scripts simple-object.src 4`] = `3`;

exports[`parse default scripts simple-object.src unsafe 1`] = `
"Chunk[1:1-9:18][
	AssignmentStatement[1:1-1:10][Identifier[1:1-1:5][test] = MapConstructor[1:8-1:10][]]
	AssignmentStatement[3:1-3:18][MemberExpression[3:1-3:10][Identifier[3:1-3:5][test].Identifier[3:6-3:10][here]] = Literal[3:13-3:18][was]]
	AssignmentStatement[5:1-7:13][MemberExpression[5:1-5:9][Identifier[5:1-5:5][test].Identifier[5:6-5:9][was]] = Function[5:12-7:13][ =>
		CallExpression[6:5-6:21][Identifier[6:5-6:10][print](MemberExpression[6:11-6:20][Identifier[6:11-6:15][self].Identifier[6:16-6:20][here]])]
	]]
	CallExpression[9:1-9:18][Identifier[9:1-9:6][print](CallExpression[9:7-9:17][MemberExpression[9:7-9:15][Identifier[9:7-9:11][test].Identifier[9:12-9:15][was]]()])]
]"
`;

exports[`parse default scripts slice.ms 1`] = `
"Chunk[1:1-27:21][
	AssignmentStatement[1:1-13:13][Identifier[1:1-1:13][divideString] = Function[1:16-13:13][Identifier[1:25-1:28][str], Identifier[1:29-1:34][limit] =>
		AssignmentStatement[2:5-2:15][Identifier[2:5-2:11][offset] = Literal[2:14-2:15][0]]
		AssignmentStatement[3:5-3:21][Identifier[3:5-3:11][maxLen] = MemberExpression[3:14-3:21][Identifier[3:14-3:17][str].Identifier[3:18-3:21][len]]]
		AssignmentStatement[4:5-4:15][Identifier[4:5-4:10][frags] = ListConstructor[4:13-4:15][]]
		WhileStatement[6:5-10:14][BinaryExpression[6:11-6:26][Identifier[6:11-6:17][offset] < Identifier[6:20-6:26][maxLen]]
			AssignmentStatement[7:9-7:30][Identifier[7:9-7:13][next] = BinaryExpression[7:16-7:30][Identifier[7:16-7:22][offset] + Identifier[7:25-7:30][limit]]]
			CallExpression[8:9-8:37][MemberExpression[8:9-8:19][Identifier[8:9-8:14][frags].Identifier[8:15-8:19][push]](SliceExpression[8:20-8:36][Identifier[8:20-8:23][str][Identifier[8:24-8:30][offset]:Identifier[8:31-8:35][next]]])]
			AssignmentStatement[9:9-9:22][Identifier[9:9-9:15][offset] = Identifier[9:18-9:22][next]]
		]
		ReturnStatement[12:5-12:17][Identifier[12:12-12:17][frags]]
	]]
	CallExpression[15:1-15:59][Identifier[15:1-15:6][print](CallExpression[15:7-15:58][Identifier[15:7-15:19][divideString](Literal[15:20-15:55][blahhblahhblahhblahhblahhblahhgad], Literal[15:56-15:57][5])])]
	AssignmentStatement[17:1-17:81][MemberExpression[17:1-17:18][Identifier[17:1-17:5][test].Identifier[17:6-17:18][current_path]] = BinaryExpression[17:21-17:81][Literal[17:21-17:29][/home/] + SliceExpression[17:30-17:81][MemberExpression[17:30-17:47][IndexExpression[17:30-17:42][MemberExpression[17:30-17:38][Identifier[17:30-17:34][test].Identifier[17:35-17:38][moo]][BinaryNegatedExpression[17:39-17:41][- Literal[17:40-17:41][1]]]].Identifier[17:43-17:47][user]][BinaryExpression[17:48-17:79][CallExpression[17:48-17:77][MemberExpression[17:48-17:72][MemberExpression[17:48-17:64][IndexExpression[17:48-17:60][MemberExpression[17:48-17:56][Identifier[17:48-17:52][test].Identifier[17:53-17:56][bar]][BinaryNegatedExpression[17:57-17:59][- Literal[17:58-17:59][1]]]].Identifier[17:61-17:64][foo]].Identifier[17:65-17:72][indexOf]](Literal[17:73-17:76][@])] + Literal[17:78-17:79][1]]:EmptyExpression[17:79-17:80][]]]]]
	For[19:1-21:8][Identifier[19:5-19:6][i] in CallExpression[19:10-19:26][Identifier[19:10-19:15][range](Literal[19:16-19:17][0], BinaryExpression[19:18-19:25][MemberExpression[19:18-19:23][Identifier[19:18-19:19][s].Identifier[19:20-19:23][len]] - Literal[19:24-19:25][4]])]
		IfStatement[20:5-20:81][
			IfShortcutClause[20:5-20:59][CallExpression[20:8-20:28][MemberExpression[20:8-20:18][Identifier[20:8-20:9][f].Identifier[20:10-20:18][hasIndex]](SliceExpression[20:19-20:27][Identifier[20:19-20:20][s][Identifier[20:21-20:22][i]:BinaryExpression[20:23-20:26][Identifier[20:23-20:24][i] + Literal[20:25-20:26][3]]]])]
				AssignmentStatement[20:34-20:54][IndexExpression[20:34-20:52][IndexExpression[20:34-20:45][Identifier[20:34-20:35][f][SliceExpression[20:36-20:44][Identifier[20:36-20:37][s][Identifier[20:38-20:39][i]:BinaryExpression[20:40-20:43][Identifier[20:40-20:41][i] + Literal[20:42-20:43][3]]]]]][MemberExpression[20:46-20:51][Identifier[20:46-20:47][s].Identifier[20:48-20:51][len]]]] = Literal[20:53-20:54][1]]
			]
			ElseShortcutClause[20:60-20:81][
				AssignmentStatement[20:60-20:81][IndexExpression[20:60-20:71][Identifier[20:60-20:61][f][SliceExpression[20:62-20:70][Identifier[20:62-20:63][s][Identifier[20:64-20:65][i]:BinaryExpression[20:66-20:69][Identifier[20:66-20:67][i] + Literal[20:68-20:69][3]]]]]] = MapConstructor[20:72-20:81][
					MapKeyString[20:73-20:80][MemberExpression[20:73-20:78][Identifier[20:73-20:74][s].Identifier[20:75-20:78][len]]: Literal[20:79-20:80][1]]
				]]
			}]
		]
	]
	SliceExpression[23:1-23:8][Identifier[23:1-23:4][foo][Literal[23:5-23:6][1]:EmptyExpression[23:6-23:7][]]]
	SliceExpression[24:1-24:8][Identifier[24:1-24:4][foo][EmptyExpression[24:4-24:5][]:Literal[24:6-24:7][1]]]
	SliceExpression[25:1-25:14][Identifier[25:1-25:4][foo][SliceExpression[25:5-25:12][Identifier[25:5-25:8][foo][Literal[25:9-25:10][1]:EmptyExpression[25:10-25:11][]]]:EmptyExpression[25:12-25:13][]]]
	SliceExpression[26:1-26:14][Identifier[26:1-26:4][foo][EmptyExpression[26:4-26:5][]:SliceExpression[26:6-26:13][Identifier[26:6-26:9][foo][EmptyExpression[26:9-26:10][]:Literal[26:11-26:12][1]]]]]
	SliceExpression[27:1-27:21][Identifier[27:1-27:4][foo][SliceExpression[27:5-27:12][Identifier[27:5-27:8][foo][Literal[27:9-27:10][1]:EmptyExpression[27:10-27:11][]]]:SliceExpression[27:13-27:20][Identifier[27:13-27:16][foo][EmptyExpression[27:16-27:17][]:Literal[27:18-27:19][1]]]]]
]"
`;

exports[`parse default scripts slice.ms 2`] = `undefined`;

exports[`parse default scripts slice.ms 3`] = `21`;

exports[`parse default scripts slice.ms 4`] = `7`;

exports[`parse default scripts slice.ms unsafe 1`] = `
"Chunk[1:1-27:21][
	AssignmentStatement[1:1-13:13][Identifier[1:1-1:13][divideString] = Function[1:16-13:13][Identifier[1:25-1:28][str], Identifier[1:29-1:34][limit] =>
		AssignmentStatement[2:5-2:15][Identifier[2:5-2:11][offset] = Literal[2:14-2:15][0]]
		AssignmentStatement[3:5-3:21][Identifier[3:5-3:11][maxLen] = MemberExpression[3:14-3:21][Identifier[3:14-3:17][str].Identifier[3:18-3:21][len]]]
		AssignmentStatement[4:5-4:15][Identifier[4:5-4:10][frags] = ListConstructor[4:13-4:15][]]
		WhileStatement[6:5-10:14][BinaryExpression[6:11-6:26][Identifier[6:11-6:17][offset] < Identifier[6:20-6:26][maxLen]]
			AssignmentStatement[7:9-7:30][Identifier[7:9-7:13][next] = BinaryExpression[7:16-7:30][Identifier[7:16-7:22][offset] + Identifier[7:25-7:30][limit]]]
			CallExpression[8:9-8:37][MemberExpression[8:9-8:19][Identifier[8:9-8:14][frags].Identifier[8:15-8:19][push]](SliceExpression[8:20-8:36][Identifier[8:20-8:23][str][Identifier[8:24-8:30][offset]:Identifier[8:31-8:35][next]]])]
			AssignmentStatement[9:9-9:22][Identifier[9:9-9:15][offset] = Identifier[9:18-9:22][next]]
		]
		ReturnStatement[12:5-12:17][Identifier[12:12-12:17][frags]]
	]]
	CallExpression[15:1-15:59][Identifier[15:1-15:6][print](CallExpression[15:7-15:58][Identifier[15:7-15:19][divideString](Literal[15:20-15:55][blahhblahhblahhblahhblahhblahhgad], Literal[15:56-15:57][5])])]
	AssignmentStatement[17:1-17:81][MemberExpression[17:1-17:18][Identifier[17:1-17:5][test].Identifier[17:6-17:18][current_path]] = BinaryExpression[17:21-17:81][Literal[17:21-17:29][/home/] + SliceExpression[17:30-17:81][MemberExpression[17:30-17:47][IndexExpression[17:30-17:42][MemberExpression[17:30-17:38][Identifier[17:30-17:34][test].Identifier[17:35-17:38][moo]][BinaryNegatedExpression[17:39-17:41][- Literal[17:40-17:41][1]]]].Identifier[17:43-17:47][user]][BinaryExpression[17:48-17:79][CallExpression[17:48-17:77][MemberExpression[17:48-17:72][MemberExpression[17:48-17:64][IndexExpression[17:48-17:60][MemberExpression[17:48-17:56][Identifier[17:48-17:52][test].Identifier[17:53-17:56][bar]][BinaryNegatedExpression[17:57-17:59][- Literal[17:58-17:59][1]]]].Identifier[17:61-17:64][foo]].Identifier[17:65-17:72][indexOf]](Literal[17:73-17:76][@])] + Literal[17:78-17:79][1]]:EmptyExpression[17:79-17:80][]]]]]
	For[19:1-21:8][Identifier[19:5-19:6][i] in CallExpression[19:10-19:26][Identifier[19:10-19:15][range](Literal[19:16-19:17][0], BinaryExpression[19:18-19:25][MemberExpression[19:18-19:23][Identifier[19:18-19:19][s].Identifier[19:20-19:23][len]] - Literal[19:24-19:25][4]])]
		IfStatement[20:5-20:81][
			IfShortcutClause[20:5-20:59][CallExpression[20:8-20:28][MemberExpression[20:8-20:18][Identifier[20:8-20:9][f].Identifier[20:10-20:18][hasIndex]](SliceExpression[20:19-20:27][Identifier[20:19-20:20][s][Identifier[20:21-20:22][i]:BinaryExpression[20:23-20:26][Identifier[20:23-20:24][i] + Literal[20:25-20:26][3]]]])]
				AssignmentStatement[20:34-20:54][IndexExpression[20:34-20:52][IndexExpression[20:34-20:45][Identifier[20:34-20:35][f][SliceExpression[20:36-20:44][Identifier[20:36-20:37][s][Identifier[20:38-20:39][i]:BinaryExpression[20:40-20:43][Identifier[20:40-20:41][i] + Literal[20:42-20:43][3]]]]]][MemberExpression[20:46-20:51][Identifier[20:46-20:47][s].Identifier[20:48-20:51][len]]]] = Literal[20:53-20:54][1]]
			]
			ElseShortcutClause[20:60-20:81][
				AssignmentStatement[20:60-20:81][IndexExpression[20:60-20:71][Identifier[20:60-20:61][f][SliceExpression[20:62-20:70][Identifier[20:62-20:63][s][Identifier[20:64-20:65][i]:BinaryExpression[20:66-20:69][Identifier[20:66-20:67][i] + Literal[20:68-20:69][3]]]]]] = MapConstructor[20:72-20:81][
					MapKeyString[20:73-20:80][MemberExpression[20:73-20:78][Identifier[20:73-20:74][s].Identifier[20:75-20:78][len]]: Literal[20:79-20:80][1]]
				]]
			}]
		]
	]
	SliceExpression[23:1-23:8][Identifier[23:1-23:4][foo][Literal[23:5-23:6][1]:EmptyExpression[23:6-23:7][]]]
	SliceExpression[24:1-24:8][Identifier[24:1-24:4][foo][EmptyExpression[24:4-24:5][]:Literal[24:6-24:7][1]]]
	SliceExpression[25:1-25:14][Identifier[25:1-25:4][foo][SliceExpression[25:5-25:12][Identifier[25:5-25:8][foo][Literal[25:9-25:10][1]:EmptyExpression[25:10-25:11][]]]:EmptyExpression[25:12-25:13][]]]
	SliceExpression[26:1-26:14][Identifier[26:1-26:4][foo][EmptyExpression[26:4-26:5][]:SliceExpression[26:6-26:13][Identifier[26:6-26:9][foo][EmptyExpression[26:9-26:10][]:Literal[26:11-26:12][1]]]]]
	SliceExpression[27:1-27:21][Identifier[27:1-27:4][foo][SliceExpression[27:5-27:12][Identifier[27:5-27:8][foo][Literal[27:9-27:10][1]:EmptyExpression[27:10-27:11][]]]:SliceExpression[27:13-27:20][Identifier[27:13-27:16][foo][EmptyExpression[27:16-27:17][]:Literal[27:18-27:19][1]]]]]
]"
`;

exports[`parse default scripts slice.src 1`] = `
"Chunk[1:1-15:59][
	AssignmentStatement[1:1-13:13][Identifier[1:1-1:13][divideString] = Function[1:16-13:13][Identifier[1:25-1:28][str], Identifier[1:29-1:34][limit] =>
		AssignmentStatement[2:5-2:15][Identifier[2:5-2:11][offset] = Literal[2:14-2:15][0]]
		AssignmentStatement[3:5-3:21][Identifier[3:5-3:11][maxLen] = MemberExpression[3:14-3:21][Identifier[3:14-3:17][str].Identifier[3:18-3:21][len]]]
		AssignmentStatement[4:5-4:15][Identifier[4:5-4:10][frags] = ListConstructor[4:13-4:15][]]
		WhileStatement[6:5-10:14][BinaryExpression[6:11-6:26][Identifier[6:11-6:17][offset] < Identifier[6:20-6:26][maxLen]]
			AssignmentStatement[7:9-7:30][Identifier[7:9-7:13][next] = BinaryExpression[7:16-7:30][Identifier[7:16-7:22][offset] + Identifier[7:25-7:30][limit]]]
			CallExpression[8:9-8:37][MemberExpression[8:9-8:19][Identifier[8:9-8:14][frags].Identifier[8:15-8:19][push]](SliceExpression[8:20-8:36][Identifier[8:20-8:23][str][Identifier[8:24-8:30][offset]:Identifier[8:31-8:35][next]]])]
			AssignmentStatement[9:9-9:22][Identifier[9:9-9:15][offset] = Identifier[9:18-9:22][next]]
		]
		ReturnStatement[12:5-12:17][Identifier[12:12-12:17][frags]]
	]]
	CallExpression[15:1-15:59][Identifier[15:1-15:6][print](CallExpression[15:7-15:58][Identifier[15:7-15:19][divideString](Literal[15:20-15:55][blahhblahhblahhblahhblahhblahhgad], Literal[15:56-15:57][5])])]
]"
`;

exports[`parse default scripts slice.src 2`] = `undefined`;

exports[`parse default scripts slice.src 3`] = `3`;

exports[`parse default scripts slice.src 4`] = `1`;

exports[`parse default scripts slice.src unsafe 1`] = `
"Chunk[1:1-15:59][
	AssignmentStatement[1:1-13:13][Identifier[1:1-1:13][divideString] = Function[1:16-13:13][Identifier[1:25-1:28][str], Identifier[1:29-1:34][limit] =>
		AssignmentStatement[2:5-2:15][Identifier[2:5-2:11][offset] = Literal[2:14-2:15][0]]
		AssignmentStatement[3:5-3:21][Identifier[3:5-3:11][maxLen] = MemberExpression[3:14-3:21][Identifier[3:14-3:17][str].Identifier[3:18-3:21][len]]]
		AssignmentStatement[4:5-4:15][Identifier[4:5-4:10][frags] = ListConstructor[4:13-4:15][]]
		WhileStatement[6:5-10:14][BinaryExpression[6:11-6:26][Identifier[6:11-6:17][offset] < Identifier[6:20-6:26][maxLen]]
			AssignmentStatement[7:9-7:30][Identifier[7:9-7:13][next] = BinaryExpression[7:16-7:30][Identifier[7:16-7:22][offset] + Identifier[7:25-7:30][limit]]]
			CallExpression[8:9-8:37][MemberExpression[8:9-8:19][Identifier[8:9-8:14][frags].Identifier[8:15-8:19][push]](SliceExpression[8:20-8:36][Identifier[8:20-8:23][str][Identifier[8:24-8:30][offset]:Identifier[8:31-8:35][next]]])]
			AssignmentStatement[9:9-9:22][Identifier[9:9-9:15][offset] = Identifier[9:18-9:22][next]]
		]
		ReturnStatement[12:5-12:17][Identifier[12:12-12:17][frags]]
	]]
	CallExpression[15:1-15:59][Identifier[15:1-15:6][print](CallExpression[15:7-15:58][Identifier[15:7-15:19][divideString](Literal[15:20-15:55][blahhblahhblahhblahhblahhblahhgad], Literal[15:56-15:57][5])])]
]"
`;

exports[`parse default scripts unary.ms 1`] = `
"Chunk[1:1-11:1][
	AssignmentStatement[1:1-3:13][Identifier[1:1-1:5][test] = Function[1:8-3:13][ =>
		ReturnStatement[2:5-2:16][Literal[2:12-2:16][null]]
	]]
	CallExpression[5:1-5:45][Identifier[5:1-5:6][print](LogicalExpression[5:7-5:44][UnaryExpression[5:7-5:19][@ MemberExpression[5:8-5:19][Literal[5:8-5:13][was].Identifier[5:14-5:19][split]]] and LogicalExpression[5:25-5:43][Literal[5:25-5:30][false] or NegationExpression[5:34-5:43][not Literal[5:38-5:43][false]]]])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](UnaryExpression[6:7-6:46][@ LogicalExpression[6:9-6:45][MemberExpression[6:9-6:20][Literal[6:9-6:14][was].Identifier[6:15-6:20][split]] and LogicalExpression[6:26-6:44][Literal[6:26-6:31][false] or NegationExpression[6:35-6:44][not Literal[6:39-6:44][false]]]]])]
	CallExpression[7:1-7:48][Identifier[7:1-7:6][print](LogicalExpression[7:7-7:47][NegationExpression[7:7-7:22][not MemberExpression[7:11-7:22][Literal[7:11-7:16][was].Identifier[7:17-7:22][split]]] and LogicalExpression[7:28-7:46][Literal[7:28-7:33][false] or NegationExpression[7:37-7:46][not Literal[7:41-7:46][false]]]])]
	CallExpression[8:1-8:50][Identifier[8:1-8:6][print](NegationExpression[8:7-8:49][not LogicalExpression[8:12-8:48][MemberExpression[8:12-8:23][Literal[8:12-8:17][was].Identifier[8:18-8:23][split]] and LogicalExpression[8:29-8:47][Literal[8:29-8:34][false] or NegationExpression[8:38-8:47][not Literal[8:42-8:47][false]]]]])]
	CallExpression[9:1-9:14][Identifier[9:1-9:6][print](BinaryExpression[9:7-9:13][BinaryNegatedExpression[9:7-9:9][- Literal[9:8-9:9][1]] + Literal[9:12-9:13][2]])]
	CallExpression[10:1-10:16][Identifier[10:1-10:6][print](BinaryNegatedExpression[10:7-10:15][- BinaryExpression[10:9-10:14][Literal[10:9-10:10][1] + Literal[10:13-10:14][2]]])]
]"
`;

exports[`parse default scripts unary.ms 2`] = `undefined`;

exports[`parse default scripts unary.ms 3`] = `17`;

exports[`parse default scripts unary.ms 4`] = `1`;

exports[`parse default scripts unary.ms unsafe 1`] = `
"Chunk[1:1-11:1][
	AssignmentStatement[1:1-3:13][Identifier[1:1-1:5][test] = Function[1:8-3:13][ =>
		ReturnStatement[2:5-2:16][Literal[2:12-2:16][null]]
	]]
	CallExpression[5:1-5:45][Identifier[5:1-5:6][print](LogicalExpression[5:7-5:44][UnaryExpression[5:7-5:19][@ MemberExpression[5:8-5:19][Literal[5:8-5:13][was].Identifier[5:14-5:19][split]]] and LogicalExpression[5:25-5:43][Literal[5:25-5:30][false] or NegationExpression[5:34-5:43][not Literal[5:38-5:43][false]]]])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](UnaryExpression[6:7-6:46][@ LogicalExpression[6:9-6:45][MemberExpression[6:9-6:20][Literal[6:9-6:14][was].Identifier[6:15-6:20][split]] and LogicalExpression[6:26-6:44][Literal[6:26-6:31][false] or NegationExpression[6:35-6:44][not Literal[6:39-6:44][false]]]]])]
	CallExpression[7:1-7:48][Identifier[7:1-7:6][print](LogicalExpression[7:7-7:47][NegationExpression[7:7-7:22][not MemberExpression[7:11-7:22][Literal[7:11-7:16][was].Identifier[7:17-7:22][split]]] and LogicalExpression[7:28-7:46][Literal[7:28-7:33][false] or NegationExpression[7:37-7:46][not Literal[7:41-7:46][false]]]])]
	CallExpression[8:1-8:50][Identifier[8:1-8:6][print](NegationExpression[8:7-8:49][not LogicalExpression[8:12-8:48][MemberExpression[8:12-8:23][Literal[8:12-8:17][was].Identifier[8:18-8:23][split]] and LogicalExpression[8:29-8:47][Literal[8:29-8:34][false] or NegationExpression[8:38-8:47][not Literal[8:42-8:47][false]]]]])]
	CallExpression[9:1-9:14][Identifier[9:1-9:6][print](BinaryExpression[9:7-9:13][BinaryNegatedExpression[9:7-9:9][- Literal[9:8-9:9][1]] + Literal[9:12-9:13][2]])]
	CallExpression[10:1-10:16][Identifier[10:1-10:6][print](BinaryNegatedExpression[10:7-10:15][- BinaryExpression[10:9-10:14][Literal[10:9-10:10][1] + Literal[10:13-10:14][2]]])]
]"
`;

exports[`parse default scripts unary.src 1`] = `
"Chunk[1:1-11:1][
	AssignmentStatement[1:1-3:13][Identifier[1:1-1:5][test] = Function[1:8-3:13][ =>
		ReturnStatement[2:5-2:16][Literal[2:12-2:16][null]]
	]]
	CallExpression[5:1-5:45][Identifier[5:1-5:6][print](LogicalExpression[5:7-5:44][UnaryExpression[5:7-5:19][@ MemberExpression[5:8-5:19][Literal[5:8-5:13][was].Identifier[5:14-5:19][split]]] and LogicalExpression[5:25-5:43][Literal[5:25-5:30][false] or NegationExpression[5:34-5:43][not Literal[5:38-5:43][false]]]])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](UnaryExpression[6:7-6:46][@ LogicalExpression[6:9-6:45][MemberExpression[6:9-6:20][Literal[6:9-6:14][was].Identifier[6:15-6:20][split]] and LogicalExpression[6:26-6:44][Literal[6:26-6:31][false] or NegationExpression[6:35-6:44][not Literal[6:39-6:44][false]]]]])]
	CallExpression[7:1-7:48][Identifier[7:1-7:6][print](LogicalExpression[7:7-7:47][NegationExpression[7:7-7:22][not MemberExpression[7:11-7:22][Literal[7:11-7:16][was].Identifier[7:17-7:22][split]]] and LogicalExpression[7:28-7:46][Literal[7:28-7:33][false] or NegationExpression[7:37-7:46][not Literal[7:41-7:46][false]]]])]
	CallExpression[8:1-8:50][Identifier[8:1-8:6][print](NegationExpression[8:7-8:49][not LogicalExpression[8:12-8:48][MemberExpression[8:12-8:23][Literal[8:12-8:17][was].Identifier[8:18-8:23][split]] and LogicalExpression[8:29-8:47][Literal[8:29-8:34][false] or NegationExpression[8:38-8:47][not Literal[8:42-8:47][false]]]]])]
	CallExpression[9:1-9:14][Identifier[9:1-9:6][print](BinaryExpression[9:7-9:13][BinaryNegatedExpression[9:7-9:9][- Literal[9:8-9:9][1]] + Literal[9:12-9:13][2]])]
	CallExpression[10:1-10:16][Identifier[10:1-10:6][print](BinaryNegatedExpression[10:7-10:15][- BinaryExpression[10:9-10:14][Literal[10:9-10:10][1] + Literal[10:13-10:14][2]]])]
]"
`;

exports[`parse default scripts unary.src 2`] = `undefined`;

exports[`parse default scripts unary.src 3`] = `17`;

exports[`parse default scripts unary.src 4`] = `1`;

exports[`parse default scripts unary.src unsafe 1`] = `
"Chunk[1:1-11:1][
	AssignmentStatement[1:1-3:13][Identifier[1:1-1:5][test] = Function[1:8-3:13][ =>
		ReturnStatement[2:5-2:16][Literal[2:12-2:16][null]]
	]]
	CallExpression[5:1-5:45][Identifier[5:1-5:6][print](LogicalExpression[5:7-5:44][UnaryExpression[5:7-5:19][@ MemberExpression[5:8-5:19][Literal[5:8-5:13][was].Identifier[5:14-5:19][split]]] and LogicalExpression[5:25-5:43][Literal[5:25-5:30][false] or NegationExpression[5:34-5:43][not Literal[5:38-5:43][false]]]])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](UnaryExpression[6:7-6:46][@ LogicalExpression[6:9-6:45][MemberExpression[6:9-6:20][Literal[6:9-6:14][was].Identifier[6:15-6:20][split]] and LogicalExpression[6:26-6:44][Literal[6:26-6:31][false] or NegationExpression[6:35-6:44][not Literal[6:39-6:44][false]]]]])]
	CallExpression[7:1-7:48][Identifier[7:1-7:6][print](LogicalExpression[7:7-7:47][NegationExpression[7:7-7:22][not MemberExpression[7:11-7:22][Literal[7:11-7:16][was].Identifier[7:17-7:22][split]]] and LogicalExpression[7:28-7:46][Literal[7:28-7:33][false] or NegationExpression[7:37-7:46][not Literal[7:41-7:46][false]]]])]
	CallExpression[8:1-8:50][Identifier[8:1-8:6][print](NegationExpression[8:7-8:49][not LogicalExpression[8:12-8:48][MemberExpression[8:12-8:23][Literal[8:12-8:17][was].Identifier[8:18-8:23][split]] and LogicalExpression[8:29-8:47][Literal[8:29-8:34][false] or NegationExpression[8:38-8:47][not Literal[8:42-8:47][false]]]]])]
	CallExpression[9:1-9:14][Identifier[9:1-9:6][print](BinaryExpression[9:7-9:13][BinaryNegatedExpression[9:7-9:9][- Literal[9:8-9:9][1]] + Literal[9:12-9:13][2]])]
	CallExpression[10:1-10:16][Identifier[10:1-10:6][print](BinaryNegatedExpression[10:7-10:15][- BinaryExpression[10:9-10:14][Literal[10:9-10:10][1] + Literal[10:13-10:14][2]]])]
]"
`;
